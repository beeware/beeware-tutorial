msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-31 22:29+0000\n"
"PO-Revision-Date: 2024-04-10 21:02+0000\n"
"Last-Translator: sus <jeffpeng2012@gmail.com>\n"
"Language-Team: Chinese (Traditional) <https://hosted.weblate.org/projects/"
"beeware/tutorial/tutorial-4/zh_Hant/>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 3.15.6\n"

#: docs/en/tutorial/tutorial-4.md:1
#, fuzzy
msgid "Tutorial 4 - Updating your application"
msgstr "教程 4 - 更新您的應用程式"

#: docs/en/tutorial/tutorial-4.md:3
#, fuzzy
msgid ""
"In the last tutorial, we packaged our application as a native application. "
"If you're dealing with a real-world app, that isn't going to be the end of "
"the story - you'll likely do some testing, discover problems, and need to "
"make some changes. Even if your application is perfect, you'll eventually "
"want to publish version 2 of your application with improvements."
msgstr ""
"在上一個教程中，我們將應用程式打包為本機應用程式。如果您正在處理現實世界的應"
"用程序，這不會是故事的結局 - "
"您可能會進行一些測試，發現問題，並需要進行一些更改。即使您的應用程式非常完美"
"，您最終也會希望發布經過改進的應用程式的第 2 版。"

#: docs/en/tutorial/tutorial-4.md:10
#, fuzzy
msgid "So - how do you update your installed app when you make code changes?"
msgstr "那麼 - 當您更改程式碼時如何更新已安裝的應用程式？"

#: docs/en/tutorial/tutorial-4.md:12
#, fuzzy
msgid "Updating application code"
msgstr "更新應用程式程式碼"

#: docs/en/tutorial/tutorial-4.md:14
#, fuzzy
msgid ""
"Our application currently prints to the console when you press the button. "
"However, GUI applications shouldn't really use the console for output. They "
"need to use dialogs to communicate with users."
msgstr "目前，當您按下按鈕時，我們的應用程式會列印到控制台。然而，GUI "
"應用程式不應該真正使用控制台進行輸出。他們需要使用對話框與使用者進行交流。"

#: docs/en/tutorial/tutorial-4.md:18
#, fuzzy
msgid ""
"Let's add a dialog box to say hello, instead of writing to the console. "
"Modify the `say_hello` callback so it looks like this:"
msgstr "讓我們新增一個對話框來打招呼，而不是寫入控制台。修改`say_hello`回調，使其看起"
"來像這樣:"

#: docs/en/tutorial/tutorial-4.md:31
msgid ""
"We need to make the method `async` so that when we display the dialog, the "
"rest of the application continues to run. Don't worry about this detail too "
"much right now - we'll give a more detailed explanation in [Tutorial 8]{1}."
msgstr ""

#: docs/en/tutorial/tutorial-4.md:36
#, fuzzy
msgid ""
"This directs Toga to open a modal dialog box when the button is pressed."
msgstr "這會指示 Toga 在按下按鈕時開啟模式對話方塊。"

#: docs/en/tutorial/tutorial-4.md:38
#, fuzzy
msgid ""
"If you run `briefcase dev`, enter a name, and press the button, you'll see "
"the new dialog box:"
msgstr "如果執行`briefcase dev`，輸入名稱，然後按按鈕，您將看到新的對話方塊："

#: docs/en/tutorial/tutorial-4.md:41
#: docs/en/tutorial/tutorial-4.md:87
#: docs/en/tutorial/tutorial-4.md:204
msgid "/// tab | macOS"
msgstr ""

#: docs/en/tutorial/tutorial-4.md:43
msgid "![Hello World Tutorial 4 dialog, on macOS]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-4.md:45
#: docs/en/tutorial/tutorial-4.md:55
#: docs/en/tutorial/tutorial-4.md:65
msgid "/// caption"
msgstr ""

#: docs/en/tutorial/tutorial-4.md:47
#: docs/en/tutorial/tutorial-4.md:49
#: docs/en/tutorial/tutorial-4.md:57
#: docs/en/tutorial/tutorial-4.md:59
#: docs/en/tutorial/tutorial-4.md:67
#: docs/en/tutorial/tutorial-4.md:69
#: docs/en/tutorial/tutorial-4.md:101
#: docs/en/tutorial/tutorial-4.md:124
#: docs/en/tutorial/tutorial-4.md:140
#: docs/en/tutorial/tutorial-4.md:157
#: docs/en/tutorial/tutorial-4.md:225
#: docs/en/tutorial/tutorial-4.md:254
#: docs/en/tutorial/tutorial-4.md:272
msgid "///"
msgstr ""

#: docs/en/tutorial/tutorial-4.md:51
#: docs/en/tutorial/tutorial-4.md:103
#: docs/en/tutorial/tutorial-4.md:227
msgid "/// tab | Linux"
msgstr ""

#: docs/en/tutorial/tutorial-4.md:53
msgid "![Hello World Tutorial 4 dialog, on Linux]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-4.md:61
#: docs/en/tutorial/tutorial-4.md:126
#: docs/en/tutorial/tutorial-4.md:256
msgid "/// tab | Windows"
msgstr ""

#: docs/en/tutorial/tutorial-4.md:63
msgid "![Hello World Tutorial 4 dialog, on Windows]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-4.md:71
#, fuzzy
msgid "However, if you run `briefcase run`, the dialog box won't appear."
msgstr "但是，如果執行`briefcase run`，則不會出現該對話方塊。"

#: docs/en/tutorial/tutorial-4.md:73
msgid ""
"Why is this? Well, `briefcase dev` operates by running your code in place - "
"it tries to produce as realistic runtime environment for your code as "
"possible, but it doesn't provide or use any of the platform infrastructure "
"for wrapping your code as an application. Part of the process of packaging "
"your app involves copying your code *into* the application bundle - and at "
"the moment, your application still has the old code in it."
msgstr ""

#: docs/en/tutorial/tutorial-4.md:81
#, fuzzy
msgid ""
"So - we need to tell briefcase to update your app, copying in the new "
"version of the code. We *could* do this by deleting the old platform "
"directory and starting from scratch. However, Briefcase provides an easier "
"way - you can update the code for your existing bundled application:"
msgstr ""
"因此 - "
"我們需要告訴公文包更新您的應用程序，複製新版本的代碼。我們*可以*透過刪除舊平"
"台目錄並從頭開始來做到這一點。但是，Briefcase 提供了一種更簡單的方法 - "
"您可以更新現有捆綁應用程式的程式碼："

#: docs/en/tutorial/tutorial-4.md:142
#, fuzzy
msgid ""
"If Briefcase can't find the scaffolded template, it will automatically "
"invoke `create` to generate a fresh scaffold."
msgstr "如果Briefcase找不到鷹架模板，它會自動呼叫`create`來產生一個新的鷹架。"

#: docs/en/tutorial/tutorial-4.md:145
#, fuzzy
msgid ""
"Now that we've updated the installer code, we can then run `briefcase build` "
"to re-compile the app, `briefcase run` to run the updated app, and `"
"briefcase package` to repackage the application for distribution."
msgstr ""
"現在我們已經更新了安裝程式碼，然後我們可以運行`briefcase "
"build`來重新編譯應用程序，運行`briefcase "
"run`來運行更新後的應用程序，以及運行`briefcase "
"package`來重新打包應用程式用於分發。"

#: docs/en/tutorial/tutorial-4.md:150
msgid "/// note | Note"
msgstr ""

#: docs/en/tutorial/tutorial-4.md:152
#, fuzzy
msgid ""
"macOS users, remember that as noted in [Tutorial 3]{1}, for the tutorial we "
"recommend running `briefcase package` with the `--adhoc-sign` flag to avoid "
"the complexity of setting up a code signing identity and keep the tutorial "
"as simple as possible."
msgstr ""
"（macOS 用戶，請記住，如 [教學 3 所述<tutorial-3>`，對於本教程，我們建議使用"
"`--adhoc-sign`標誌運行`briefcase "
"package`，以避免設置代碼簽名身份的複雜性，並使教程盡可能簡單。）"

#: docs/en/tutorial/tutorial-4.md:159
#, fuzzy
msgid "Update and run in one step"
msgstr "一步更新並運行"

#: docs/en/tutorial/tutorial-4.md:161
#, fuzzy
msgid ""
"If you're rapidly iterating code changes, you'll likely want to make a code "
"change, update the application, and immediately re-run your application. For "
"most purposes, developer mode (`briefcase dev`) will be the easiest way to "
"do this sort of rapid iteration; however, if you're testing something about "
"how your application runs as a native binary, or hunting a bug that only "
"manifests when your application is in packaged form, you may need to use "
"repeated calls to `briefcase run`. To simplify the process of updating and "
"running the bundled app, Briefcase has a shortcut to support this usage "
"pattern - the `-u` (or `--update`) option on the `run` command."
msgstr ""
"如果您快速迭代程式碼更改，您可能需要更改程式碼、更新應用程序，然後立即重新執"
"行您的應用程式。對於大多數目的，開發人員模式（`briefcase "
"dev`）將是進行這種快速迭代的最簡單方法；但是，如果您正在測試應用程式如何作為"
"本機二進位檔案運行，或者尋找僅在應用程式處於打包形式時才會出現的錯誤，則可能"
"需要重複調用`briefcase run`。為了簡化更新和執行捆綁應用程式的過程，Briefcase "
"有一個快捷方式來支援這種使用模式 - `run` 命令上的`-u`（或`--update`）選項。"

#: docs/en/tutorial/tutorial-4.md:172
#, fuzzy
msgid ""
"Let's try making another change. You may have noticed that if you don't type "
"a name in the text input box, the dialog will say \"Hello, \". Let's modify "
"the `say_hello` function again to handle this edge case."
msgstr ""
"讓我們嘗試進行另一個更改。您可能已經注意到，如果您不在文字輸入方塊中鍵入姓名"
"，則對話方塊將顯示 \"Hello，\"。讓我們再次修改 `say_hello` "
"函數來處理這種邊緣情況。"

#: docs/en/tutorial/tutorial-4.md:176
#, fuzzy
msgid ""
"At the top of the file, between the imports and the `class HelloWorld` "
"definition, add a utility method to generate an appropriate greeting "
"depending on the value of the name that has been provided:"
msgstr "在檔案頂部的匯入和`class "
"HelloWorld`定義之間，新增實用程式方法以根據已提供的名稱值產生適當的問候語："

#: docs/en/tutorial/tutorial-4.md:188
#, fuzzy
msgid "Then, modify the `say_hello` callback to use this new utility method:"
msgstr "然後，修改`say_hello`回調以使用這個新的實用方法："

#: docs/en/tutorial/tutorial-4.md:200
#, fuzzy
msgid ""
"Run your app in development mode (with `briefcase dev`) to confirm that the "
"new logic works; then update, build and run the app with one command:"
msgstr "在開發模式下運行您的應用程式（使用`briefcase "
"dev`）以確認新邏輯有效；然後使用一個命令更新、建置和運行應用程式："

#: docs/en/tutorial/tutorial-4.md:274
#, fuzzy
msgid ""
"The package command also accepts the `-u` argument, so if you make a change "
"to your application code and want to repackage immediately, you can run `"
"briefcase package -u`."
msgstr ""
"package "
"命令也接受`-u`參數，因此如果您對應用程式程式碼進行了更改並希望立即重新打包，"
"則可以運行`briefcase package -u`。"

#: docs/en/tutorial/tutorial-4.md:278
msgid "Next steps"
msgstr "下一步"

#: docs/en/tutorial/tutorial-4.md:280
#, fuzzy
msgid ""
"We now have our application packaged for distribution on desktop platforms, "
"and we've been able to update the code in our application."
msgstr "現在，我們已經將應用程式打包以便在桌面平台上分發，並且我們已經能夠更新應用程"
"式中的程式碼。"

#: docs/en/tutorial/tutorial-4.md:283
msgid ""
"But what about mobile? In [Tutorial 5]{1}, we'll convert our application "
"into a mobile application, and deploy it onto a device simulator, and onto a "
"phone."
msgstr ""

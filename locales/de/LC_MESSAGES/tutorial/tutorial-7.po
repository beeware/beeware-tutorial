msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-21 16:18-0400\n"
"PO-Revision-Date: 2025-08-19 23:52+0000\n"
"Last-Translator: Russell Keith-Magee <russell@keith-magee.com>\n"
"Language-Team: German <https://hosted.weblate.org/projects/beeware/tutorial/"
"tutorial-7/de/>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 3.15.6\n"

#: docs/en/tutorial/tutorial-7.md:1
msgid "Tutorial 7 - Get this (third-)party started"
msgstr "Tutorial 7 – Starten Sie diese (Dritt-)Anwendung"

#: docs/en/tutorial/tutorial-7.md:3
msgid ""
"So far, the app we've built has only used our own code, plus the code "
"provided by BeeWare. However, in a real-world app, you'll likely want to use "
"a third-party library, downloaded from the Python Package Index (PyPI)."
msgstr ""
"Bisher hat die von uns entwickelte App nur unseren eigenen Code sowie den "
"von BeeWare bereitgestellten Code verwendet. In einer realen App werden Sie "
"jedoch wahrscheinlich eine Bibliothek eines Drittanbieters verwenden wollen, "
"die Sie aus dem Python Package Index (PyPI) herunterladen können."

#: docs/en/tutorial/tutorial-7.md:8
msgid "Let's modify our app to include a third-party library."
msgstr ""
"Lassen Sie uns unsere App so ändern, dass sie eine Bibliothek eines "
"Drittanbieters enthält."

#: docs/en/tutorial/tutorial-7.md:10
msgid "Adding a package"
msgstr "Paket hinzufügen"

#: docs/en/tutorial/tutorial-7.md:12
msgid ""
"Let's modify our application to say a little bit more than just "
"\"Hi, there!\"."
msgstr ""
"Lassen Sie uns unsere Anwendung so ändern, dass sie etwas mehr sagt als nur "
"„Hallo!“."

#: docs/en/tutorial/tutorial-7.md:15
msgid ""
"To generate some more interesting text for the dialog, we're going to use a "
"library called [Faker]{1}. Faker is a Python package that generates fake "
"content, including names and text blocks. The names and words in the text "
"block are generated from an arbitrary list of words provided by Faker. We're "
"going to use Faker to construct a fake message, as if someone is responding "
"to the user."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:23
msgid ""
"We start by adding `faker` to our app. Add an import to the top of the "
"`app.py` to import `faker`:"
msgstr ""
"Fügen wir einen `httpx`-API-Aufruf zu unserer Anwendung hinzu. Fügen Sie "
"einen Import am Anfang der `app.py` hinzu, um `httpx` zu importieren:"

#: docs/en/tutorial/tutorial-7.md:30
msgid "Then modify the `say_hello()` callback so it looks like this:"
msgstr ""
"Dann ändern Sie den Callback `say_hello()` so, dass er wie folgt aussieht:"

#: docs/en/tutorial/tutorial-7.md:43
msgid ""
"Let's run our updated app in Briefcase developer mode to check that our "
"change has worked."
msgstr ""
"Führen wir unsere aktualisierte Anwendung im Briefcase-Entwicklermodus aus, "
"um zu prüfen, ob unsere Änderung funktioniert."

#: docs/en/tutorial/tutorial-7.md:46
#: docs/en/tutorial/tutorial-7.md:130
#: docs/en/tutorial/tutorial-7.md:207
#: docs/en/tutorial/tutorial-7.md:555
msgid "/// tab | macOS"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:66
#: docs/en/tutorial/tutorial-7.md:88
#: docs/en/tutorial/tutorial-7.md:110
#: docs/en/tutorial/tutorial-7.md:117
#: docs/en/tutorial/tutorial-7.md:124
#: docs/en/tutorial/tutorial-7.md:144
#: docs/en/tutorial/tutorial-7.md:146
#: docs/en/tutorial/tutorial-7.md:162
#: docs/en/tutorial/tutorial-7.md:164
#: docs/en/tutorial/tutorial-7.md:180
#: docs/en/tutorial/tutorial-7.md:182
#: docs/en/tutorial/tutorial-7.md:189
#: docs/en/tutorial/tutorial-7.md:196
#: docs/en/tutorial/tutorial-7.md:245
#: docs/en/tutorial/tutorial-7.md:247
#: docs/en/tutorial/tutorial-7.md:302
#: docs/en/tutorial/tutorial-7.md:342
#: docs/en/tutorial/tutorial-7.md:344
#: docs/en/tutorial/tutorial-7.md:419
#: docs/en/tutorial/tutorial-7.md:467
#: docs/en/tutorial/tutorial-7.md:576
#: docs/en/tutorial/tutorial-7.md:605
#: docs/en/tutorial/tutorial-7.md:628
#: docs/en/tutorial/tutorial-7.md:647
#: docs/en/tutorial/tutorial-7.md:671
#: docs/en/tutorial/tutorial-7.md:682
msgid "///"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:68
#: docs/en/tutorial/tutorial-7.md:148
#: docs/en/tutorial/tutorial-7.md:249
#: docs/en/tutorial/tutorial-7.md:578
msgid "/// tab | Linux"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:90
#: docs/en/tutorial/tutorial-7.md:166
#: docs/en/tutorial/tutorial-7.md:304
#: docs/en/tutorial/tutorial-7.md:607
msgid "/// tab | Windows"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:112
#: docs/en/tutorial/tutorial-7.md:184
#: docs/en/tutorial/tutorial-7.md:346
#: docs/en/tutorial/tutorial-7.md:630
msgid "/// tab | Android"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:114
#: docs/en/tutorial/tutorial-7.md:186
msgid ""
"You can't run an Android app in developer mode - use the instructions for "
"your chosen desktop platform."
msgstr ""
"Sie können eine Android-App nicht im Entwicklermodus ausführen – befolgen "
"Sie die Anweisungen für die von Ihnen gewählte Desktop-Plattform."

#: docs/en/tutorial/tutorial-7.md:119
#: docs/en/tutorial/tutorial-7.md:191
#: docs/en/tutorial/tutorial-7.md:421
#: docs/en/tutorial/tutorial-7.md:649
msgid "/// tab | iOS"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:121
#: docs/en/tutorial/tutorial-7.md:193
msgid ""
"You can't run an iOS app in developer mode - use the instructions for your "
"chosen desktop platform."
msgstr ""
"Sie können eine iOS-App nicht im Entwicklermodus ausführen – befolgen Sie "
"die Anweisungen für die von Ihnen gewählte Desktop-Plattform."

#: docs/en/tutorial/tutorial-7.md:126
#, fuzzy
msgid ""
"What happened? We've added `faker` to our *code*, but we haven't added it to "
"our development virtual environment. We can fix this by installing `faker` "
"with `pip`, and then re-running `briefcase dev`:"
msgstr ""
"Was ist passiert? Wir haben `httpx` zu unserem *Code* hinzugefügt, aber wir "
"haben es nicht zu unserer virtuellen Entwicklungsumgebung hinzugefügt. Wir "
"können dies beheben, indem wir `httpx` mit `pip` installieren und dann `"
"briefcase dev` erneut ausführen:"

#: docs/en/tutorial/tutorial-7.md:137
#: docs/en/tutorial/tutorial-7.md:155
#: docs/en/tutorial/tutorial-7.md:173
msgid ""
"When you enter a name and press the button, you should see a dialog that "
"looks something like:"
msgstr ""
"Wenn Sie einen Namen eingeben und auf die Schaltfläche klicken, sollte ein "
"Dialogfeld angezeigt werden, das in etwa wie folgt aussieht:"

#: docs/en/tutorial/tutorial-7.md:140
msgid "![Hello World Tutorial 7 dialog, on macOS]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:142
#: docs/en/tutorial/tutorial-7.md:160
#: docs/en/tutorial/tutorial-7.md:178
#: docs/en/tutorial/tutorial-7.md:243
#: docs/en/tutorial/tutorial-7.md:340
msgid "/// caption"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:158
msgid "![Hello World Tutorial 7 dialog, on Linux]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:176
msgid "![Hello World Tutorial 7 dialog, on Windows]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:198
#, fuzzy
msgid ""
"We've now got a working app, using a third party library, running in "
"development mode!"
msgstr ""
"Wir haben jetzt eine funktionierende Anwendung, die eine Bibliothek eines "
"Drittanbieters verwendet und im Entwicklungsmodus läuft!"

#: docs/en/tutorial/tutorial-7.md:201
#, fuzzy
msgid "Running the updated app"
msgstr "Ausführen der aktualisierten Anwendung"

#: docs/en/tutorial/tutorial-7.md:203
#, fuzzy
msgid ""
"Let's get this updated application code packaged as a standalone app. Since "
"we've made code changes, we need to follow the same steps as in [Tutorial 4]"
"{1}:"
msgstr ""
"Lassen Sie uns diesen aktualisierten Anwendungscode als eigenständige "
"Anwendung verpacken. Da wir Änderungen am Code vorgenommen haben, müssen wir "
"die gleichen Schritte wie in [Tutorial 4][tutorial-4] ausführen:"

#: docs/en/tutorial/tutorial-7.md:209
#: docs/en/tutorial/tutorial-7.md:251
#: docs/en/tutorial/tutorial-7.md:306
#: docs/en/tutorial/tutorial-7.md:348
#: docs/en/tutorial/tutorial-7.md:423
#, fuzzy
msgid "Update the code in the packaged app:"
msgstr "Aktualisieren Sie den Code in der gepackten Anwendung:"

#: docs/en/tutorial/tutorial-7.md:220
#: docs/en/tutorial/tutorial-7.md:262
#: docs/en/tutorial/tutorial-7.md:317
#: docs/en/tutorial/tutorial-7.md:359
#: docs/en/tutorial/tutorial-7.md:434
#, fuzzy
msgid "Rebuild the app:"
msgstr "Bauen Sie die Anwendung neu auf:"

#: docs/en/tutorial/tutorial-7.md:229
#: docs/en/tutorial/tutorial-7.md:276
#: docs/en/tutorial/tutorial-7.md:326
#, fuzzy
msgid "And finally, run the app:"
msgstr "Und schließlich führen Sie die Anwendung aus:"

#: docs/en/tutorial/tutorial-7.md:238
#: docs/en/tutorial/tutorial-7.md:335
#, fuzzy
msgid ""
"However, when the app runs, you'll see an error in the console, plus a crash "
"dialog:"
msgstr ""
"Wenn die Anwendung jedoch ausgeführt wird, wird in der Konsole ein Fehler "
"und ein Absturzdialog angezeigt:"

#: docs/en/tutorial/tutorial-7.md:241
msgid "![Hello World Tutorial 7 app crash, on macOS]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:285
#: docs/en/tutorial/tutorial-7.md:378
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console:"
msgstr ""
"Wenn die Anwendung jedoch ausgeführt wird, wird in der Konsole ein Fehler "
"angezeigt:"

#: docs/en/tutorial/tutorial-7.md:338
msgid "![Hello World Tutorial 7 app crash, on Windows]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:369
#: docs/en/tutorial/tutorial-7.md:444
msgid "And finally, run the app (selecting a simulator when prompted):"
msgstr ""
"Und schließlich starten Sie die App (wählen Sie einen Simulator aus, wenn "
"Sie dazu aufgefordert werden):"

#: docs/en/tutorial/tutorial-7.md:454
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console"
msgstr ""
"Wenn die Anwendung jedoch ausgeführt wird, wird in der Konsole ein Fehler "
"angezeigt:"

#: docs/en/tutorial/tutorial-7.md:469
msgid ""
"Once again, the app has failed to start because `faker` has not been "
"installed -but why? Haven't we already installed `faker`?"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:472
#, fuzzy
msgid ""
"We have - but only in the development environment. Your development "
"environment is entirely local to your machine - and is only enabled when you "
"explicitly activate it. Although Briefcase has a development mode, the main "
"reason you'd use Briefcase is to package up your code so you can give it to "
"someone else."
msgstr ""
"Das haben wir - aber nur in der Entwicklungsumgebung. Ihre "
"Entwicklungsumgebung befindet sich ausschließlich auf Ihrem Rechner - und "
"wird nur aktiviert, wenn Sie sie explizit aktivieren. Obwohl Briefcase einen "
"Entwicklungsmodus hat, ist der Hauptgrund für die Verwendung von Briefcase, "
"Ihren Code zu verpacken, damit Sie ihn an jemand anderen weitergeben können."

#: docs/en/tutorial/tutorial-7.md:478
#, fuzzy
msgid ""
"The only way to guarantee that someone else will have a Python environment "
"that contains everything it needs is to build a completely isolated Python "
"environment. This means there's a completely isolated Python install, and a "
"completely isolated set of dependencies. This is what Briefcase is building "
"when you run `briefcase build` - an isolated Python environment. This also "
"explains why `faker` isn't installed - it has been installed in your "
"*development* environment, but not in the packaged app."
msgstr ""
"Der einzige Weg, um zu garantieren, dass jemand anderes eine Python-Umgebung "
"hat, die alles enthält, was er braucht, ist, eine vollständig isolierte "
"Python-Umgebung zu erstellen. Das bedeutet, dass es eine komplett isolierte "
"Python-Installation und einen komplett isolierten Satz von Abhängigkeiten "
"gibt. Das ist es, was Briefcase baut, wenn Sie `briefcase build` ausführen - "
"eine isolierte Python Umgebung. Das erklärt auch, warum `httpx` nicht "
"installiert ist - es wurde in Ihrer *Entwicklungsumgebung* installiert, aber "
"nicht in der gepackten Anwendung."

#: docs/en/tutorial/tutorial-7.md:487
#, fuzzy
msgid "So - we need to tell Briefcase that our app has an external dependency."
msgstr ""
"Wir müssen also Briefcase mitteilen, dass unsere Anwendung eine externe "
"Abhängigkeit hat."

#: docs/en/tutorial/tutorial-7.md:489
#, fuzzy
msgid "Updating dependencies"
msgstr "Aktualisieren von Abhängigkeiten"

#: docs/en/tutorial/tutorial-7.md:491
#, fuzzy
msgid ""
"In the root directory of your app, there is a file named `pyproject.toml`. "
"This file contains all the app configuration details that you provided when "
"you originally ran `briefcase new`."
msgstr ""
"Im Hauptverzeichnis Ihrer Anwendung befindet sich eine Datei namens "
"`pyproject.toml`. Diese Datei enthält alle Konfigurationsdetails der "
"Anwendung, die Sie beim Ausführen von `briefcase new` angegeben haben."

#: docs/en/tutorial/tutorial-7.md:495
#, fuzzy
msgid ""
"`pyproject.toml` is broken up into sections; one of the sections describes "
"the settings for your app:"
msgstr ""
"`pyproject.toml` ist in Abschnitte unterteilt; einer der Abschnitte "
"beschreibt die Einstellungen für Ihre Anwendung:"

#: docs/en/tutorial/tutorial-7.md:508
#, fuzzy
msgid ""
"The `requires` option describes the dependencies of our application. It is a "
"list of strings, specifying libraries (and, optionally, versions) of "
"libraries that you want to be included with your app."
msgstr ""
"Die Option `requires` beschreibt die Abhängigkeiten unserer Anwendung. Es "
"handelt sich um eine Liste von Strings, die Bibliotheken (und optional die "
"Versionen) der Bibliotheken angeben, die Sie in Ihre Anwendung aufnehmen "
"möchten."

#: docs/en/tutorial/tutorial-7.md:512
#, fuzzy
msgid "Modify the `requires` setting so that it reads:"
msgstr "Ändern Sie die Einstellung `requires` so, dass sie lautet:"

#: docs/en/tutorial/tutorial-7.md:520
#, fuzzy
msgid ""
"By adding this setting, we're telling Briefcase \"when you build my app, run "
"`pip install faker` into the application bundle\". Anything that would be "
"legal input to `pip install` can be used here - so, you could specify:"
msgstr ""
"Durch Hinzufügen dieser Einstellung teilen wir Briefcase mit: \"Wenn du "
"meine Anwendung baust, führe `pip install httpx` in das Anwendungsbündel "
"ein\". Alles, was eine legale Eingabe für `pip install` wäre, kann hier "
"verwendet werden - Sie könnten also angeben:"

#: docs/en/tutorial/tutorial-7.md:525
#, fuzzy
msgid "A specific library version (e.g., `\"faker==37.3.0\"`);"
msgstr "Eine bestimmte Bibliotheksversion (z.B. `\"httpx==0.19.0\"`);"

#: docs/en/tutorial/tutorial-7.md:526
#, fuzzy
msgid "A range of library versions (e.g., `\"faker>=37\"`);"
msgstr "Eine Reihe von Bibliotheksversionen (z.B. `\"httpx>=0.19\"`);"

#: docs/en/tutorial/tutorial-7.md:527
#, fuzzy
msgid ""
"A path to a git repository (e.g., `\"git+https://github.com/joke2k/faker/\""
"`); or"
msgstr ""
"Ein Pfad zu einem Git-Repository (z. B. `"
"\"git+https://github.com/encode/httpx\"`); oder"

#: docs/en/tutorial/tutorial-7.md:529
#, fuzzy
msgid ""
"A local file path (However - be warned: if you give your code to someone "
"else, this path probably won't exist on their machine!)"
msgstr ""
"Ein lokaler Dateipfad (Aber Achtung: Wenn Sie Ihren Code an jemand anderen "
"weitergeben, existiert dieser Pfad wahrscheinlich nicht auf dessen Rechner!)"

#: docs/en/tutorial/tutorial-7.md:532
#, fuzzy
msgid ""
"Further down in `pyproject.toml`, you'll notice other sections that are "
"operating system dependent, like `[tool.briefcase.app.helloworld.macOS]` and "
"`[tool.briefcase.app.helloworld.windows]`. These sections *also* have a "
"`requires` setting. These settings allow you to define additional platform-"
"specific dependencies - so, for example, if you need a platform-specific "
"library to handle some aspect of your app, you can specify that library in "
"the platform-specific `requires` section, and that setting will only be used "
"for that platform. You will notice that the `toga` libraries are all "
"specified in the platform-specific `requires` section - this is because the "
"libraries needed to display a user interface are platform specific."
msgstr ""
"Weiter unten in `pyproject.toml` werden Sie andere Abschnitte bemerken, die "
"vom Betriebssystem abhängig sind, wie `[tool.briefcase.app.helloworld.macOS]`"
" und `[tool.briefcase.app.helloworld.windows]`. Diese Abschnitte haben *auch*"
" eine `requires` Einstellung. Diese Einstellungen erlauben es Ihnen, "
"zusätzliche plattformspezifische Abhängigkeiten zu definieren - wenn Sie "
"also zum Beispiel eine plattformspezifische Bibliothek benötigen, um einen "
"Aspekt Ihrer Anwendung zu behandeln, können Sie diese Bibliothek im "
"plattformspezifischen `requires`-Abschnitt angeben, und diese Einstellung "
"wird nur für diese Plattform verwendet. Sie werden feststellen, dass die "
"`toga`-Bibliotheken alle im plattformspezifischen `requires`-Abschnitt "
"angegeben sind - das liegt daran, dass die Bibliotheken, die für die Anzeige "
"einer Benutzeroberfläche benötigt werden, plattformspezifisch sind."

#: docs/en/tutorial/tutorial-7.md:544
#, fuzzy
msgid ""
"In our case, we want `faker` to be installed on all platforms, so we use the "
"app-level `requires` setting. The app-level dependencies will always be "
"installed; the platform-specific dependencies are installed *in addition* to "
"the app-level ones."
msgstr ""
"In unserem Fall wollen wir, dass `httpx` auf allen Plattformen installiert "
"wird, also verwenden wir die Einstellung `requires` auf Anwendungsebene. Die "
"Abhängigkeiten auf Anwendungsebene werden immer installiert; die "
"plattformspezifischen Abhängigkeiten werden *zusätzlich* zu den "
"Abhängigkeiten auf Anwendungsebene installiert."

#: docs/en/tutorial/tutorial-7.md:549
#, fuzzy
msgid ""
"Now that we've told Briefcase about our additional requirements, we can try "
"packaging our app again. Ensure that you've saved your changes to "
"`pyproject.toml`, and then update your app again - this time, passing in the "
"`-r` flag. This tells Briefcase to update requirements in the packaged app:"
msgstr ""
"Nun, da wir Briefcase über unsere zusätzlichen Anforderungen informiert "
"haben, können wir versuchen, unsere Anwendung erneut zu paketieren. "
"Vergewissern Sie sich, dass Sie Ihre Änderungen in `pyproject.toml` "
"gespeichert haben, und aktualisieren Sie Ihre Anwendung erneut - dieses Mal "
"mit dem Flag `-r`. Dadurch wird Briefcase angewiesen, die Anforderungen in "
"der gepackten Anwendung zu aktualisieren:"

#: docs/en/tutorial/tutorial-7.md:673
#, fuzzy
msgid ""
"Once you've updated, you can run `briefcase build` and `briefcase run` - and "
"you should see your packaged app, with the new dialog behavior."
msgstr ""
"Sobald Sie das Update durchgeführt haben, können Sie `briefcase build` und `"
"briefcase run` ausführen - und Sie sollten Ihre gepackte Anwendung mit dem "
"neuen Dialogverhalten sehen."

#: docs/en/tutorial/tutorial-7.md:676
msgid "/// note | Note"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:678
#, fuzzy
msgid ""
"The `-r` option for updating requirements is also honored by the `build` and "
"`run` command, so if you want to update, build, and run in one step, you "
"could use `briefcase run -u -r`."
msgstr ""
"Die Option `-r` zum Aktualisieren der Anforderungen wird auch von den "
"Befehlen `build` und `run` beachtet. Wenn Sie also in einem Schritt "
"aktualisieren, bauen und ausführen wollen, können Sie `briefcase run -u -r` "
"verwenden."

#: docs/en/tutorial/tutorial-7.md:684
msgid "Third-Party Python Packages for Mobile and Web"
msgstr "Python-Pakete von Drittanbietern für Mobilgeräte und das Web"

#: docs/en/tutorial/tutorial-7.md:686
msgid ""
"Faker is just one example of a third-party Python package - a collection of "
"code that isn't part what Python provides out of the box. These third-party "
"packages are most commonly distributed using the "
"[Python Package Index (PyPI)]{1}, and installed into your local virtual "
"environment. We've been using `pip` in this tutorial, but there are other "
"options."
msgstr ""
"Faker ist nur ein Beispiel für ein Python-Paket eines Drittanbieters – eine "
"Sammlung von Code, der nicht Teil der Standardausstattung von Python ist. "
"Diese Pakete von Drittanbietern werden meist über den "
"[Python Package Index (PyPI)]{1} verteilt und in Ihrer lokalen virtuellen "
"Umgebung installiert. In diesem Tutorial haben wir `pip` verwendet, aber es "
"gibt auch andere Optionen."

#: docs/en/tutorial/tutorial-7.md:693
#, fuzzy
msgid ""
"On desktop platforms (macOS, Windows, Linux), essentially any package on "
"PyPI package can be installed into your virtual environment, or added to "
"your app's requirements. However, when building an app for mobile or web "
"platforms, [your options are slightly limited]{1}."
msgstr ""
"Auf Desktop-Plattformen (macOS, Windows, Linux) kann jede `pip`-Installation "
"zu Ihren Anforderungen hinzugefügt werden. Auf mobilen und Web-Plattformen "
"[sind Ihre Möglichkeiten etwas eingeschränkt]{1}."

#: docs/en/tutorial/tutorial-7.md:699
msgid ""
"In short; any *pure Python* package (i.e. any package created from a project "
"written *only* in Python) can be used without difficulty. Some packages, "
"though, are created from projects that contain both Python and other "
"languages (e.g. C, C++, Rust, etc). Code written in those languages needs to "
"be compiled to platform-specific binary modules before it can be used, and "
"those pre-compiled binary modules are only available on specific platforms. "
"Mobile and web platforms have very different requirements than \"standard\" "
"desktop platforms. At this time, most Python packages don't provide pre-"
"compiled binaries for mobile and web platforms."
msgstr ""
"Kurz gesagt: Jedes *reine Python*-Paket (d. h. jedes Paket, das aus einem "
"*ausschließlich* in Python geschriebenen Projekt erstellt wurde) kann ohne "
"Probleme verwendet werden. Einige Pakete werden jedoch aus Projekten "
"erstellt, die sowohl Python als auch andere Sprachen (z. B. C, C++, Rust "
"usw.) enthalten. Code, der in diesen Sprachen geschrieben wurde, muss vor "
"der Verwendung zu plattformspezifischen Binärmodulen kompiliert werden, und "
"diese vorkompilierten Binärmodule sind nur auf bestimmten Plattformen "
"verfügbar. Mobile und Web-Plattformen haben ganz andere Anforderungen als "
"„Standard“-Desktop-Plattformen. Derzeit bieten die meisten Python-Pakete "
"keine vorkompilierten Binärdateien für mobile und Web-Plattformen an."

#: docs/en/tutorial/tutorial-7.md:710
msgid ""
"On PyPI, packages are often provided in a pre-built distribution format "
"called *wheels*. To check whether a package is pure Python, look at the PyPI "
"downloads page for the project. If the wheels provided have a `-py3-none-"
"any.whl` suffix (e.g., [Faker]{1}), then they are pure Python wheels. "
"However, if the wheels have version and platform-specific extensions (e.g., "
"[Pillow]{2}, which has wheels with suffixes like "
"`-cp313-cp313-macosx_11_0_arm64.whl` and `-cp39-cp39-win_amd64.whl`), then "
"the wheel *contains a binary component*. That package cannot be installed on "
"mobile or web platforms unless a wheel compatible with those platforms has "
"been provided."
msgstr ""
"Auf PyPI werden Pakete oft in einem vorgefertigten Distributionsformat "
"namens *wheels* bereitgestellt. Um zu überprüfen, ob ein Paket reines Python "
"ist, schauen Sie auf der PyPI-Downloadseite für das Projekt nach. Wenn die "
"bereitgestellten Wheels die Endung `-py3-none-any.whl` haben (z. B. [Faker]"
"{1}), dann handelt es sich um reine Python-Wheels. Wenn die Wheels jedoch "
"versions- und plattformspezifische Erweiterungen haben (z. B. [Pillow]{2}, "
"das Wheels mit Suffixen wie `-cp313-cp313-macosx_11_0_arm64.whl` und "
"`-cp39-cp39-win_amd64.whl` hat), dann enthält das Wheel *eine binäre "
"Komponente*. Dieses Paket kann nicht auf mobilen oder Web-Plattformen "
"installiert werden, es sei denn, es wurde ein mit diesen Plattformen "
"kompatibles Wheel bereitgestellt."

#: docs/en/tutorial/tutorial-7.md:723
msgid ""
"At this time, *most* binary packages on PyPI don't provide mobile- or web-"
"compatible wheels. To fill this gap, BeeWare provides binaries for some "
"popular binary modules (including `numpy`, `pandas`, and `cryptography`). "
"These wheels are *not* distributed on PyPI, but Briefcase will install those "
"wheels if they're available."
msgstr ""
"Derzeit bieten die meisten Binärpakete auf PyPI keine mobil- oder webfähigen "
"Wheels an. Um diese Lücke zu schließen, stellt BeeWare Binärdateien für "
"einige beliebte Binärmodule (einschließlich `numpy`, `pandas` und "
"`cryptography`) zur Verfügung. Diese Wheels werden *nicht* auf PyPI "
"verteilt, aber Briefcase installiert sie, sofern sie verfügbar sind."

#: docs/en/tutorial/tutorial-7.md:729
#, fuzzy
msgid ""
"It's *usually* possible to compile binary packages for mobile platforms, but "
"it's not easy to set up -- well outside the scope of an introductory "
"tutorial like this one."
msgstr ""
"BeeWare kann Binärdateien für einige beliebte Binärmodule (einschließlich "
"`numpy`, `pandas` und `cryptography`) bereitstellen. Es ist *normalerweise* "
"möglich, Pakete für mobile Plattformen zu kompilieren, aber es ist nicht "
"einfach einzurichten - das würde den Rahmen eines einführenden Tutorials wie "
"diesem sprengen."

#: docs/en/tutorial/tutorial-7.md:733
msgid "Next steps"
msgstr "Nächste Schritte"

#: docs/en/tutorial/tutorial-7.md:735
#, fuzzy
msgid ""
"We've now got an app that uses a third-party library! In [Tutorial 8]{1} "
"we'll learn how to ensure our app remains responsive as we add more complex "
"application logic."
msgstr ""
"Wir haben jetzt eine App, die eine Bibliothek eines Drittanbieters "
"verwendet! In [Tutorial 8][tutorial-8] lernen wir, wie wir sicherstellen "
"können, dass unsere App auch dann reaktionsschnell bleibt, wenn wir "
"komplexere Anwendungslogik hinzufügen."

msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-14 23:09-0400\n"
"PO-Revision-Date: 2024-02-03 01:43+0000\n"
"Last-Translator: Marco Esters <mesters@anaconda.com>\n"
"Language-Team: German <https://hosted.weblate.org/projects/beeware/tutorial/"
"tutorial-2/de/>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 3.15.6\n"

#: docs/en/tutorial/tutorial-2.md:1
msgid "Tutorial 2 - Making it interesting { id=\"tutorial-2\" }"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:3
msgid ""
"In [Tutorial 1][tutorial-1], we generated a stub project that was able to "
"run, but we didn't write any code ourselves. Let's take a look at what was "
"generated for us."
msgstr ""
"In [Tutorial 1][tutorial-1] haben wir ein lauffähiges Rumpfprojekt erstellt, "
"aber eigenen Code haben wir nicht geschrieben. Schauen wir uns an, was für "
"uns generiert wurde."

#: docs/en/tutorial/tutorial-2.md:7
msgid "What was generated"
msgstr "Was generiert wurde"

#: docs/en/tutorial/tutorial-2.md:9
msgid ""
"In the `src/helloworld` directory, you should see 3 files: `__init__.py`, "
"`__main__.py` and `app.py`."
msgstr ""
"In dem Verzeichnis `src/helloworld` sollten 3 Dateien zu sehen sein: "
"`__init__.py`, `__main__.py` und `app.py`."

#: docs/en/tutorial/tutorial-2.md:12
msgid ""
"`__init__.py` marks the `helloworld` directory as an importable Python "
"module. It is an empty file; the very fact it exists tells the Python "
"interpreter that the `helloworld` directory defines a module."
msgstr ""
"`__init__.py` markiert das `helloworld`-Verzeichnis als importierbares "
"Python-Modul. Es ist eine leere Datei; allein die Tatsache, dass sie "
"existiert, sagt dem Python-Interpreter, dass das `helloworld`-Verzeichnis "
"ein Modul definiert."

#: docs/en/tutorial/tutorial-2.md:16
msgid ""
"`__main__.py` marks the `helloworld` module as a special kind of module -an "
"executable module. If you try to run the `helloworld` module using `python -"
"m helloworld`, the `__main__.py` file is where Python will start executing. "
"The contents of `__main__.py` is relatively simple:"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:28
msgid "This file does two things:"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:30
msgid "It imports the `main` method from the `helloworld` app."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:31
#, fuzzy
msgid ""
"Then, it starts the application’s main loop. The main loop is the way a GUI "
"application listens for user input (like mouse clicks and keyboard presses)."
msgstr ""
"Das heißt, es importiert die Methode `main` aus der Anwendung `helloworld`; "
"und wenn es als Einstiegspunkt ausgeführt wird, ruft es die Methode main() "
"auf und startet die Hauptschleife der Anwendung. Die Hauptschleife ist die "
"Art und Weise, wie eine GUI-Anwendung auf Benutzereingaben (wie Mausklicks "
"und Tastatureingaben) wartet."

#: docs/en/tutorial/tutorial-2.md:35
#, fuzzy
msgid ""
"The more interesting file is `app.py` - this contains the logic that creates "
"our application window:"
msgstr ""
"Die interessantere Datei ist `app.py` - diese enthält die Logik, die unser "
"Anwendungsfenster erstellt:"

#: docs/en/tutorial/tutorial-2.md:54
#, fuzzy
msgid "Let's go through this line by line:"
msgstr "Gehen wir diese Zeile für Zeile durch:"

#: docs/en/tutorial/tutorial-2.md:61
#, fuzzy
msgid ""
"First, we import the `toga` widget toolkit, as well as some style-related "
"utility constants. Our code doesn't use these yet - but we'll make use of "
"them shortly."
msgstr ""
"Als erstes importieren wir das `toga`-Widget-Toolkit, sowie einige "
"stilbezogene Utility-Klassen und Konstanten. Unser Code verwendet diese noch "
"nicht - aber wir werden sie in Kürze nutzen."

#: docs/en/tutorial/tutorial-2.md:65
msgid "Then, we define a class:"
msgstr "Definieren wir eine Klasse:"

#: docs/en/tutorial/tutorial-2.md:71
#, fuzzy
msgid ""
"Each Toga application has a single `toga.App` instance, representing the "
"running entity that is the application. The app may end up managing multiple "
"windows; but for simple applications, there will be a single main window."
msgstr ""
"Jede Toga-Anwendung hat eine einzige `toga.App`-Instanz, die laufende "
"Entität, die Anwendung, darstellt. Die Anwendung kann mehrere Fenster "
"verwalten, aber für einfache Anwendungen gibt es ein einziges Hauptfenster."

#: docs/en/tutorial/tutorial-2.md:76
#, fuzzy
msgid "Next, we define a `startup()` method:"
msgstr "Als nächstes definieren wir eine `Startup()` Methode:"

#: docs/en/tutorial/tutorial-2.md:83
#, fuzzy
msgid ""
"The first thing the startup method does is to define a main box. Toga's "
"layout scheme behaves similar to HTML. You build an application by "
"constructing a collection of boxes, each of which contains other boxes, or "
"actual widgets. You then apply styles to these boxes to define how they will "
"consume the available window space."
msgstr ""
"Das erste, was die Startup-Methode macht, ist die Definition eines "
"Hauptfeldes. Das Layout-Schema von Toga verhält sich ähnlich wie HTML. Sie "
"bauen eine Anwendung auf, indem Sie eine Sammlung von Boxen konstruieren, "
"von denen jede andere Boxen oder Widgets enthält. Sie wenden dann Stile auf "
"diese Boxen an, um zu definieren, wie sie den verfügbaren Platz im Fenster "
"nutzen werden."

#: docs/en/tutorial/tutorial-2.md:89
#, fuzzy
msgid ""
"In this application, we define a single box, but we don't put anything into "
"it."
msgstr ""
"In dieser Anwendung definieren wir ein einzelnes Feld, in das wir jedoch "
"nichts einfügen."

#: docs/en/tutorial/tutorial-2.md:92
#, fuzzy
msgid "Next, we define a window into which we can put this empty box:"
msgstr ""
"Als Nächstes definieren wir ein Fenster, in das wir dieses leere Feld "
"einfügen können:"

#: docs/en/tutorial/tutorial-2.md:98
#, fuzzy
msgid ""
"This creates an instance of a `toga.MainWindow`, which will have a title "
"matching the application's name. A Main Window is a special kind of window "
"in Toga - it's a window that is closely bound to the life cycle of the app. "
"When the Main Window is closed, the application exits. The Main Window is "
"also the window that has the application's menu (if you're on a platform "
"like Windows where menu bars are part of the window)."
msgstr ""
"Dies erzeugt eine Instanz eines `toga.MainWindow`, das einen Titel hat, der "
"dem Namen der Anwendung entspricht. Ein Hauptfenster ist eine besondere Art "
"von Fenster in Toga - es ist ein Fenster, das eng an den Lebenszyklus der "
"Anwendung gebunden ist. Wenn das Hauptfenster geschlossen wird, wird die "
"Anwendung beendet. Das Hauptfenster ist auch das Fenster, in dem sich das "
"Menü der Anwendung befindet (wenn Sie auf einer Plattform wie Windows "
"arbeiten, wo die Menüleisten Teil des Fensters sind)"

#: docs/en/tutorial/tutorial-2.md:106
msgid "/// admonition | Where is my window?"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:108
msgid ""
"If you have made an error in your code, the main window of the app may not "
"display. If this happens, you can type **Ctrl+C** in the terminal where you "
"started the app. This will stop the app. You can then fix the error and "
"restart the app."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:113
#: docs/en/tutorial/tutorial-2.md:148
#: docs/en/tutorial/tutorial-2.md:211
#: docs/en/tutorial/tutorial-2.md:302
#: docs/en/tutorial/tutorial-2.md:313
#: docs/en/tutorial/tutorial-2.md:324
#: docs/en/tutorial/tutorial-2.md:340
#: docs/en/tutorial/tutorial-2.md:348
#: docs/en/tutorial/tutorial-2.md:356
msgid "///"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:115
#, fuzzy
msgid ""
"We then add our empty box as the content of the main window, and instruct "
"the application to show our window:"
msgstr ""
"Dann fügen wir unsere leere Box als Inhalt des Hauptfensters hinzu und "
"weisen die Anwendung an, unser Fenster anzuzeigen:"

#: docs/en/tutorial/tutorial-2.md:123
#, fuzzy
msgid ""
"Last of all, we define a `main()` function. This is what creates the "
"instance of our application:"
msgstr ""
"Als letztes definieren wir eine `main()` Methode. Diese erzeugt die Instanz "
"unserer Anwendung:"

#: docs/en/tutorial/tutorial-2.md:131
#, fuzzy
msgid ""
"This `main()` method is the one that is imported and invoked by `__main__.py`"
". It creates and returns an instance of our `HelloWorld` application."
msgstr ""
"Diese `main()` Methode ist diejenige, die von `__main__.py` importiert und "
"aufgerufen wird. Sie erzeugt eine Instanz unserer `HelloWorld`-Anwendung und "
"gibt diese zurück."

#: docs/en/tutorial/tutorial-2.md:135
#, fuzzy
msgid ""
"That's the simplest possible Toga application. Let's put some of our own "
"content into the application, and make the app do something interesting."
msgstr ""
"Das ist die einfachste mögliche Toga-Anwendung. Lassen Sie uns einige "
"unserer eigenen Inhalte in die Anwendung einfügen und die Anwendung etwas "
"Interessantes tun lassen."

#: docs/en/tutorial/tutorial-2.md:138
#, fuzzy
msgid "Adding some content of our own"
msgstr "Hinzufügen von eigenen Inhalten"

#: docs/en/tutorial/tutorial-2.md:140
msgid "Let's do something more interesting with our `HelloWorld` app."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:142
#: docs/en/tutorial/tutorial-2.md:201
msgid "/// note | Note"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:144
#, fuzzy
msgid ""
"When you make these changes, make sure you keep the imports at the top of "
"the file, and the `main()` at the bottom of the file. You only need to "
"update the `HelloWorld` class."
msgstr ""
"Entfernen Sie nicht die Importe am Anfang der Datei oder `main()` am Ende. "
"Sie müssen nur die Klasse `HelloWorld` aktualisieren."

#: docs/en/tutorial/tutorial-2.md:150
#, fuzzy
msgid ""
"Modify your `HelloWorld` class inside `src/helloworld/app.py` so that it "
"looks like this:"
msgstr ""
"Ändern Sie Ihre `HelloWorld` Klasse in `src/helloworld/app.py` so, dass sie "
"wie folgt aussieht:"

#: docs/en/tutorial/tutorial-2.md:185
#, fuzzy
msgid "Let's look in detail at what has changed."
msgstr "Schauen wir uns im Detail an, was sich geändert hat."

#: docs/en/tutorial/tutorial-2.md:187
#, fuzzy
msgid "We're still creating a main box; however, we are now applying a style:"
msgstr ""
"Wir erstellen immer noch ein Hauptfeld, aber wir wenden jetzt einen Stil an:"

#: docs/en/tutorial/tutorial-2.md:193
#, fuzzy
msgid ""
"Toga's built-in layout system is called \"Pack\". It behaves a lot like CSS. "
"You define objects in a hierarchy - in HTML, the objects are `<div>`, "
"`<span>`, and other DOM elements; in Toga, they're widgets and boxes. You "
"can then assign styles to the individual elements. In this case, we're "
"indicating that this is a `COLUMN` box - that is, it is a box that will "
"consume all the available width, and will expand its height as content is "
"added, but it will try to be as short as possible."
msgstr ""
"Das in Toga eingebaute Layoutsystem heißt \"Pack\". Es verhält sich sehr "
"ähnlich wie CSS. Sie definieren Objekte in einer Hierarchie - in HTML sind "
"die Objekte `<div>`, `<span>` und andere DOM-Elemente; in Toga sind es "
"Widgets und Boxen. Sie können dann den einzelnen Elementen Stile zuweisen. "
"In diesem Fall geben wir an, dass es sich um einen `COLUMN`-Kasten handelt - "
"das heißt, es handelt sich um einen Kasten, der die gesamte verfügbare "
"Breite beansprucht und sich in der Höhe vergrößert, wenn Inhalt hinzugefügt "
"wird, aber er versucht, so kurz wie möglich zu sein."

#: docs/en/tutorial/tutorial-2.md:203
msgid ""
"For more advanced uses, Toga also supports a separate style object, which is "
"used like this:"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:213
#, fuzzy
msgid "Next, we define a couple of widgets:"
msgstr "Als nächstes definieren wir ein paar Widgets:"

#: docs/en/tutorial/tutorial-2.md:223
#, fuzzy
msgid ""
"Here, we define a Label and a TextInput. Both widgets have styles associated "
"with them; the label will have 5px of margin on its left and right, and no "
"margin on the top and bottom. The TextInput is marked as being flexible - "
"that is, it will absorb all available space in its layout axis."
msgstr ""
"Hier definieren wir ein Label und einen TextInput. Beiden Widgets sind Stile "
"zugeordnet; das Label hat links und rechts ein Padding von 5px und oben und "
"unten kein Padding. Der TextInput ist als flexibel gekennzeichnet, d. h. er "
"nimmt den gesamten verfügbaren Platz in seiner Layoutachse ein."

#: docs/en/tutorial/tutorial-2.md:229
#, fuzzy
msgid ""
"The TextInput is assigned as an instance variable of the class. This gives "
"us easy access to the widget instance - something that we'll use in a moment."
msgstr ""
"Der TextInput wird als Instanzvariable der Klasse zugewiesen. Dies "
"ermöglicht uns einen einfachen Zugriff auf die Instanz des Widgets - etwas, "
"das wir gleich verwenden werden."

#: docs/en/tutorial/tutorial-2.md:233
#, fuzzy
msgid "Next, we define a box to hold these two widgets:"
msgstr "Als nächstes definieren wir eine Box, die diese beiden Widgets enthält:"

#: docs/en/tutorial/tutorial-2.md:241
#, fuzzy
msgid ""
"The `name_box` is a box just like the main box; however, this time, it's a "
"`ROW` box. That means content will be added horizontally, and it will try to "
"make its width as narrow as possible. The box also has some margin - 5px on "
"all sides."
msgstr ""
"Die `name_box` ist eine Box genau wie die Hauptbox, aber dieses Mal ist es "
"eine `ROW`-Box. Das bedeutet, daß der Inhalt horizontal eingefügt wird, und "
"daß versucht wird, die Breite so schmal wie möglich zu machen. Die Box hat "
"auch etwas Padding - 5px auf allen Seiten."

#: docs/en/tutorial/tutorial-2.md:246
#, fuzzy
msgid "Now we define a button:"
msgstr "Jetzt definieren wir eine Schaltfläche:"

#: docs/en/tutorial/tutorial-2.md:256
msgid ""
"The button also has 5px of margin on all sides. We also define a *handler* -"
"a method to invoke when the button is pressed."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:259
#, fuzzy
msgid "Then, we add the name box and the button to the main box:"
msgstr "Dann fügen wir das Namensfeld und die Schaltfläche zum Hauptfeld hinzu:"

#: docs/en/tutorial/tutorial-2.md:266
#, fuzzy
msgid ""
"This completes our layout; the rest of the startup method is as it was "
"previously - defining a `MainWindow`, and assigning the main box as the "
"window's content:"
msgstr ""
"Damit ist unser Layout fertiggestellt; der Rest der Startup-Methode ist wie "
"zuvor - Definition eines MainWindow und Zuweisung des Hauptfeldes als Inhalt "
"des Fensters:"

#: docs/en/tutorial/tutorial-2.md:276
#, fuzzy
msgid ""
"The last thing we need to do is define the handler for the button. A handler "
"can be any method, generator, or asynchronous coroutine; it accepts the "
"widget that generated the event as an argument, and will be invoked whenever "
"the button is pressed:"
msgstr ""
"Als Letztes müssen wir den Handler für die Schaltfläche definieren. Ein "
"Handler kann eine beliebige Methode, ein Generator oder eine asynchrone Co-"
"Routine sein; er akzeptiert das Widget, das Ereignis erzeugt hat, als "
"Argument und wird immer dann aufgerufen, wenn die Schaltfläche gedrückt wird:"

#: docs/en/tutorial/tutorial-2.md:286
#, fuzzy
msgid ""
"The body of the method is a simple print statement - however, it will "
"interrogate the current value of the name input, and use that content as the "
"text that is printed."
msgstr ""
"Der Hauptteil der Methode ist eine einfache Druckanweisung - sie fragt "
"jedoch den aktuellen Wert der Namenseingabe ab und verwendet diesen Inhalt "
"als den Text, der gedruckt wird."

#: docs/en/tutorial/tutorial-2.md:290
#, fuzzy
msgid ""
"Now that we've made these changes we can see what they look like by starting "
"the application again. As before, we'll use developer mode:"
msgstr ""
"Nachdem wir nun diese Änderungen vorgenommen haben, können wir sehen, wie "
"sie aussehen, indem wir die Anwendung erneut starten. Wie zuvor werden wir "
"den Entwicklermodus verwenden:"

#: docs/en/tutorial/tutorial-2.md:293
#: docs/en/tutorial/tutorial-2.md:334
msgid "/// tab | macOS"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:304
#: docs/en/tutorial/tutorial-2.md:342
msgid "/// tab | Linux"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:315
#: docs/en/tutorial/tutorial-2.md:350
msgid "/// tab | Windows"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:326
#, fuzzy
msgid ""
"You'll notice that this time, it *doesn't* install dependencies. Briefcase "
"can detect that the application has been run before, and to save time, will "
"only run the application. If you add new dependencies to your app, you need "
"to make sure that they're installed by passing in a `-r` option when you run "
"`briefcase dev`."
msgstr ""
"Sie werden feststellen, dass dieses Mal *keine* Abhängigkeiten installiert "
"werden. Briefcase kann erkennen, dass die Anwendung schon einmal ausgeführt "
"wurde, und um Zeit zu sparen, wird nur die Anwendung ausgeführt. Wenn Sie "
"neue Abhängigkeiten zu Ihrer Anwendung hinzufügen, können Sie sicherstellen, "
"dass diese installiert werden, indem Sie die Option `-r` beim Aufruf von `"
"briefcase dev` mitgeben."

#: docs/en/tutorial/tutorial-2.md:332
msgid "This should open a GUI window:"
msgstr "Dies sollte ein GUI-Fenster öffnen:"

#: docs/en/tutorial/tutorial-2.md:358
#, fuzzy
msgid ""
"If you enter a name in the text box, and press the GUI button, you should "
"see output appear in the console where you started the application."
msgstr ""
"Wenn Sie einen Namen in das Textfeld eingeben und die Schaltfläche GUI "
"drücken, sollte die Ausgabe in der Konsole erscheinen, in der Sie die "
"Anwendung gestartet haben."

#: docs/en/tutorial/tutorial-2.md:362
msgid ""
"Before continuing, close the app. As with Tutorial 1, you can do this by "
"pressing the close button on the application window, by selecting Quit/Exit "
"from the application's menu, or by typing **Ctrl+C** in the terminal where "
"you ran `briefcase dev`."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:367
msgid "Next steps"
msgstr "Nächste Schritte"

#: docs/en/tutorial/tutorial-2.md:369
#, fuzzy
msgid ""
"We've now got an application that does something a little more interesting. "
"But it only runs on our own computer. Let's package this application for "
"distribution. In [Tutorial 3][tutorial-3], we'll wrap our application up as "
"a standalone installer that we could send to a friend, a customer, or upload "
"to an App Store."
msgstr ""
"Wir haben jetzt eine Anwendung, die etwas Interessanteres macht. Aber sie "
"läuft nur auf unserem eigenen Computer. Lassen Sie uns diese Anwendung für "
"die Verteilung verpacken. In [Tutorial 3][tutorial-3] werden wir unsere "
"Anwendung als eigenständiges Installationsprogramm verpacken, das wir an "
"einen Freund oder Kunden schicken oder in einen App Store hochladen können."

#~ msgid "Tutorial 2 - Making it interesting"
#~ msgstr "Tutorial 2 - Es wird interessant"

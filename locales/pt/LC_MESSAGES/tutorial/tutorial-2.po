# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Russell Keith-Magee
# This file is distributed under the same license as the BeeWare package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-09 04:13+0000\n"
"PO-Revision-Date: 2024-02-07 15:02+0000\n"
"Last-Translator: joaovitorpmoreira <programacaojoaopm@gmail.com>\n"
"Language: pt\n"
"Language-Team: Portuguese <https://hosted.weblate.org/projects/beeware/tutorial/tutorial-2/pt/>\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../tutorial/tutorial-2.rst:3 2e1be6a8aa08484fb6e79eb40a1af561
msgid "Tutorial 2 - Making it interesting"
msgstr "Tutorial 2 - Tornando as coisas interessantes"

#: ../../tutorial/tutorial-2.rst:5 2a7bd1732fe245ec99be0493cb4fd53c
msgid "In :doc:`Tutorial 1 <tutorial-1>`, we generated a stub project that was able to run, but we didn't write any code ourselves. Let's take a look at what was generated for us."
msgstr "No :doc:`Tutorial 1 <tutorial-1>`, geramos um projeto inicial que executava, mas não escrevemos nenhum código por conta própria. Vamos dar uma olhada no que foi criado para nós."

#: ../../tutorial/tutorial-2.rst:10 36c79c9915674ccfbc12bcc0734bcf35
msgid "What was generated"
msgstr "O que foi gerado"

#: ../../tutorial/tutorial-2.rst:12 721f5201e79c44fdac204d63312a6f2e
msgid "In the ``src/helloworld`` directory, you should see 3 files: ``__init__.py``, ``__main__.py`` and ``app.py``."
msgstr "No diretório ``src/helloworld``, você deverá ver 3 arquivos: ``__init__.py``, ``__main__.py`` e ``app.py``."

#: ../../tutorial/tutorial-2.rst:15 de38dacd1a0d4c348d934fce208a6bd3
msgid "``__init__.py`` marks the ``helloworld`` directory as an importable Python module. It is an empty file; the very fact it exists tells the Python interpreter that the ``helloworld`` directory defines a module."
msgstr "``__init__.py`` torna o diretório ``helloworld`` um módulo Python importável. Trata-se de um arquivo vazio; sua simples existência indica ao interpretador Python que há um módulo definido pelo diretório `helloworld`."

#: ../../tutorial/tutorial-2.rst:19 26dab7a022e948289e9acf4e07b634fa
msgid "``__main__.py`` marks the ``helloworld`` module as a special kind of module - an executable module. If you try to run the ``helloworld`` module using ``python -m helloworld``, the ``__main__.py`` file is where Python will start executing. The contents of ``__main__.py`` is relatively simple::"
msgstr "``__main__.py`` define o módulo ``helloworld`` como um tipo especial de módulo - um módulo executável. Ao tentar executar o módulo ``helloworld`` usando ``python -m helloworld``, o Python iniciará a execução no arquivo ``__main__.py``. O conteúdo de ``__main__.py`` é relativamente simples::"

#: ../../tutorial/tutorial-2.rst:29 0d4ebd6dfe7c48fbb51894c045ff24fc
msgid "This file does two things:"
msgstr ""

#: ../../tutorial/tutorial-2.rst:31 6d23aa2404fc48ba96da528ccc1f2940
msgid "It imports the ``main`` method from from the ``helloworld`` app."
msgstr ""

#: ../../tutorial/tutorial-2.rst:32 0b48d24bc644417e829bacd14d0f3cdc
#, fuzzy
msgid "Then, it starts the application’s main loop. The main loop is the way a GUI application listens for user input (like mouse clicks and keyboard presses)."
msgstr "Isto é - ele importa o método ``main`` do aplicativo ``helloworld``; quando executado como ponto de entrada, esse método main() é chamado, dando início ao loop principal da aplicação. Nesse loop, a aplicação de interface gráfica (GUI) espera pelas interações do usuário (como cliques do mouse e pressionamentos de teclas)."

#: ../../tutorial/tutorial-2.rst:35 09fd77cade1b42b4a8b88e37bb0da6e3
msgid "The more interesting file is ``app.py`` - this contains the logic that creates our application window::"
msgstr "O arquivo mais interessante é o ``app.py`` - nele está contido a lógica que cria a janela da nossa aplicação::"

#: ../../tutorial/tutorial-2.rst:52 df7ece5eaff04ed19ab39cdb23b6ac77
msgid "Let's go through this line by line::"
msgstr "Vamos analisar isso linha por linha::"

#: ../../tutorial/tutorial-2.rst:57 f5ddb2b7e7b844a69c517fd33d19a19d
#, fuzzy
msgid "First, we import the ``toga`` widget toolkit, as well as some style-related utility constants. Our code doesn't use these yet - but we'll make use of them shortly."
msgstr "Primeiro, importamos a biblioteca de widgets ``toga``, juntamente com algumas classes e constantes que são úteis para o estilo. Por enquanto, nosso código ainda não faz uso delas, mas em breve começaremos a utilizá-las."

#: ../../tutorial/tutorial-2.rst:61 a3f7bf04b0ac4a81951a5ed777d42987
msgid "Then, we define a class::"
msgstr "Em seguida, definimos uma classe::"

#: ../../tutorial/tutorial-2.rst:65 9f8637c8b8674d85a500d98d1a8c8d3a
msgid "Each Toga application has a single ``toga.App`` instance, representing the running entity that is the application. The app may end up managing multiple windows; but for simple applications, there will be a single main window."
msgstr "Cada aplicação Toga possui uma única instância chamada ``toga.App``, que representa o aplicativo em si sendo executado. A aplicação pode acabar gerenciando várias janelas; mas para aplicativos simples, haverá uma única janela principal."

#: ../../tutorial/tutorial-2.rst:69 32d1c270af7245718f91161251d34f81
msgid "Next, we define a ``startup()`` method::"
msgstr "Depois, definimos um método chamado ``startup()``::"

#: ../../tutorial/tutorial-2.rst:74 43ade04c31ae40fda6b416406baab307
msgid "The first thing the startup method does is to define a main box. Toga's layout scheme behaves similar to HTML. You build an application by constructing a collection of boxes, each of which contains other boxes, or actual widgets. You then apply styles to these boxes to define how they will consume the available window space."
msgstr "A primeira coisa que o método startup() faz é definir um container principal. O esquema de layout do Toga se comporta de maneira semelhante ao HTML. A construção de uma aplicação se dá por meio da criação de uma coleção de containers, cada um contendo outros containers ou os widgets propriamente dito. Depois, você aplica estilos a esses containers para definir como vão usar o espaço na janela."

#: ../../tutorial/tutorial-2.rst:80 a0e8f55b28d04de98074f7fb4227a269
msgid "In this application, we define a single box, but we don't put anything into it."
msgstr "Neste aplicativo, definimos um único container, mas não colocamos nada dentro dele."

#: ../../tutorial/tutorial-2.rst:82 1f7f4fa8a2244ceea804514e62a22344
msgid "Next, we define a window into which we can put this empty box::"
msgstr "Em seguida, definimos uma janela na qual podemos colocar o container vazio::"

#: ../../tutorial/tutorial-2.rst:86 2ef76961458944b6a2d73dd38e60d4a1
#, fuzzy
msgid "This creates an instance of a ``toga.MainWindow``, which will have a title matching the application's name. A Main Window is a special kind of window in Toga - it's a window that is closely bound to the life cycle of the app. When the Main Window is closed, the application exits. The Main Window is also the window that has the application's menu (if you're on a platform like Windows where menu bars are part of the window)."
msgstr "Isso cria uma instância de ``toga.MainWindow``, que terá um título correspondente ao nome do aplicativo. A MainWindow (Janela Principal) é um tipo especial de janela no Toga, pois está intimamente ligada ao ciclo de vida da aplicação. Quando a MainWindow é fechada, a aplicação também se encerra. Além disso, a MainWindow também é a janela que contém o menu do aplicativo (se você estiver em uma plataforma como o Windows, onde as barras de menu fazem parte da janela)"

#: ../../tutorial/tutorial-2.rst:93 83ddcb8dc2f54f7482e37d1144f29626
msgid "Where is my window?"
msgstr ""

#: ../../tutorial/tutorial-2.rst:95 969f733e9f794de9b374ad9163e7ac85
msgid "If you have made an error in your code, the main window of the app may not display. If this happens, you can type **Ctrl+C** in the terminal where you started the app. This will stop the app. You can then fix the error and restart the app."
msgstr ""

#: ../../tutorial/tutorial-2.rst:99 e612fb6b63b14bdcb39b5626b021c777
msgid "We then add our empty box as the content of the main window, and instruct the application to show our window::"
msgstr "Então, adicionamos nosso container vazio como conteúdo da janela principal e instruímos o aplicativo a mostrar nossa janela::"

#: ../../tutorial/tutorial-2.rst:105 1ce27dec55a74047bf2e8539c8efbc73
#, fuzzy
msgid "Last of all, we define a ``main()`` function. This is what creates the instance of our application::"
msgstr "Por último, definimos um método chamado ``main()``. Isso é o que cria a instância de nossa aplicação::"

#: ../../tutorial/tutorial-2.rst:111 bc7b7fdf8a5c43ffb2fdf01859bd16aa
msgid "This ``main()`` method is the one that is imported and invoked by ``__main__.py``. It creates and returns an instance of our ``HelloWorld`` application."
msgstr "O método ``main()`` é aquele que é importado e chamado pelo arquivo ``__main__.py``. Ele cria e retorna uma instância da nossa aplicação ``HelloWorld``."

#: ../../tutorial/tutorial-2.rst:115 f3f8cdad383346459a1c835fa92f112c
msgid "That's the simplest possible Toga application. Let's put some of our own content into the application, and make the app do something interesting."
msgstr "Essa é a aplicação Toga mais básica possível. Vamos agora integrar conteúdo personalizado à aplicação e torná-la mais interessante."

#: ../../tutorial/tutorial-2.rst:119 9e8807c5553942e4a4953098041741aa
msgid "Adding some content of our own"
msgstr "Adicionando conteúdo personalizado"

#: ../../tutorial/tutorial-2.rst:121 3a5a7f2ca0e2483f93fef97babc01fc7
msgid "Let's do something more interesting with our ``HelloWorld`` app."
msgstr ""

#: ../../tutorial/tutorial-2.rst:125 e44cc783a890402085f37580f482fac8
#, fuzzy
msgid "When you make these changes, make sure you keep the imports at the top of the file, and the ``main()`` at the bottom of the file. You only need to update the ``HelloWorld`` class."
msgstr "Não remova as importações já feitas no topo do arquivo ou o ``main()`` ao final. Você só precisa atualizar a classe ``HelloWorld``."

#: ../../tutorial/tutorial-2.rst:129 8436dd50e42c4b5e9bbbb7a5a82add25
msgid "Modify your ``HelloWorld`` class inside ``src/helloworld/app.py`` so that it looks like this::"
msgstr "Modifique sua classe ``HelloWorld`` dentro de ``src/helloworld/app.py`` para que fique assim:"

#: ../../tutorial/tutorial-2.rst:163 ebf3b206e6364dafa694bb0a5d745911
msgid "Let's look in detail at what has changed."
msgstr "Vamos ver em detalhes o que mudou."

#: ../../tutorial/tutorial-2.rst:165 0bcd8b52741747f9a21641e9f4d5ab74
msgid "We're still creating a main box; however, we are now applying a style::"
msgstr "Ainda estamos fazendo o container principal; porém, agora estamos aplicando um estilo::"

#: ../../tutorial/tutorial-2.rst:169 69a49e9c77ee4dc29cbbab0929842838
#, fuzzy
msgid "Toga's built-in layout system is called \"Pack\". It behaves a lot like CSS. You define objects in a hierarchy - in HTML, the objects are ``<div>``, ``<span>``, and other DOM elements; in Toga, they're widgets and boxes. You can then assign styles to the individual elements. In this case, we're indicating that this is a ``COLUMN`` box - that is, it is a box that will consume all the available width, and will expand its height as content is added, but it will try to be as short as possible."
msgstr "O Toga possui um sistema de layout interno denominado \"Pack\". Seu funcionamento se assemelha ao CSS. Você define objetos em uma hierarquia - no HTML, os objetos são ``<div>`` e ``<span>``, e outros elementos do DOM; enquanto no Toga, são widgets e containers. Estilos podem ser atribuídos a cada elemento individualmente. Neste caso específico, estamos indicando que o container é um ``'COLUMN'`` - isto é, ele ocupará toda a largura disponível e aumentará sua altura à medida que conteúdo for adicionado, porém buscando sempre ser o mais compacto possível."

#: ../../tutorial/tutorial-2.rst:178 e4c4909f5fc74238b79131c26ff237e1
msgid "For more advanced uses, Toga also supports a separate style object, which is used like this::"
msgstr ""

#: ../../tutorial/tutorial-2.rst:184 e23e0c1845b74ae7a43b340944dd39d7
msgid "Next, we define a couple of widgets::"
msgstr "A seguir, vamos definir dois widgets::"

#: ../../tutorial/tutorial-2.rst:192 c3ba79ba67d5456b874ec417701b6d56
#, fuzzy
msgid "Here, we define a Label and a TextInput. Both widgets have styles associated with them; the label will have 5px of margin on its left and right, and no margin on the top and bottom. The TextInput is marked as being flexible - that is, it will absorb all available space in its layout axis."
msgstr "Nesta etapa, definimos um Label e um TextInput. Ambos os widgets possuem estilos associados; o Label terá 5px de preenchimento à esquerda e à direita, e nenhum preenchimento na parte superior e inferior. O TextInput é marcado como flexível, ou seja, ele absorverá todo o espaço disponível em seu eixo de layout."

#: ../../tutorial/tutorial-2.rst:197 c76e44e91a204cad98cc517be7a1bbca
msgid "The TextInput is assigned as an instance variable of the class. This gives us easy access to the widget instance - something that we'll use in a moment."
msgstr "O TextInput é atribuído como uma variável de instância da classe. Isso nos permite acessar facilmente a instância do widget, o que será utilizado em breve."

#: ../../tutorial/tutorial-2.rst:200 6e70c51a7f9f497eb6a5a81880b6fc3c
msgid "Next, we define a box to hold these two widgets::"
msgstr "Após isso, definimos um container para colocar esses dois widgets::"

#: ../../tutorial/tutorial-2.rst:206 1e0ddb95c1864299a5d8162142d91775
#, fuzzy
msgid "The ``name_box`` is a box just like the main box; however, this time, it's a ``ROW`` box. That means content will be added horizontally, and it will try to make its width as narrow as possible. The box also has some margin - 5px on all sides."
msgstr "A container ``name_box`` é parecido com o container principal, só que agora ele é do tipo ``ROW``. Isso significa que o conteúdo será adicionado horizontalmente e tentará ficar o mais estreito possível. Esse container também possui preenchimento - 5px em todos os lados."

#: ../../tutorial/tutorial-2.rst:211 15b359aa12554ee5b2829b96d0296dd9
msgid "Now we define a button::"
msgstr "Agora definimos um botão::"

#: ../../tutorial/tutorial-2.rst:219 fc2b856ffed4497384a8b62d1d1ef874
#, fuzzy
msgid "The button also has 5px of margin on all sides. We also define a *handler* - a method to invoke when the button is pressed."
msgstr "O botão também possui 5px de preenchimento em todos os lados. Além disso, definimos um *gatilho* - um método a ser invocado quando o botão for pressionado."

#: ../../tutorial/tutorial-2.rst:222 b4c687ebde8c49b7a8d7a2d4e5251585
msgid "Then, we add the name box and the button to the main box::"
msgstr "Então, adicionamos o container name_box e o botão ao container principal::"

#: ../../tutorial/tutorial-2.rst:227 f332b09cbad54558a04eefcac365757a
#, fuzzy
msgid "This completes our layout; the rest of the startup method is as it was previously - defining a ``MainWindow``, and assigning the main box as the window's content::"
msgstr "Com isso, finalizamos o layout; o restante do código do método startup() permanece como antes - definindo uma MainWindow (Janela principal) e a atribuição do container principal como conteúdo dessa janela::"

#: ../../tutorial/tutorial-2.rst:235 8c1a144159f04ec19a19723dbb6bd3b1
#, fuzzy
msgid "The last thing we need to do is define the handler for the button. A handler can be any method, generator, or asynchronous coroutine; it accepts the widget that generated the event as an argument, and will be invoked whenever the button is pressed::"
msgstr "A última etapa consiste na definição do gatilho do botão. Um gatilho pode ser qualquer método, gerador ou corrotina assíncrona; ele aceita como argumento o widget que gerou o evento e será invocado sempre que o botão for pressionado::"

#: ../../tutorial/tutorial-2.rst:243 a1fd82f2333b49d59252dd01f4a74dba
msgid "The body of the method is a simple print statement - however, it will interrogate the current value of the name input, and use that content as the text that is printed."
msgstr "O corpo do método é uma simples instrução de impressão. No entanto, ele consultará o valor atual do campo de entrada de nome e usará esse conteúdo como o texto a ser impresso."

#: ../../tutorial/tutorial-2.rst:247 ffc6248d2f224692a081ecaf55ec42a3
msgid "Now that we've made these changes we can see what they look like by starting the application again. As before, we'll use developer mode:"
msgstr "Ao concluirmos essas alterações, podemos visualizar o resultado reiniciando a aplicação. Seguindo o procedimento anterior, utilizaremos o modo de desenvolvedor:"

#: ../../tutorial/tutorial-2.rst:252 ../../tutorial/tutorial-2.rst:289
#: 33d4b2deb3874435a9c05b4c52227fe2 606e916df34540f8b8276c605708748b
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/tutorial-2.rst:261 ../../tutorial/tutorial-2.rst:295
#: 51471227c16245ed8b3e1c89bfb531fd e137e8312d734528bb174c3bf9ab339c
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-2.rst:270 ../../tutorial/tutorial-2.rst:301
#: 367fc15643d84e93ba694f45a89a41da 8fd90729c1514a9fa81a38354711b13a
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-2.rst:279 3413d1d3f70f4a768bdf3f7f8784a2ec
#, fuzzy
msgid "You'll notice that this time, it *doesn't* install dependencies. Briefcase can detect that the application has been run before, and to save time, will only run the application. If you add new dependencies to your app, you need to make sure that they're installed by passing in a ``-r`` option when you run ``briefcase dev``."
msgstr "Dessa vez, você vai reparar que as dependências *não são* instaladas. O Briefcase consegue identificar se o app já foi aberto antes e, pra economizar tempo, só executa ele. Se você adicionar novas dependências, pode garantir que elas sejam instaladas usando a opção ``-r`` quando executar o comando ``briefcase dev``."

#: ../../tutorial/tutorial-2.rst:285 231cf3fd1a9c4660b2044d792a50d8de
msgid "This should open a GUI window:"
msgstr "Isso deve abrir uma janela GUI:"

#: ../../tutorial/tutorial-2.rst:291 4c5a7cc62a0a4f529f1304cd9a631270
msgid "Hello World Tutorial 2 window, on macOS"
msgstr "Tutorial 2: Janela \"Hello World\", no macOS"

#: ../../tutorial/tutorial-2.rst:297 8307128a832c40c5b103f73bd417a5a5
msgid "Hello World Tutorial 2 window, on Linux"
msgstr "Tutorial 2: Janela \"Hello World\", no Linux"

#: ../../tutorial/tutorial-2.rst:303 9a0cca46d47043228a7390faf3dab05d
msgid "Hello World Tutorial 2 window, on Windows"
msgstr "Tutorial 2: Janela \"Hello World\", no Windows"

#: ../../tutorial/tutorial-2.rst:307 38c9aee47c35472fa2d5cc70f839bc0b
msgid "If you enter a name in the text box, and press the GUI button, you should see output appear in the console where you started the application."
msgstr "Se você escrever um nome na caixa de texto e clicar no botão da interface, vai ver uma mensagem aparecer no console onde você abriu a aplicação."

#: ../../tutorial/tutorial-2.rst:310 aee9f2a8601c49b79f8c4b63b9eb57ee
msgid "Before continuing, close the app. As with Tutorial 1, you can do this by pressing the close button on the application window, by selecting Quit/Exit from the application's menu, or by typing **Ctrl+C** in the terminal where you ran ``briefcase dev``."
msgstr ""

#: ../../tutorial/tutorial-2.rst:316 d9d95d995cad48a782fc1461330d67cc
msgid "Next steps"
msgstr "Próximos passos"

#: ../../tutorial/tutorial-2.rst:318 ba0ec44e64454c669fcc71b8c65c9cf0
msgid "We've now got an application that does something a little more interesting. But it only runs on our own computer. Let's package this application for distribution. In :doc:`Tutorial 3 <tutorial-3>`, we'll wrap our application up as a standalone installer that we could send to a friend, a customer, or upload to an App Store."
msgstr "Criamos uma aplicação com recursos mais interessantes. Porém, ela somente funciona em nosso computador. Vamos empacotar esta aplicação para distribuição. No :doc:`Tutorial 3 <tutorial-3>`, encapsularemos nossa aplicação em um instalador independente, que poderemos enviar a amigos, clientes ou publicar em uma App Store."

#~ msgid "Lets do something more interesting with our ``HelloWorld`` app."
#~ msgstr ""


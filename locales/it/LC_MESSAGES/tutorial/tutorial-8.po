msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-21 16:18-0400\n"
"PO-Revision-Date: 2024-02-13 12:13+0800\n"
"Last-Translator: Russell Keith-Magee <russell@keith-magee.com>\n"
"Language-Team: it <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 3.15.6\n"

#: docs/en/tutorial/tutorial-8.md:1
#, fuzzy
msgid "Tutorial 8 - Making it Smooooth"
msgstr "Esercitazione 8 - Renderlo liscio"

#: docs/en/tutorial/tutorial-8.md:3
msgid ""
"So far, our application has been relatively simple - displaying GUI widgets, "
"calling a simple third-party library, and displaying output in a dialog. All "
"these operations happen very quickly, and our application remains responsive."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:8
msgid ""
"However, in a real world application, we'll need to perform complex tasks or "
"calculations that may take a while to complete - and as those tasks are "
"performed, we want our application to remain responsive. Let's make a change "
"to our application that might take a little time to complete, and see the "
"changes that need to be made to accommodate that behavior."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:15
msgid "Accessing an API"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:17
msgid ""
"A common time-consuming task an app will need to perform is to make a "
"request on a web API to retrieve data, and display that data to the user. "
"Web APIs sometimes take a second or two to respond, so if we're calling an "
"API like that, we need to ensure our application doesn't become unresponsive "
"while we wait for the web API to return an answer."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:23
msgid ""
"This is a toy app, so we don't have a *real* API to work with, so we'll use "
"the [{JSON} Placeholder API]{1} as a source of data. The {JSON} Placeholder "
"API has a number of \"fake\" API endpoints you can use as test data. One of "
"those APIs is the `/posts/` endpoint, which returns fake blog posts. If you "
"open `https://jsonplaceholder.typicode.com/posts/42` in your browser, you'll "
"get a JSON payload describing a single post - some [Lorum ipsum]{2} content "
"for a blog post with ID 42."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:33
msgid ""
"The Python standard library contains all the tools you'd need to access an "
"API. However, the built-in APIs are very low level. They are good "
"implementations of the HTTP protocol - but they require the user to manage "
"lots of low-level details, like URL redirection, sessions, authentication, "
"and payload encoding. As a \"normal browser user\" you're probably used to "
"taking these details for granted, as a browser manages them for you."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:41
msgid ""
"As a result, people have developed third-party libraries that wrap the built-"
"in APIs and provide a simpler API that is a closer match for the everyday "
"browser experience. We're going to use one of those libraries to access the "
"{JSON} Placeholder API - a library called [`httpx`]{1}. Briefcase uses "
"`httpx` internally, so it's already in your local environment -you don't "
"need to install it separately to use it here."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:49
msgid ""
"Let's add a `httpx` API call to our app. Modify the `requires` setting in "
"our `pyproject.toml` to include the new requirement:"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:59
msgid "Add an import to the top of the `app.py` to import `httpx`:"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:65
#, fuzzy
msgid "Then modify the `say_hello()` callback so it looks like this:"
msgstr ""
"Per rendere il nostro tutorial asincrono, modificare il gestore dell'evento "
"`say_hello()` in modo che assomigli a questo:"

#: docs/en/tutorial/tutorial-8.md:83
msgid ""
"This will change the `say_hello()` callback so that when it is invoked, it "
"will:"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:86
msgid "make a GET request on the JSON placeholder API to obtain post 42;"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:87
msgid "decode the response as JSON;"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:88
msgid "extract the body of the post; and"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:89
msgid ""
"include the body of that post as the text of the \"message\" dialog, in "
"place of the text generated by Faker."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:92
msgid ""
"Lets run our updated app in Briefcase developer mode to check that our "
"change has worked. As we've added a new requirement, we need to tell "
"developer mode to reinstall requirements, by using the `-r` argument:"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:96
#: docs/en/tutorial/tutorial-8.md:332
msgid "/// tab | macOS"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:107
#: docs/en/tutorial/tutorial-8.md:129
#: docs/en/tutorial/tutorial-8.md:151
msgid ""
"When you enter a name and press the button, you should see a dialog that "
"looks something like:"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:110
msgid "![Hello World Tutorial 8 dialog, on macOS]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:112
#: docs/en/tutorial/tutorial-8.md:134
#: docs/en/tutorial/tutorial-8.md:156
msgid "/// caption"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:114
#: docs/en/tutorial/tutorial-8.md:116
#: docs/en/tutorial/tutorial-8.md:136
#: docs/en/tutorial/tutorial-8.md:138
#: docs/en/tutorial/tutorial-8.md:158
#: docs/en/tutorial/tutorial-8.md:160
#: docs/en/tutorial/tutorial-8.md:167
#: docs/en/tutorial/tutorial-8.md:174
#: docs/en/tutorial/tutorial-8.md:338
#: docs/en/tutorial/tutorial-8.md:346
#: docs/en/tutorial/tutorial-8.md:354
#: docs/en/tutorial/tutorial-8.md:362
#: docs/en/tutorial/tutorial-8.md:370
msgid "///"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:118
#: docs/en/tutorial/tutorial-8.md:340
msgid "/// tab | Linux"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:132
msgid "![Hello World Tutorial 8 dialog, on Linux]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:140
#: docs/en/tutorial/tutorial-8.md:348
msgid "/// tab | Windows"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:154
msgid "![Hello World Tutorial 8 dialog, on Windows]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:162
#: docs/en/tutorial/tutorial-8.md:356
msgid "/// tab | Android"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:164
msgid ""
"You can't run an Android app in developer mode - use the instructions for "
"your chosen desktop platform."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:169
#: docs/en/tutorial/tutorial-8.md:364
msgid "/// tab | iOS"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:171
msgid ""
"You can't run an iOS app in developer mode - use the instructions for your "
"chosen desktop platform."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:176
msgid ""
"Unless you've got a *really* fast internet connection, you may notice that "
"when you press the button, the GUI for your app locks up for a little bit. "
"The operating system may even manifest this with a \"beachball\" or "
"\"spinner\" cursor to indicate that the app is being unresponsive."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:182
#, fuzzy
msgid ""
"This is because the web request we have made is *synchronous*. When our "
"application makes the web request, it waits for the API to return a response "
"before continuing. While it's waiting, it *isn't* allowing the application "
"to redraw - and as a result, the application locks up."
msgstr ""
"A meno che non si disponga di una connessione Internet *molto* veloce, si "
"potrebbe notare che quando si preme il pulsante, l'interfaccia grafica "
"dell'applicazione si blocca per un po'. Questo perché la richiesta web che "
"abbiamo fatto è *sincrona*. Quando l'applicazione effettua la richiesta web, "
"attende che l'API restituisca una risposta prima di continuare. Mentre "
"aspetta, non permette all'applicazione di ridisegnare e di conseguenza "
"l'applicazione si blocca."

#: docs/en/tutorial/tutorial-8.md:187
#, fuzzy
msgid "GUI Event Loops"
msgstr "Loop di eventi della GUI"

#: docs/en/tutorial/tutorial-8.md:189
#, fuzzy
msgid ""
"To understand why this happens, we need to dig into the details of how a GUI "
"application works. The specifics vary depending on the platform; but the "
"high level concepts are the same, no matter the platform or GUI environment "
"you're using."
msgstr ""
"Per capire perché questo accade, dobbiamo entrare nei dettagli del "
"funzionamento di un'applicazione GUI. Le specifiche variano a seconda della "
"piattaforma, ma i concetti di alto livello sono gli stessi, "
"indipendentemente dalla piattaforma o dall'ambiente GUI utilizzato."

#: docs/en/tutorial/tutorial-8.md:194
#, fuzzy
msgid "A GUI app is, fundamentally, a single loop that looks something like:"
msgstr ""
"Un'applicazione GUI è, fondamentalmente, un singolo ciclo che assomiglia a:"

#: docs/en/tutorial/tutorial-8.md:202
#, fuzzy
msgid ""
"This loop is called the *Event Loop*. (These aren't actual method names - "
"it's an illustration of what is going on using \"pseudo-code\")."
msgstr ""
"Questo ciclo è chiamato *Event Loop*. (Non si tratta di nomi di metodi "
"reali, ma di un'illustrazione di ciò che avviene in \"pseudo-codice\")."

#: docs/en/tutorial/tutorial-8.md:205
#, fuzzy
msgid ""
"When you click on a button, or drag a scroll bar, or type a key, you are "
"generating an \"event\". That \"event\" is put onto a queue, and the app "
"will process the queue of events when it next has the opportunity to do so. "
"The user code that is triggered in response to the event is called an *event "
"handler*. These event handlers are invoked as part of the `process_events()` "
"call."
msgstr ""
"Quando si fa clic su un pulsante, si trascina una barra di scorrimento o si "
"digita un tasto, si genera un \"evento\". Questo \"evento\" viene inserito "
"in una coda e l'applicazione elaborerà la coda di eventi quando ne avrà "
"l'opportunità. Il codice utente che viene attivato in risposta all'evento è "
"chiamato *gestore di eventi*. Questi gestori di eventi vengono invocati come "
"parte della chiamata `process_events()`."

#: docs/en/tutorial/tutorial-8.md:212
#, fuzzy
msgid ""
"Once an app has processed all the available events, it will `redraw()` the "
"GUI. This takes into account any changes that the events have caused to the "
"display of the app, as well as anything else that is going on in the "
"operating system - for example, the windows of another app may obscure or "
"reveal part of our app's window, and our app's redraw will need to reflect "
"the portion of the window that is currently visible."
msgstr ""
"Una volta che un'applicazione ha elaborato tutti gli eventi disponibili, "
"essa `ridisegna()` la GUI. Questa operazione tiene conto di tutti i "
"cambiamenti che gli eventi hanno causato alla visualizzazione "
"dell'applicazione, nonché di qualsiasi altra cosa stia accadendo nel sistema "
"operativo: ad esempio, le finestre di un'altra applicazione possono oscurare "
"o rivelare parte della finestra della nostra applicazione, e il ridisegno "
"della nostra applicazione dovrà riflettere la porzione di finestra "
"attualmente visibile."

#: docs/en/tutorial/tutorial-8.md:219
#, fuzzy
msgid ""
"The important detail to notice: while an application is processing an event, "
"*it can't redraw*, and *it can't process other events*."
msgstr ""
"Il dettaglio importante da notare: mentre un'applicazione sta elaborando un "
"evento, *non può ridisegnare* e *non può elaborare altri eventi*."

#: docs/en/tutorial/tutorial-8.md:222
#, fuzzy
msgid ""
"This means any user logic contained in an event handler needs to complete "
"quickly. Any delay in completing the event handler will be observed by the "
"user as a slowdown (or stop) in GUI updates. If this delay is long enough, "
"your operating system may report this as a problem - the macOS \"beachball\" "
"and Windows \"spinner\" icons are the operating system telling you that your "
"app is taking too long in an event handler."
msgstr ""
"Ciò significa che qualsiasi logica utente contenuta in un gestore di eventi "
"deve essere completata rapidamente. Qualsiasi ritardo nel completamento del "
"gestore di eventi sarà osservato dall'utente come un rallentamento (o un "
"arresto) degli aggiornamenti della GUI. Se il ritardo è sufficientemente "
"lungo, il sistema operativo può segnalarlo come un problema: le icone "
"\"beachball\" di macOS e \"spinner\" di Windows indicano che l'applicazione "
"sta impiegando troppo tempo in un gestore di eventi."

#: docs/en/tutorial/tutorial-8.md:230
#, fuzzy
msgid ""
"Simple operations like \"update a label\", or "
"\"recompute the total of the inputs\" are easy to complete quickly. However, "
"there are a lot of operations that can't be completed quickly. If you're "
"performing a complex mathematical calculation, or indexing all the files on "
"a file system, or performing a large network request, you can't "
"\"just do it quickly\" - the operations are inherently slow."
msgstr ""
"Operazioni semplici come \"aggiornare un'etichetta\" o "
"\"ricalcolare il totale degli input\" sono facili da completare rapidamente. "
"Tuttavia, ci sono molte operazioni che non possono essere completate "
"rapidamente. Se si sta eseguendo un calcolo matematico complesso, o "
"l'indicizzazione di tutti i file di un file system, o l'esecuzione di una "
"richiesta di rete di grandi dimensioni, non è possibile \"farlo rapidamente\""
": le operazioni sono intrinsecamente lente."

#: docs/en/tutorial/tutorial-8.md:237
#, fuzzy
msgid "So - how do we perform long-lived operations in a GUI application?"
msgstr ""
"Quindi, come si eseguono operazioni di lunga durata in un'applicazione GUI?"

#: docs/en/tutorial/tutorial-8.md:239
#, fuzzy
msgid "Asynchronous programming"
msgstr "Programmazione asincrona"

#: docs/en/tutorial/tutorial-8.md:241
#, fuzzy
msgid ""
"What we need is a way to tell an app in the middle of a long-lived event "
"handler that it is OK to temporarily release control back to the event loop, "
"as long as we can resume where we left off. It's up to the app to determine "
"when this release can occur; but if the app releases control to the event "
"loop regularly, we can have a long-running event handler *and* maintain a "
"responsive UI."
msgstr ""
"Abbiamo bisogno di un modo per dire a un'applicazione, nel mezzo di un "
"gestore di eventi di lunga durata, che va bene rilasciare temporaneamente il "
"controllo al ciclo di eventi, a patto che si possa riprendere da dove si era "
"interrotto. Spetta all'applicazione determinare quando questo rilascio può "
"avvenire; ma se l'applicazione rilascia regolarmente il controllo al ciclo "
"di eventi, possiamo avere un gestore di eventi di lunga durata *e* mantenere "
"un'interfaccia utente reattiva."

#: docs/en/tutorial/tutorial-8.md:248
#, fuzzy
msgid ""
"We can do this by using *asynchronous programming*. Asynchronous programming "
"is a way to describe a program that allows the interpreter to run multiple "
"functions at the same time, sharing resources between all the concurrently "
"running functions."
msgstr ""
"È possibile farlo utilizzando la *programmazione asincrona*. La "
"programmazione asincrona è un modo per descrivere un programma che consente "
"all'interprete di eseguire più funzioni contemporaneamente, condividendo le "
"risorse tra tutte le funzioni in esecuzione simultanea."

#: docs/en/tutorial/tutorial-8.md:253
#, fuzzy
msgid ""
"Asynchronous functions (known as *coroutines*) need to be explicitly "
"declared as being asynchronous. They also need to internally declare when an "
"opportunity exists to change context to another coroutine."
msgstr ""
"Le funzioni asincrone (note come *co-routine*) devono essere dichiarate "
"esplicitamente come asincrone. Inoltre, devono dichiarare internamente "
"quando esiste la possibilità di cambiare contesto a un'altra co-routine."

#: docs/en/tutorial/tutorial-8.md:257
#, fuzzy
msgid ""
"In Python, asynchronous programming is implemented using the `async` and "
"`await` keywords, and the [asyncio]{1} module in the standard library. The "
"`async` keyword allows us to declare that a function is an asynchronous "
"coroutine. The `await` keyword provides a way to declare when an opportunity "
"exists to change context to another coroutine. The [asyncio]{2} module "
"provides some other useful tools and primitives for asynchronous coding."
msgstr ""
"In Python, la programmazione asincrona è implementata utilizzando le parole "
"chiave `async` e `await` e il modulo [asyncio]{1} della libreria standard. "
"La parola chiave `async` ci permette di dichiarare che una funzione è una co-"
"routine asincrona. La parola chiave `await` fornisce un modo per dichiarare "
"quando esiste l'opportunità di cambiare contesto a un'altra co-routine. Il "
"modulo [asyncio]{2} fornisce altri strumenti e primitive utili per la "
"codifica asincrona."

#: docs/en/tutorial/tutorial-8.md:267
#, fuzzy
msgid "Making the tutorial asynchronous"
msgstr "Rendere l'esercitazione asincrona"

#: docs/en/tutorial/tutorial-8.md:269
#, fuzzy
msgid ""
"To make our tutorial asynchronous, modify the `say_hello()` event handler so "
"it looks like this:"
msgstr ""
"Per rendere il nostro tutorial asincrono, modificare il gestore dell'evento "
"`say_hello()` in modo che assomigli a questo:"

#: docs/en/tutorial/tutorial-8.md:288
#, fuzzy
msgid ""
"There are only three changes to this callback from the previous version:"
msgstr ""
"In questo codice ci sono solo 4 modifiche rispetto alla versione precedente:"

#: docs/en/tutorial/tutorial-8.md:290
#, fuzzy
msgid ""
"The client that is created is an asynchronous `AsyncClient()`, rather than a "
"synchronous `Client()`. This tells `httpx` that it should operate in "
"asynchronous mode, rather than synchronous mode."
msgstr ""
"Il client creato è un asincrono `AsyncClient()`, invece di un sincrono "
"`Client()`. Questo indica a `httpx` che deve operare in modalità asincrona, "
"anziché sincrona."

#: docs/en/tutorial/tutorial-8.md:293
#, fuzzy
msgid ""
"The context manager used to create the client is marked as `async`. This "
"tells Python that there is an opportunity to release control as the context "
"manager is entered and exited."
msgstr ""
"Il gestore di contesto usato per creare il client è contrassegnato come "
"`async`. Questo indica a Python che c'è l'opportunità di rilasciare il "
"controllo quando il gestore di contesto viene inserito e abbandonato."

#: docs/en/tutorial/tutorial-8.md:296
msgid ""
"The `get` call is made with an `await` keyword. This instructs the app that "
"while we are waiting for the response from the network, the app can release "
"control to the event loop. We've seen this keyword before - we also use "
"`await` when displaying the dialog box. The reason for that usage is the "
"same as it is for the HTTP request - we need to tell the app that while the "
"dialog is displayed, and we're waiting for the user to push a button, it's "
"OK to release control back to the event loop."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:305
msgid ""
"It's also important to note that the handler itself is defined as `async def`"
", rather than just `def`. This tells Python that the method is an "
"asynchronous coroutine. We made this change back in Tutorial 3 when we added "
"the dialog box. You can only use `await` statements inside a method that is "
"declared as `async def`."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:311
#, fuzzy
msgid ""
"Toga allows you to use regular methods or asynchronous coroutines as "
"handlers; Toga manages everything behind the scenes to make sure the handler "
"is invoked or awaited as required."
msgstr ""
"Toga consente di utilizzare metodi regolari o co-routine asincrone come "
"gestori; Toga gestisce tutto dietro le quinte per assicurarsi che il gestore "
"sia invocato o atteso come richiesto."

#: docs/en/tutorial/tutorial-8.md:315
#, fuzzy
msgid ""
"If you save these changes and re-run the app in development mode, there "
"won't be any obvious changes to the app. However, when you click on the "
"button to trigger the dialog, you may notice a number of subtle improvements:"
msgstr ""
"Se si salvano queste modifiche e si esegue nuovamente l'applicazione (con `"
"briefcase dev` in modalità di sviluppo, oppure aggiornando ed eseguendo "
"nuovamente l'applicazione confezionata), non ci saranno cambiamenti evidenti "
"nell'applicazione. Tuttavia, quando si fa clic sul pulsante per attivare la "
"finestra di dialogo, si possono notare alcuni sottili miglioramenti:"

#: docs/en/tutorial/tutorial-8.md:320
#, fuzzy
msgid ""
"The button returns to an \"unclicked\" state, rather than being stuck in a "
"\"clicked\" state."
msgstr ""
"Il pulsante torna a uno stato \"non cliccato\", anziché essere bloccato in "
"uno stato \"cliccato\"."

#: docs/en/tutorial/tutorial-8.md:322
msgid "The \"beachball\"/\"spinner\" icon won't appear."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:323
#, fuzzy
msgid ""
"If you move/resize the app window while waiting for the dialog to appear, "
"the window will redraw."
msgstr ""
"Se si sposta/ridimensiona la finestra dell'applicazione mentre si attende la "
"visualizzazione della finestra di dialogo, la finestra verrà ridisegnata."

#: docs/en/tutorial/tutorial-8.md:325
#, fuzzy
msgid "If you try to open an app menu, the menu will appear immediately."
msgstr ""
"Se si tenta di aprire il menu di un'applicazione, il menu viene visualizzato "
"immediatamente."

#: docs/en/tutorial/tutorial-8.md:327
msgid ""
"We can now run the full app. However, as we've added an extra requirement "
"(`httpx`) we also need to update our app's requirements; we can do this by "
"passing `-r` to `briefcase run`. This will update our app's requirements, "
"then re-build the app, then launch the app:"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:372
msgid ""
"You should see you app running, and remaining responsive when you press the "
"button and network content is retrieved."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:375
msgid "Next steps"
msgstr "Prossimi passi"

#: docs/en/tutorial/tutorial-8.md:377
msgid ""
"This has been a taste for what you can do with the tools provided by the "
"BeeWare project. Over the course of this tutorial, you have:"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:380
msgid "Created a new GUI app project;"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:381
msgid "Run that app in development mode;"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:382
msgid "Built the app as a standalone binary for a desktop operating system;"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:383
msgid "Packaged that project for distribution to others;"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:384
msgid "Run the app on a mobile simulator and/or device;"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:385
msgid "Run the app as a web app;"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:386
msgid "Added a third-party dependency to your app; and"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:387
msgid "Modified the app so that it remains responsive."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:389
msgid "So - where to from here?"
msgstr ""

#: docs/en/tutorial/tutorial-8.md:391
msgid ""
"If you'd like to go further, there are some additional [topic tutorials]{1} "
"that go into detail on specific aspects of application development."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:394
msgid ""
"If you'd like to know more about how to build complex user interfaces with "
"Toga, you can dive into [Toga's documentation]{1}. Toga also has its own "
"tutorial [demonstrating how to use various features of the widget toolkit]"
"{2}."
msgstr ""

#: docs/en/tutorial/tutorial-8.md:399
msgid ""
"If you'd like to know more about the capabilities of Briefcase, you can dive "
"into [Briefcase's documentation]{1}."
msgstr ""

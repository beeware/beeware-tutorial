msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-25 23:41+0000\n"
"PO-Revision-Date: 2025-06-05 01:01+0000\n"
"Last-Translator: John <johnzhou721@gmail.com>\n"
"Language-Team: Chinese (Simplified Han script) <https://hosted.weblate.org/"
"projects/beeware/tutorial/tutorial-4/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.12-dev\n"
"Generated-By: Babel 2.16.0\n"

#: ../../tutorial/tutorial-4.rst:3 095a20d68b59496e9ff67f5b9c9497e5
msgid "Tutorial 4 - Updating your application"
msgstr "教程 4 - 更新应用程序"

#: ../../tutorial/tutorial-4.rst:5 48603895c251446b96cabbb9b632a61e
msgid "In the last tutorial, we packaged our application as a native application. If you're dealing with a real-world app, that isn't going to be the end of the story - you'll likely do some testing, discover problems, and need to make some changes. Even if your application is perfect, you'll eventually want to publish version 2 of your application with improvements."
msgstr ""
"在上一教程中，我们将应用程序打包为本地应用程序。如果您面对的是一个真实世界的"
"应用程序，这并不是故事的结束--"
"您可能会进行一些测试，发现一些问题，并需要进行一些修改。即使您的应用程序是完"
"美的，您最终还是希望发布改进后的第二版应用程序。"

#: ../../tutorial/tutorial-4.rst:11 f23a96b01cd24622bfacbdc9604c51a1
msgid "So - how do you update your installed app when you make code changes?"
msgstr "那么，在更改代码时如何更新已安装的应用程序？"

#: ../../tutorial/tutorial-4.rst:14 38c2d3a4568b409c855516e9c1b3fe5d
msgid "Updating application code"
msgstr "更新应用程序代码"

#: ../../tutorial/tutorial-4.rst:16 9683153b6b4347fca656609ec21ee119
msgid "Our application currently prints to the console when you press the button. However, GUI applications shouldn't really use the console for output. They need to use dialogs to communicate with users."
msgstr "目前，我们的应用程序会在您按下按钮时打印到控制台。但是，图形用户界面应用程序"
"实际上不应该使用控制台进行输出。它们需要使用对话框与用户交流。"

#: ../../tutorial/tutorial-4.rst:20 97094341a84147c1bdc1fffc57a42567
msgid "Let's add a dialog box to say hello, instead of writing to the console. Modify the ``say_hello`` callback so it looks like this::"
msgstr "让我们添加一个对话框来说 \"你好\"，而不是写入控制台。修改 ``say_hello`` "
"回调，使它看起来像这样：："

#: ../../tutorial/tutorial-4.rst:31 4dbdb0dca00243d6a6c5e778a372d124
msgid "We need to make the method ``async`` so that when we display the dialog, the rest of the application continues to run. Don't worry about this detail too much right now - we'll give a more detailed explanation in :doc:`Tutorial 8 <tutorial-8>`."
msgstr ""
"我们需要将方法设置为``async``，以便在显示对话框时，应用程序的其余部分继续运行"
"。现在不要太担心这个细节——我们将在 :doc:`Tutorial 8 <tutorial-8>` "
"中给出更详细的解释。"

#: ../../tutorial/tutorial-4.rst:35 b682bcef3af8479c9f551ede9217eea0
msgid "This directs Toga to open a modal dialog box when the button is pressed."
msgstr "这将指示 Toga 在按下按钮时打开一个模态对话框。"

#: ../../tutorial/tutorial-4.rst:37 9047a157a5d849318cbd3c7245b70950
msgid "If you run ``briefcase dev``, enter a name, and press the button, you'll see the new dialog box:"
msgstr "如果运行 ``briefcase dev``，输入名称并按下按钮，就会看到新的对话框："

#: ../../tutorial/tutorial-4.rst:42 ../../tutorial/tutorial-4.rst:76
#: ../../tutorial/tutorial-4.rst:177 47110cedbc6f4f28b5f1fa3c0d58928e
#: 60b7d3eeab8b4569b74402758963c345 7fe1e31014f9450896462581156a47ad
msgid "macOS"
msgstr "macOS"

#: ../../tutorial/tutorial-4.rst:44 b99f156ff2444b00a3b632e1f20a1d55
msgid "Hello World Tutorial 4 dialog, on macOS"
msgstr "Hello World 教程 4 对话框，在 macOS 上"

#: ../../tutorial/tutorial-4.rst:48 ../../tutorial/tutorial-4.rst:90
#: ../../tutorial/tutorial-4.rst:198 a05a5cd569ac4f17abe91642bc14b4eb
#: a1b9548d17224fedabc666fbb2cba1fd a5102f35dcb945ad8428708192d99605
msgid "Linux"
msgstr "Linux"

#: ../../tutorial/tutorial-4.rst:50 7df7e42e62154624bf1867af7f309493
msgid "Hello World Tutorial 4 dialog, on Linux"
msgstr "Hello World 教程 4 对话框，在 Linux 上"

#: ../../tutorial/tutorial-4.rst:54 ../../tutorial/tutorial-4.rst:111
#: ../../tutorial/tutorial-4.rst:225 9ac1f1d3092148d3b9117d9957d504fd
#: d2a042b3579841728f3898648b7ce737 fa3e3a55ac2847c1b72039b4ed0c5b3c
msgid "Windows"
msgstr "Windows"

#: ../../tutorial/tutorial-4.rst:56 16bf19caf67847cfa71147cab88f4b23
msgid "Hello World Tutorial 4 dialog, on Windows"
msgstr "Hello World 教程 4 对话框，在 Windows 上"

#: ../../tutorial/tutorial-4.rst:60 3fb4915286ec4c04b89c2b781879cfa3
msgid "However, if you run ``briefcase run``, the dialog box won't appear."
msgstr "但是，如果运行\\ ``briefcase run``，对话框就不会出现。"

#: ../../tutorial/tutorial-4.rst:62 4340ecf49c43456fa9abd28719acfa2a
msgid "Why is this? Well, ``briefcase dev`` operates by running your code in place - it tries to produce as realistic runtime environment for your code as possible, but it doesn't provide or use any of the platform infrastructure for wrapping your code as an application. Part of the process of packaging your app involves copying your code *into* the application bundle - and at the moment, your application still has the old code in it."
msgstr ""
"为什么会这样？``briefcase dev``\\ 通过就地运行您的代码来运行--"
"它试图为您的代码提供尽可能逼真的运行环境，但并不提供或使用任何平台基础架构来"
"将您的代码包装成应用程序。打包应用程序的部分过程包括将代码复制到应用程序捆绑"
"包中，目前，您的应用程序中仍有旧代码。"

#: ../../tutorial/tutorial-4.rst:69 8f65a62b9a4c433da906f80a907134a2
msgid "So - we need to tell briefcase to update your app, copying in the new version of the code. We *could* do this by deleting the old platform directory and starting from scratch. However, Briefcase provides an easier way - you can update the code for your existing bundled application:"
msgstr ""
"因此，我们需要告诉 Briefcase 让它更新应用程序，复制新版本的代码。我们\\ "
"*可以*\\ 删除旧的平台目录，然后从头开始。不过，Briefcase "
"提供了一种更简单的方法--您可以更新现有捆绑的应用程序的代码："

#: ../../tutorial/tutorial-4.rst:125 a87ad9f47e35401aaf1bee42c4a8843f
msgid "If Briefcase can't find the scaffolded template, it will automatically invoke ``create`` to generate a fresh scaffold."
msgstr "如果 Briefcase 找不到脚手架模板，它会自动调用 ``create`` 生成一个新的脚手架。"

#: ../../tutorial/tutorial-4.rst:128 b853caa4f6a34a20ac139aeda667c0c2
msgid "Now that we've updated the installer code, we can then run ``briefcase build`` to re-compile the app, ``briefcase run`` to run the updated app, and ``briefcase package`` to repackage the application for distribution."
msgstr ""
"更新了安装程序代码后，我们就可以运行 ``briefcase build`` 来重新编译应用程序，"
"运行 ``briefcase run`` 来运行更新后的应用程序，并运行 ``briefcase package`` "
"来重新打包应用程序以便分发。"

#: ../../tutorial/tutorial-4.rst:132 bfb2287cd5f34d129b9e5a4ad27888b2
msgid "(macOS users, remember that as noted in :doc:`Tutorial 3 <tutorial-3>`, for the tutorial we recommend running ``briefcase package`` with the ``--adhoc-sign`` flag to avoid the complexity of setting up a code signing identity and keep the tutorial as simple as possible.)"
msgstr ""
"(macOS 用户请记住，正如 :doc:`Tutorial 3<tutorial-3>` 中所述，我们建议在运行 "
"``briefcase package`` 时使用 ``--adhoc-sign`` "
"标志，以避免设置代码签名身份的复杂性，并使教程尽可能简单）"

#: ../../tutorial/tutorial-4.rst:138 62252775407d4a75b6a3e9541e70cbe3
msgid "Update and run in one step"
msgstr "更新和运行一步到位"

#: ../../tutorial/tutorial-4.rst:140 9eec2a794f11496da7184c38ca35d973
msgid "If you're rapidly iterating code changes, you'll likely want to make a code change, update the application, and immediately re-run your application. For most purposes, developer mode (``briefcase dev``) will be the easiest way to do this sort of rapid iteration; however, if you're testing something about how your application runs as a native binary, or hunting a bug that only manifests when your application is in packaged form, you may need to use repeated calls to ``briefcase run``. To simplify the process of updating and running the bundled app, Briefcase has a shortcut to support this usage pattern - the ``-u`` (or ``--update``) option on the ``run`` command."
msgstr ""
"如果要快速迭代代码更改，很可能需要更改代码、更新应用程序并立即重新运行应用程"
"序。对于大多数情况来说，开发人员模式 (``briefcase dev``) "
"是进行这种快速迭代的最简单方法；但是，如果您要测试应用程序作为原生二进制文件"
"的运行，或查找一个只有在应用程序打包时才会出现的错误，您可能需要反复调用 ``"
"briefcase run``。为了简化更新和运行打包应用程序的过程，Briefcase "
"提供了支持这种使用模式的快捷方式 - ``run`` 命令上的 ``-u``（或 "
"``--update``）选项。"

#: ../../tutorial/tutorial-4.rst:150 628b59882b654b07a1c19c7b9a08f3b7
msgid "Let's try making another change. You may have noticed that if you don't type a name in the text input box, the dialog will say \"Hello, \". Let's modify the ``say_hello`` function again to handle this edge case."
msgstr ""
"让我们尝试做另一个改动。您可能已经注意到，如果您不在文本输入框中输入姓名，"
"对话框就会显示 \"Hello, \"。 让我们再次修改 ``say_hello`` "
"函数，以处理这种边缘情况。"

#: ../../tutorial/tutorial-4.rst:154 843bc85e521a462bb9275741ba3882db
msgid "At the top of the file, between the imports and the ``class HelloWorld`` definition, add a utility method to generate an appropriate greeting depending on the value of the name that has been provided::"
msgstr "在文件顶部，在导入和 ``class HelloWorld`` "
"定义之间，添加一个实用程序方法，以根据所提供的名称值生成适当的问候语::"

#: ../../tutorial/tutorial-4.rst:164 018c03fb94664999a0ee764c0692157e
msgid "Then, modify the ``say_hello`` callback to use this new utility method::"
msgstr "然后，修改 ``say_hello`` 回调，以使用这个新的实用程序方法::"

#: ../../tutorial/tutorial-4.rst:172 dbcdc9dd2cbf46d480edcfe55f014bb8
msgid "Run your app in development mode (with ``briefcase dev``) to confirm that the new logic works; then update, build and run the app with one command:"
msgstr "在开发模式下运行应用程序（使用 ``briefcase "
"dev``），以确认新逻辑是否有效；然后使用一条命令更新、构建和运行应用程序："

#: ../../tutorial/tutorial-4.rst:241 2c809295462844c2b097065cc2510397
msgid "The package command also accepts the ``-u`` argument, so if you make a change to your application code and want to repackage immediately, you can run ``briefcase package -u``."
msgstr ""
"package 命令也接受 ``-u`` "
"参数，因此如果你修改了应用程序代码并希望立即重新打包，可以运行 ``briefcase "
"package -u``。"

#: ../../tutorial/tutorial-4.rst:246 fec0cbf98da14ed1ab97c198ccc7b92b
msgid "Next steps"
msgstr "下一步"

#: ../../tutorial/tutorial-4.rst:248 c64b435ebd3f4860a4bd24abd9cd85ed
msgid "We now have our application packaged for distribution on desktop platforms, and we've been able to update the code in our application."
msgstr "现在，我们的应用程序已经打包，可以在桌面平台上发布，我们也可以更新应用程序中"
"的代码。"

#: ../../tutorial/tutorial-4.rst:251 d7dba3661d5a4784ba34be594415f937
msgid "But what about mobile? In :doc:`Tutorial 5 <tutorial-5/index>`, we'll convert our application into a mobile application, and deploy it onto a device simulator, and onto a phone."
msgstr ""
"但是在移动设备上呢？在 :doc:`教程 5 <tutorial-5/index>` "
"中，我们将把应用程序转换为移动应用程序，并将其部署到设备模拟器和手机上。"

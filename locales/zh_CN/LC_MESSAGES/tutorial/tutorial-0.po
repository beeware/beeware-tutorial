msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-15 23:26-0400\n"
"PO-Revision-Date: 2025-08-09 01:01+0000\n"
"Last-Translator: John <johnzhou721@gmail.com>\n"
"Language-Team: Chinese (Simplified Han script) <https://hosted.weblate.org/"
"projects/beeware/tutorial/tutorial-0/zh_Hans/>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 3.15.6\n"

#: docs/en/tutorial/tutorial-0.md:1
msgid "Tutorial 0 - Let's get set up! { id=\"tutorial-0\" }"
msgstr ""

#: docs/en/tutorial/tutorial-0.md:3
msgid ""
"Before we build our first BeeWare app, we have to make sure we've got all "
"the prerequisites for running BeeWare."
msgstr "在构建第一个使用 BeeWare 的应用程序之前，我们必须确保已具备运行 BeeWare "
"的所有先决条件。"

#: docs/en/tutorial/tutorial-0.md:6
msgid "Install Python"
msgstr "安装 Python"

#: docs/en/tutorial/tutorial-0.md:8
msgid "The first thing we'll need is a working Python interpreter."
msgstr "首先，我们需要一个正常工作的 Python 解释器。"

#: docs/en/tutorial/tutorial-0.md:10
#: docs/en/tutorial/tutorial-0.md:88
#: docs/en/tutorial/tutorial-0.md:158
msgid "/// tab | macOS"
msgstr ""

#: docs/en/tutorial/tutorial-0.md:12
msgid ""
"If you're on macOS, you can get an official Python installer from "
"[the Python website]{1}. You can use any version of Python from 3.10 or "
"newer (although you should avoid alphas, betas and release candidates). We "
"strongly recommend using Python 3.13 or newer."
msgstr ""
"如果您使用 macOS，您可以从 [Python 网站]{1}_\\ 获取官方安装程序。您可以使用 "
"Python 3.10 以上时任何版本，但避免使用 Alpha、Beta 和候选版本。"
"我们强烈建议使用 Python 3.13 或更新版本。"

#: docs/en/tutorial/tutorial-0.md:18
msgid ""
"You can also install Python through [homebrew]{1}, use [pyenv]{2} to manage "
"multiple Python installs, or use [Anaconda]{3} or [Miniconda]{4}. It doesn't "
"matter *how* you've installed Python - it only matters that you can run "
"`python3` from your terminal and get a working, supported Python interpreter."
msgstr ""
"安装 Python 也有很多其他不同的方法。您可以通过 [homebrew]{1} 安装 Python，"
"或使用 [pyenv]{2}来管理同一台机器上的多个 Python 安装，或使用 [Anaconda]{3} "
"或 [Miniconda]{4}。*怎么*\\ 安装 Python 并不重要，只要可以从终端运行 "
"`python3` 并获取到支持的、正常工作的 Python 解释器即可。"

#: docs/en/tutorial/tutorial-0.md:28
msgid ""
"Xcode and the Command-line Developer Tools provide a version of Python; "
"however that Python is version 3.9. Python 3.9 has reached end-of-life, and "
"is no longer supported by Python or BeeWare. You will *not* be able to the "
"Xcode-provided version of Python to run this tutorial."
msgstr ""

#: docs/en/tutorial/tutorial-0.md:33
msgid ""
"To check the version of Python that you have installed, run the following "
"command:"
msgstr ""

#: docs/en/tutorial/tutorial-0.md:40
msgid "If Python is installed, you'll see its version number."
msgstr ""

#: docs/en/tutorial/tutorial-0.md:42
#: docs/en/tutorial/tutorial-0.md:62
#: docs/en/tutorial/tutorial-0.md:80
#: docs/en/tutorial/tutorial-0.md:98
#: docs/en/tutorial/tutorial-0.md:131
#: docs/en/tutorial/tutorial-0.md:144
#: docs/en/tutorial/tutorial-0.md:167
#: docs/en/tutorial/tutorial-0.md:178
#: docs/en/tutorial/tutorial-0.md:211
#: docs/en/tutorial/tutorial-0.md:213
#: docs/en/tutorial/tutorial-0.md:231
msgid "///"
msgstr ""

#: docs/en/tutorial/tutorial-0.md:44
#: docs/en/tutorial/tutorial-0.md:100
#: docs/en/tutorial/tutorial-0.md:169
msgid "/// tab | Linux"
msgstr ""

#: docs/en/tutorial/tutorial-0.md:46
msgid ""
"If you're on Linux, you'll install Python using the system package manager "
"(`apt` on Debian/Ubuntu/Mint, `dnf` on Fedora, or `pacman` on Arch)."
msgstr ""
"如果您使用的是 Linux，您将使用系统软件包管理器（Debian/Ubuntu/Mint 上的 "
"`apt`，Fedora 上的 `dnf`，或 Arch 上的 `pacman`）安装 Python。"

#: docs/en/tutorial/tutorial-0.md:50
#, fuzzy
msgid ""
"You should ensure that the system Python is Python 3.10 or newer; if it "
"isn't (e.g., Ubuntu 20.04 ships with Python 3.8), you'll need to upgrade "
"your Linux distribution to something more recent."
msgstr ""
"您应该确保系统 Python 是 Python 3.9 或更高；如果不是（例如，Ubuntu 20.04 "
"附带 Python 3.8），您需要将您的 Linux 发行版升级到更新版本。"

#: docs/en/tutorial/tutorial-0.md:54
msgid "Support for Raspberry Pi is limited at this time."
msgstr "目前对 Raspberry Pi 的支持有限。"

#: docs/en/tutorial/tutorial-0.md:56
msgid ""
"**Important:** You *must* use the system Python provided by your operating "
"system. Alternative Python installations (pyenv, Anaconda, manually compiled "
"Python, etc.) will prevent you from successfully packaging your application "
"for distribution in later steps of this tutorial."
msgstr ""

#: docs/en/tutorial/tutorial-0.md:64
#: docs/en/tutorial/tutorial-0.md:133
#: docs/en/tutorial/tutorial-0.md:180
msgid "/// tab | Windows"
msgstr ""

#: docs/en/tutorial/tutorial-0.md:66
#, fuzzy
msgid ""
"If you're on Windows, you can get the official installer from "
"[the Python website]{1}. You can use any version of Python from 3.10 to 3.13 "
"(although you should avoid alphas, betas and release candidates). We "
"strongly recommend using Python 3.13."
msgstr ""
"如果您使用的是 Windows，您可以从 [Python 网站]{1}\\ 获取官方安装程序。"
"您可以使用 Python 3.9 到 3.13 的任何稳定版本。我们还建议避免使用 Alpha、Beta "
"和候选版本，除非你\\ *真的*\\ 知道自己在做什么。"

#: docs/en/tutorial/tutorial-0.md:71
#, fuzzy
msgid "Support for Windows on ARM64 is limited at this time."
msgstr "目前对 Raspberry Pi 的支持有限。"

#: docs/en/tutorial/tutorial-0.md:73
#, fuzzy
msgid ""
"You can also install Python from the Windows App Store, or use [Anaconda]{1} "
"or [Miniconda]{2}. It doesn't matter *how* you've installed Python - it only "
"matters that you can run `python3` from your command prompt and get a "
"working, supported Python interpreter."
msgstr ""
"安装 Python 也有很多其他不同的方法。您可以通过 [homebrew]{1} 安装 Python，"
"或使用 [pyenv]{2}来管理同一台机器上的多个 Python 安装，或使用 [Anaconda]{3} "
"或 [Miniconda]{4}。*怎么*\\ 安装 Python 并不重要，只要可以从终端运行 "
"`python3` 并获取到支持的、正常工作的 Python 解释器即可。"

#: docs/en/tutorial/tutorial-0.md:83
msgid "Install dependencies"
msgstr "安装依赖项"

#: docs/en/tutorial/tutorial-0.md:85
msgid ""
"Next, install the additional dependencies needed for your operating system:"
msgstr "接下来，安装您的操作系统所需的其他依赖项："

#: docs/en/tutorial/tutorial-0.md:90
msgid "Building BeeWare apps on macOS requires:"
msgstr "在 macOS 上构建 BeeWare 应用程序需要："

#: docs/en/tutorial/tutorial-0.md:92
msgid ""
"**Git**, a version control system. This is included with Xcode or the "
"command line developer tools, which you installed above. You may need to "
"open Xcode for the first time in order for Git to work in your terminal "
"session. If it still doesn't register that Git is installed, you may need to "
"restart your terminal session."
msgstr ""
"**Git**，一个版本控制系统。上面已安装的 Xcode "
"或其命令行开发工具已经包含了Git。您可能需要第一次打开 Xcode "
"以后才能再命令行会话中使Git正常工作。如果仍然无法识别 "
"Git，可能需要重启您的命令行会话。"

#: docs/en/tutorial/tutorial-0.md:102
msgid ""
"To support local development, you'll need to install some system packages. "
"The list of packages required varies depending on your distribution:"
msgstr "为支持本地开发，您将需要安装一些系统软件包。所需的软件包列表因发行版而异："

#: docs/en/tutorial/tutorial-0.md:106
msgid "**Ubuntu / Debian**"
msgstr "**Ubuntu 或 Debian**"

#: docs/en/tutorial/tutorial-0.md:113
msgid "**Fedora**"
msgstr "**Fedora**"

#: docs/en/tutorial/tutorial-0.md:119
msgid "**Arch / Manjaro**"
msgstr "**Arch 或 Manjaro**"

#: docs/en/tutorial/tutorial-0.md:125
msgid "**OpenSUSE Tumbleweed**"
msgstr "**OpenSUSE Tumbleweed**"

#: docs/en/tutorial/tutorial-0.md:135
msgid "Building BeeWare apps on Windows requires:"
msgstr "在 Windows 上构建 BeeWare 应用程序需要："

#: docs/en/tutorial/tutorial-0.md:137
msgid ""
"**Git**, a version control system. You can download Git from from "
"[git-scm.com]{1}."
msgstr "**Git**，一个版本控制系统。您可以从 [git-scm.com]{1} 下载 Git。"

#: docs/en/tutorial/tutorial-0.md:140
msgid ""
"After installing these tools, you should ensure you restart any terminal "
"sessions. Windows will only expose newly installed tools terminals started "
"*after* the install has completed."
msgstr "安装这些工具后，应确保重新启动任何终端会话。Windows "
"只在安装完成后开始的命令行，才会显示新安装的工具。"

#: docs/en/tutorial/tutorial-0.md:147
msgid "Set up a virtual environment"
msgstr "建立虚拟环境"

#: docs/en/tutorial/tutorial-0.md:149
msgid ""
"We're now going to create a virtual environment - a \"sandbox\" that we can "
"use to isolate our work on this tutorial from our main Python installation. "
"If we install packages into the virtual environment, our main Python "
"installation (and any other Python projects on our computer) won't be "
"affected. If we make a complete mess of our virtual environment, we'll be "
"able to simply delete it and start again, without affecting any other Python "
"project on our computer, and without the need to re-install Python."
msgstr ""
"我们现在要创建一个虚拟环境--一个 \"沙箱\"，用来将本教程的工作与我们的主 "
"Python 安装隔离开来。如果我们将软件包安装到虚拟环境中，我们的主 Python 安装（"
"以及计算机上的任何其他 Python "
"项目）将不会受到影响。如果我们把虚拟环境弄得一团糟，我们可以简单地删除它，然"
"后重新开始，不会影响计算机上的任何其他 Python 项目，也不需要重新安装 Python。"

#: docs/en/tutorial/tutorial-0.md:189
msgid ""
"If you're not using Python 3.12, replace the `-3.12` in these instructions "
"with the version number that you are using."
msgstr "如果您不在使用 Python 3.12，将指示中的 `-3.12` 替换为您在使用的版本号。"

#: docs/en/tutorial/tutorial-0.md:192
msgid "/// admonition | Errors running PowerShell Scripts"
msgstr ""

#: docs/en/tutorial/tutorial-0.md:194
msgid "If you're using PowerShell, and you receive the error:"
msgstr "如果使用 PowerShell 时收到以下错误信息:"

#: docs/en/tutorial/tutorial-0.md:200
msgid ""
"Your Windows account doesn't have permissions to run scripts. To fix this:"
msgstr "您的 Windows 账户没有运行脚本的权限。要解决这个问题："

#: docs/en/tutorial/tutorial-0.md:203
msgid "Run [Windows PowerShell as Administrator]{1}."
msgstr "[以管理员身份运行 PowerShell]{1}."

#: docs/en/tutorial/tutorial-0.md:204
msgid "Run `set-executionpolicy RemoteSigned`"
msgstr "运行 `set-executionpolicy RemoteSigned`"

#: docs/en/tutorial/tutorial-0.md:205
msgid "Select `Y` to change the execution policy."
msgstr "选择 `Y` 更改执行策略。"

#: docs/en/tutorial/tutorial-0.md:207
msgid ""
"Once you've done this you can rerun `beeware-venv\\Scripts\\activate.ps1` in "
"your original PowerShell session (or a new session in the same directory)."
msgstr ""
"完成后，您就可以在原来的 PowerShell 会话（或同一目录下的新会话）中重新运行 "
"`beeware-venv\\scripts\\activate.ps1`。"

#: docs/en/tutorial/tutorial-0.md:215
msgid ""
"If this worked, your prompt should now be changed - it should have a "
"`(beeware-venv)` prefix. This lets you know that you're currently in your "
"BeeWare virtual environment. Whenever you're working on this tutorial, you "
"should make sure your virtual environment is activated. If it isn't, re-run "
"the last command (the `activate` command) to re-activate your environment."
msgstr ""
"如果这样做成功了，您的提示符现在应该有所改变--它会带有 `(beeware-venv)` "
"前缀。这样，您就可以知道您当前正处于 BeeWare "
"虚拟环境中。无论何时运行本教程，都应确保虚拟环境已激活。如果没有激活，请重新"
"执行前一条命令（`activate`）以重新激活虚拟环境。"

#: docs/en/tutorial/tutorial-0.md:222
msgid "/// admonition | Alternative virtual environments"
msgstr ""

#: docs/en/tutorial/tutorial-0.md:224
msgid ""
"If you're using Anaconda or miniconda, you may be more familiar with using "
"conda environments. You might also have heard of `virtualenv`, a predecessor "
"to Python's built in `venv` module. As with Python installs -if you're on "
"macOS or Windows, it doesn't matter *how* you create your virtual "
"environment, as long as you have one. If you're on Linux, you should stick "
"to `venv` and the system Python."
msgstr ""

#: docs/en/tutorial/tutorial-0.md:233
msgid "Next steps"
msgstr "下一步"

#: docs/en/tutorial/tutorial-0.md:235
msgid ""
"We've now set up our environment. We're ready to "
"[create our first BeeWare application][tutorial-1]."
msgstr "现在我们已经设置好了环境。我们已经准备创建\\ [您的第一个应用程序][tutorial-1]"
"\\ 了。"

#~ msgid "Tutorial 0 - Let's get set up!"
#~ msgstr "教程 0 - 让我们开始吧！"

msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-14 23:09-0400\n"
"PO-Revision-Date: 2024-02-02 22:01+0000\n"
"Last-Translator: Charles Bousseau <charles.bousseau@gmail.com>\n"
"Language-Team: French <https://hosted.weblate.org/projects/beeware/tutorial/"
"tutorial-2/fr/>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 3.15.6\n"

#: docs/en/tutorial/tutorial-2.md:1
msgid "Tutorial 2 - Making it interesting { id=\"tutorial-2\" }"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:3
msgid ""
"In [Tutorial 1][tutorial-1], we generated a stub project that was able to "
"run, but we didn't write any code ourselves. Let's take a look at what was "
"generated for us."
msgstr ""
"Dans le [Tutoriel 1][tutorial-1], nous avons généré une ébauche de projet "
"capable de s'exécuter, mais nous n'avons pas écrit de code nous-mêmes. "
"Jetons un coup d'œil à ce qui a été généré pour nous."

#: docs/en/tutorial/tutorial-2.md:7
msgid "What was generated"
msgstr "Ce qui a été généré"

#: docs/en/tutorial/tutorial-2.md:9
msgid ""
"In the `src/helloworld` directory, you should see 3 files: `__init__.py`, "
"`__main__.py` and `app.py`."
msgstr ""
"Dans le répertoire `src/helloworld`, vous devriez voir 3 fichiers : "
"`__init__.py`, `__main__.py` et `app.py`."

#: docs/en/tutorial/tutorial-2.md:12
msgid ""
"`__init__.py` marks the `helloworld` directory as an importable Python "
"module. It is an empty file; the very fact it exists tells the Python "
"interpreter that the `helloworld` directory defines a module."
msgstr ""
"`__init__.py` marque le répertoire `helloworld` comme un module Python "
"importable. C'est un fichier vide ; le simple fait qu'il existe indique à "
"l'interpréteur Python que le répertoire `helloworld` définit un module."

#: docs/en/tutorial/tutorial-2.md:16
msgid ""
"`__main__.py` marks the `helloworld` module as a special kind of module -an "
"executable module. If you try to run the `helloworld` module using `python -"
"m helloworld`, the `__main__.py` file is where Python will start executing. "
"The contents of `__main__.py` is relatively simple:"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:28
msgid "This file does two things:"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:30
msgid "It imports the `main` method from the `helloworld` app."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:31
#, fuzzy
msgid ""
"Then, it starts the application’s main loop. The main loop is the way a GUI "
"application listens for user input (like mouse clicks and keyboard presses)."
msgstr ""
"Il importe la méthode `main` de l'application `helloworld`, et s'il est "
"exécuté en tant que point d'entrée, il appelle la méthode main(), et démarre "
"la boucle principale de l'application. La boucle principale est la façon "
"dont une application GUI écoute les entrées de l'utilisateur (comme les "
"clics de souris et les pressions sur le clavier)."

#: docs/en/tutorial/tutorial-2.md:35
msgid ""
"The more interesting file is `app.py` - this contains the logic that creates "
"our application window:"
msgstr ""
"Le fichier le plus intéressant est `app.py` - il contient la logique "
"responsable de la création de notre fenêtre d'application :"

#: docs/en/tutorial/tutorial-2.md:54
msgid "Let's go through this line by line:"
msgstr "Examinons-le ligne par ligne :"

#: docs/en/tutorial/tutorial-2.md:61
#, fuzzy
msgid ""
"First, we import the `toga` widget toolkit, as well as some style-related "
"utility constants. Our code doesn't use these yet - but we'll make use of "
"them shortly."
msgstr ""
"Tout d'abord, nous importons la boîte à outils `toga`, ainsi que quelques "
"classes et constantes utilitaires liées au style. Notre code ne les utilise "
"pas encore, mais nous les utiliserons bientôt."

#: docs/en/tutorial/tutorial-2.md:65
msgid "Then, we define a class:"
msgstr "Ensuite, nous définissons une classe :"

#: docs/en/tutorial/tutorial-2.md:71
msgid ""
"Each Toga application has a single `toga.App` instance, representing the "
"running entity that is the application. The app may end up managing multiple "
"windows; but for simple applications, there will be a single main window."
msgstr ""
"Chaque application Toga possède une seule instance `toga.App`, représentant "
"l'entité en cours d'exécution, c'est-à-dire notre application. L'application "
"peut gérer plusieurs fenêtres, mais pour les applications simples, il n'y "
"aura qu'une seule fenêtre principale."

#: docs/en/tutorial/tutorial-2.md:76
msgid "Next, we define a `startup()` method:"
msgstr "Ensuite, nous définissons une méthode de démarrage `startup()` :"

#: docs/en/tutorial/tutorial-2.md:83
msgid ""
"The first thing the startup method does is to define a main box. Toga's "
"layout scheme behaves similar to HTML. You build an application by "
"constructing a collection of boxes, each of which contains other boxes, or "
"actual widgets. You then apply styles to these boxes to define how they will "
"consume the available window space."
msgstr ""
"La première chose que fait la méthode de démarrage est de définir une boîte "
"principale. Le schéma de présentation de Toga est similaire à celui du HTML. "
"Vous construisez une application en construisant une collection de boîtes, "
"chacune d'entre elles contenant d'autres boîtes, ou de véritables widgets. "
"Vous appliquez ensuite des styles à ces boîtes pour définir la manière dont "
"elles utiliseront l'espace disponible dans la fenêtre."

#: docs/en/tutorial/tutorial-2.md:89
msgid ""
"In this application, we define a single box, but we don't put anything into "
"it."
msgstr ""
"Dans cette application, nous définissons une seule boîte, mais nous n'y "
"mettons rien."

#: docs/en/tutorial/tutorial-2.md:92
msgid "Next, we define a window into which we can put this empty box:"
msgstr ""
"Ensuite, nous définissons une fenêtre dans laquelle nous pouvons placer "
"cette boîte vide :"

#: docs/en/tutorial/tutorial-2.md:98
#, fuzzy
msgid ""
"This creates an instance of a `toga.MainWindow`, which will have a title "
"matching the application's name. A Main Window is a special kind of window "
"in Toga - it's a window that is closely bound to the life cycle of the app. "
"When the Main Window is closed, the application exits. The Main Window is "
"also the window that has the application's menu (if you're on a platform "
"like Windows where menu bars are part of the window)."
msgstr ""
"Cela crée une instance de `toga.MainWindow`, qui aura un titre correspondant "
"au nom de l'application. Une fenêtre principale est un type spécial de "
"fenêtre dans Toga - c'est une fenêtre qui est étroitement liée au cycle de "
"vie de l'application. Lorsque la fenêtre principale est fermée, "
"l'application se termine. La fenêtre principale est également la fenêtre qui "
"contient le menu de l'application (si vous êtes sur une plateforme comme "
"Windows où les barres de menu font partie des fenêtres)."

#: docs/en/tutorial/tutorial-2.md:106
msgid "/// admonition | Where is my window?"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:108
msgid ""
"If you have made an error in your code, the main window of the app may not "
"display. If this happens, you can type **Ctrl+C** in the terminal where you "
"started the app. This will stop the app. You can then fix the error and "
"restart the app."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:113
#: docs/en/tutorial/tutorial-2.md:148
#: docs/en/tutorial/tutorial-2.md:211
#: docs/en/tutorial/tutorial-2.md:302
#: docs/en/tutorial/tutorial-2.md:313
#: docs/en/tutorial/tutorial-2.md:324
#: docs/en/tutorial/tutorial-2.md:340
#: docs/en/tutorial/tutorial-2.md:348
#: docs/en/tutorial/tutorial-2.md:356
msgid "///"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:115
msgid ""
"We then add our empty box as the content of the main window, and instruct "
"the application to show our window:"
msgstr ""
"Nous ajoutons ensuite notre boîte vide au contenu de la fenêtre principale "
"et demandons à l'application d'afficher notre fenêtre :"

#: docs/en/tutorial/tutorial-2.md:123
#, fuzzy
msgid ""
"Last of all, we define a `main()` function. This is what creates the "
"instance of our application:"
msgstr ""
"Enfin, nous définissons une méthode `main()`. C'est elle qui crée l'instance "
"de notre application :"

#: docs/en/tutorial/tutorial-2.md:131
msgid ""
"This `main()` method is the one that is imported and invoked by `__main__.py`"
". It creates and returns an instance of our `HelloWorld` application."
msgstr ""
"Cette méthode `main()` est celle qui est importée et invoquée par `main__.py`"
". Elle crée et retourne une instance de notre application `HelloWorld`."

#: docs/en/tutorial/tutorial-2.md:135
msgid ""
"That's the simplest possible Toga application. Let's put some of our own "
"content into the application, and make the app do something interesting."
msgstr ""
"C'est l'application Toga la plus simple possible. Bous allons ajouter notre "
"propre contenu à l'application, et faire en sorte qu'elle fasse quelque "
"chose de plus intéressant."

#: docs/en/tutorial/tutorial-2.md:138
msgid "Adding some content of our own"
msgstr "Ajouter notre propre contenu"

#: docs/en/tutorial/tutorial-2.md:140
msgid "Let's do something more interesting with our `HelloWorld` app."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:142
#: docs/en/tutorial/tutorial-2.md:201
msgid "/// note | Note"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:144
#, fuzzy
msgid ""
"When you make these changes, make sure you keep the imports at the top of "
"the file, and the `main()` at the bottom of the file. You only need to "
"update the `HelloWorld` class."
msgstr ""
"Ne supprimez pas les imports en haut du fichier, ni le `main()` en bas. Vous "
"n'avez besoin de mettre à jour que la classe `HelloWorld`."

#: docs/en/tutorial/tutorial-2.md:150
msgid ""
"Modify your `HelloWorld` class inside `src/helloworld/app.py` so that it "
"looks like this:"
msgstr ""
"Modifiez votre classe `HelloWorld` dans `src/helloworld/app.py` pour qu'elle "
"ressemble à ceci :"

#: docs/en/tutorial/tutorial-2.md:185
msgid "Let's look in detail at what has changed."
msgstr "Examinons en détail ce qui a changé."

#: docs/en/tutorial/tutorial-2.md:187
msgid "We're still creating a main box; however, we are now applying a style:"
msgstr ""
"Nous sommes toujours en train de créer une boîte principale, mais nous "
"appliquons maintenant un style :"

#: docs/en/tutorial/tutorial-2.md:193
#, fuzzy
msgid ""
"Toga's built-in layout system is called \"Pack\". It behaves a lot like CSS. "
"You define objects in a hierarchy - in HTML, the objects are `<div>`, "
"`<span>`, and other DOM elements; in Toga, they're widgets and boxes. You "
"can then assign styles to the individual elements. In this case, we're "
"indicating that this is a `COLUMN` box - that is, it is a box that will "
"consume all the available width, and will expand its height as content is "
"added, but it will try to be as short as possible."
msgstr ""
"Le système de mise en page intégré à Toga s'appelle \"Pack\". Il se comporte "
"en grande partie comme CSS. Vous définissez des objets dans une hiérarchie - "
"en HTML, les objets sont `<div>`, `<span>`, et d'autres éléments DOM ; dans "
"Toga, ce sont des widgets et des boîtes. Vous pouvez ensuite attribuer des "
"styles aux différents éléments. Dans ce cas, nous indiquons qu'il s'agit "
"d'une boîte `COLUMN` - c'est-à-dire qu'il s'agit d'une boîte qui utilisera "
"toute la largeur disponible, et qui augmentera sa hauteur au fur et à mesure "
"que du contenu sera ajouté, mais qui essaiera d'être aussi courte que "
"possible."

#: docs/en/tutorial/tutorial-2.md:203
msgid ""
"For more advanced uses, Toga also supports a separate style object, which is "
"used like this:"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:213
msgid "Next, we define a couple of widgets:"
msgstr "Ensuite, nous définissons quelques widgets :"

#: docs/en/tutorial/tutorial-2.md:223
#, fuzzy
msgid ""
"Here, we define a Label and a TextInput. Both widgets have styles associated "
"with them; the label will have 5px of margin on its left and right, and no "
"margin on the top and bottom. The TextInput is marked as being flexible - "
"that is, it will absorb all available space in its layout axis."
msgstr ""
"Ici, nous définissons un Label (widget de texte) et un TextInput (widget de "
"saisie de texte). Les deux widgets sont associés à des styles ; le Label "
"aura un espace de 5 px à gauche et à droite, et aucun espace en haut et en "
"bas. Le TextInput est marqué comme étant flexible, c'est-à-dire qu'il "
"absorbera tout l'espace disponible dans son axe de mise en page."

#: docs/en/tutorial/tutorial-2.md:229
msgid ""
"The TextInput is assigned as an instance variable of the class. This gives "
"us easy access to the widget instance - something that we'll use in a moment."
msgstr ""
"Le TextInput est assigné en tant que variable d'instance d classe. Cela nous "
"permet d'accéder facilement à l'instance du widget, ce que nous utiliserons "
"dans un instant."

#: docs/en/tutorial/tutorial-2.md:233
msgid "Next, we define a box to hold these two widgets:"
msgstr "Ensuite, nous définissons une boîte pour contenir ces deux widgets :"

#: docs/en/tutorial/tutorial-2.md:241
#, fuzzy
msgid ""
"The `name_box` is a box just like the main box; however, this time, it's a "
"`ROW` box. That means content will be added horizontally, and it will try to "
"make its width as narrow as possible. The box also has some margin - 5px on "
"all sides."
msgstr ""
"La `name_box` est une boîte comme la boîte principale, mais cette fois, "
"c'est une boîte `ROW` (rangée). Cela signifie que le contenu sera ajouté "
"horizontalement, et qu'il essaiera d'être le moins large possible. La boîte "
"a également un peu de padding (espace) - 5px sur tous les côtés."

#: docs/en/tutorial/tutorial-2.md:246
msgid "Now we define a button:"
msgstr "Nous définissons maintenant un bouton :"

#: docs/en/tutorial/tutorial-2.md:256
msgid ""
"The button also has 5px of margin on all sides. We also define a *handler* -"
"a method to invoke when the button is pressed."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:259
msgid "Then, we add the name box and the button to the main box:"
msgstr ""
"Ensuite, nous ajoutons la boîte de nom et le bouton à la boîte principale :"

#: docs/en/tutorial/tutorial-2.md:266
#, fuzzy
msgid ""
"This completes our layout; the rest of the startup method is as it was "
"previously - defining a `MainWindow`, and assigning the main box as the "
"window's content:"
msgstr ""
"Le reste de la méthode de démarrage est identique à la précédente : "
"définition d'une fenêtre principale et attribution de la boîte principale en "
"tant que contenu de la fenêtre :"

#: docs/en/tutorial/tutorial-2.md:276
#, fuzzy
msgid ""
"The last thing we need to do is define the handler for the button. A handler "
"can be any method, generator, or asynchronous coroutine; it accepts the "
"widget that generated the event as an argument, and will be invoked whenever "
"the button is pressed:"
msgstr ""
"Notre dernière action est de définir le gestionnaire du bouton. Un "
"gestionnaire peut être n'importe quelle méthode, générateur ou co-routine "
"asynchrone ; il accepte le widget qui a généré l'événement comme argument, "
"et sera invoqué chaque fois que le bouton est pressé :"

#: docs/en/tutorial/tutorial-2.md:286
msgid ""
"The body of the method is a simple print statement - however, it will "
"interrogate the current value of the name input, and use that content as the "
"text that is printed."
msgstr ""
"Le corps de la méthode est une simple instruction d'affichage (print). "
"Cependant, elle interroge la valeur actuelle de l'entrée name et utilise ce "
"contenu comme texte à imprimer."

#: docs/en/tutorial/tutorial-2.md:290
msgid ""
"Now that we've made these changes we can see what they look like by starting "
"the application again. As before, we'll use developer mode:"
msgstr ""
"Maintenant que nous avons effectué ces changements, nous pouvons voir à quoi "
"ils ressemblent en relançant l'application. Comme précédemment, nous "
"utiliserons le mode développeur :"

#: docs/en/tutorial/tutorial-2.md:293
#: docs/en/tutorial/tutorial-2.md:334
msgid "/// tab | macOS"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:304
#: docs/en/tutorial/tutorial-2.md:342
msgid "/// tab | Linux"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:315
#: docs/en/tutorial/tutorial-2.md:350
msgid "/// tab | Windows"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:326
#, fuzzy
msgid ""
"You'll notice that this time, it *doesn't* install dependencies. Briefcase "
"can detect that the application has been run before, and to save time, will "
"only run the application. If you add new dependencies to your app, you need "
"to make sure that they're installed by passing in a `-r` option when you run "
"`briefcase dev`."
msgstr ""
"Vous remarquerez que cette fois-ci, briefcase n'installe pas de dépendances. "
"Briefcase peut détecter que l'application a déjà été exécutée auparavant, et "
"pour gagner du temps, il n'exécutera que l'application. Si vous ajoutez de "
"nouvelles dépendances à votre application, vous pouvez vous assurer qu'elles "
"soient installées en passant une option `-r` lorsque vous lancez `briefcase "
"dev`."

#: docs/en/tutorial/tutorial-2.md:332
msgid "This should open a GUI window:"
msgstr "Cela devrait ouvrir une fenêtre GUI :"

#: docs/en/tutorial/tutorial-2.md:358
msgid ""
"If you enter a name in the text box, and press the GUI button, you should "
"see output appear in the console where you started the application."
msgstr ""
"Si vous saisissez un nom dans la zone de texte et que vous appuyez sur le "
"bouton GUI, vous devriez voir apparaître une sortie dans la console où vous "
"avez démarré l'application."

#: docs/en/tutorial/tutorial-2.md:362
msgid ""
"Before continuing, close the app. As with Tutorial 1, you can do this by "
"pressing the close button on the application window, by selecting Quit/Exit "
"from the application's menu, or by typing **Ctrl+C** in the terminal where "
"you ran `briefcase dev`."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:367
msgid "Next steps"
msgstr "Étapes suivantes"

#: docs/en/tutorial/tutorial-2.md:369
msgid ""
"We've now got an application that does something a little more interesting. "
"But it only runs on our own computer. Let's package this application for "
"distribution. In [Tutorial 3][tutorial-3], we'll wrap our application up as "
"a standalone installer that we could send to a friend, a customer, or upload "
"to an App Store."
msgstr ""
"Nous avons maintenant une application qui fait quelque chose d'un peu plus "
"intéressant. Mais elle ne fonctionne que sur notre propre ordinateur. Allons "
"empaqueter cette application pour la distribuer. Dans [Tutoriel 3]"
"[tutorial-3], nous allons empaqueter notre application sous la forme d'un "
"programme d'installation autonome que nous pourrons envoyer à un ami, un "
"client, ou télécharger sur un App Store."

#~ msgid "Tutorial 2 - Making it interesting"
#~ msgstr "Tutoriel 2 - Rendre les choses intéressantes"

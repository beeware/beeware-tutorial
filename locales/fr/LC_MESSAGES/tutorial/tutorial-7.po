msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-21 16:18-0400\n"
"PO-Revision-Date: 2025-06-21 02:01+0000\n"
"Last-Translator: John <johnzhou721@gmail.com>\n"
"Language-Team: French <https://hosted.weblate.org/projects/beeware/tutorial/"
"tutorial-7/fr/>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 3.15.6\n"

#: docs/en/tutorial/tutorial-7.md:1
msgid "Tutorial 7 - Get this (third-)party started"
msgstr "Tutoriel n° 7 - Démarrer cette (troisième-)partie"

#: docs/en/tutorial/tutorial-7.md:3
#, fuzzy
msgid ""
"So far, the app we've built has only used our own code, plus the code "
"provided by BeeWare. However, in a real-world app, you'll likely want to use "
"a third-party library, downloaded from the Python Package Index (PyPI)."
msgstr ""
"Jusqu'à présent, l'application que nous avons construite n'a utilisé que "
"notre propre code, ainsi que le code fourni par BeeWare. Cependant, dans une "
"application réelle, vous voudrez probablement utiliser une bibliothèque "
"tierce, téléchargée à partir du Python Package Index (PyPI)."

#: docs/en/tutorial/tutorial-7.md:8
#, fuzzy
msgid "Let's modify our app to include a third-party library."
msgstr "Modifions notre application pour y inclure une bibliothèque tierce."

#: docs/en/tutorial/tutorial-7.md:10
msgid "Adding a package"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:12
msgid ""
"Let's modify our application to say a little bit more than just "
"\"Hi, there!\"."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:15
msgid ""
"To generate some more interesting text for the dialog, we're going to use a "
"library called [Faker]{1}. Faker is a Python package that generates fake "
"content, including names and text blocks. The names and words in the text "
"block are generated from an arbitrary list of words provided by Faker. We're "
"going to use Faker to construct a fake message, as if someone is responding "
"to the user."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:23
#, fuzzy
msgid ""
"We start by adding `faker` to our app. Add an import to the top of the "
"`app.py` to import `faker`:"
msgstr ""
"Ajoutons un appel API `httpx` à notre application. Ajoutez un import au "
"début de `app.py` pour importer `httpx`: :"

#: docs/en/tutorial/tutorial-7.md:30
#, fuzzy
msgid "Then modify the `say_hello()` callback so it looks like this:"
msgstr ""
"Ensuite, modifiez le callback `say_hello()` pour qu'il ressemble à ceci: :"

#: docs/en/tutorial/tutorial-7.md:43
#, fuzzy
msgid ""
"Let's run our updated app in Briefcase developer mode to check that our "
"change has worked."
msgstr ""
"Exécutons notre application mise à jour dans le mode développeur de "
"Briefcase pour vérifier que notre changement a fonctionné."

#: docs/en/tutorial/tutorial-7.md:46
#: docs/en/tutorial/tutorial-7.md:130
#: docs/en/tutorial/tutorial-7.md:207
#: docs/en/tutorial/tutorial-7.md:555
msgid "/// tab | macOS"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:66
#: docs/en/tutorial/tutorial-7.md:88
#: docs/en/tutorial/tutorial-7.md:110
#: docs/en/tutorial/tutorial-7.md:117
#: docs/en/tutorial/tutorial-7.md:124
#: docs/en/tutorial/tutorial-7.md:144
#: docs/en/tutorial/tutorial-7.md:146
#: docs/en/tutorial/tutorial-7.md:162
#: docs/en/tutorial/tutorial-7.md:164
#: docs/en/tutorial/tutorial-7.md:180
#: docs/en/tutorial/tutorial-7.md:182
#: docs/en/tutorial/tutorial-7.md:189
#: docs/en/tutorial/tutorial-7.md:196
#: docs/en/tutorial/tutorial-7.md:245
#: docs/en/tutorial/tutorial-7.md:247
#: docs/en/tutorial/tutorial-7.md:302
#: docs/en/tutorial/tutorial-7.md:342
#: docs/en/tutorial/tutorial-7.md:344
#: docs/en/tutorial/tutorial-7.md:419
#: docs/en/tutorial/tutorial-7.md:467
#: docs/en/tutorial/tutorial-7.md:576
#: docs/en/tutorial/tutorial-7.md:605
#: docs/en/tutorial/tutorial-7.md:628
#: docs/en/tutorial/tutorial-7.md:647
#: docs/en/tutorial/tutorial-7.md:671
#: docs/en/tutorial/tutorial-7.md:682
msgid "///"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:68
#: docs/en/tutorial/tutorial-7.md:148
#: docs/en/tutorial/tutorial-7.md:249
#: docs/en/tutorial/tutorial-7.md:578
msgid "/// tab | Linux"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:90
#: docs/en/tutorial/tutorial-7.md:166
#: docs/en/tutorial/tutorial-7.md:304
#: docs/en/tutorial/tutorial-7.md:607
msgid "/// tab | Windows"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:112
#: docs/en/tutorial/tutorial-7.md:184
#: docs/en/tutorial/tutorial-7.md:346
#: docs/en/tutorial/tutorial-7.md:630
msgid "/// tab | Android"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:114
#: docs/en/tutorial/tutorial-7.md:186
msgid ""
"You can't run an Android app in developer mode - use the instructions for "
"your chosen desktop platform."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:119
#: docs/en/tutorial/tutorial-7.md:191
#: docs/en/tutorial/tutorial-7.md:421
#: docs/en/tutorial/tutorial-7.md:649
msgid "/// tab | iOS"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:121
#: docs/en/tutorial/tutorial-7.md:193
msgid ""
"You can't run an iOS app in developer mode - use the instructions for your "
"chosen desktop platform."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:126
#, fuzzy
msgid ""
"What happened? We've added `faker` to our *code*, but we haven't added it to "
"our development virtual environment. We can fix this by installing `faker` "
"with `pip`, and then re-running `briefcase dev`:"
msgstr ""
"Qu'est-ce qui s'est passé ? Nous avons ajouté `httpx` à notre *code*, mais "
"nous ne l'avons pas ajouté à notre environnement virtuel de développement. "
"Nous pouvons corriger cela en installant `httpx` avec `pip`, puis en "
"relançant `briefcase dev` :"

#: docs/en/tutorial/tutorial-7.md:137
#: docs/en/tutorial/tutorial-7.md:155
#: docs/en/tutorial/tutorial-7.md:173
#, fuzzy
msgid ""
"When you enter a name and press the button, you should see a dialog that "
"looks something like:"
msgstr ""
"Lorsque vous entrez un nom et que vous appuyez sur le bouton, une boîte de "
"dialogue doit s'afficher :"

#: docs/en/tutorial/tutorial-7.md:140
msgid "![Hello World Tutorial 7 dialog, on macOS]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:142
#: docs/en/tutorial/tutorial-7.md:160
#: docs/en/tutorial/tutorial-7.md:178
#: docs/en/tutorial/tutorial-7.md:243
#: docs/en/tutorial/tutorial-7.md:340
msgid "/// caption"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:158
msgid "![Hello World Tutorial 7 dialog, on Linux]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:176
msgid "![Hello World Tutorial 7 dialog, on Windows]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:198
#, fuzzy
msgid ""
"We've now got a working app, using a third party library, running in "
"development mode!"
msgstr ""
"Nous avons maintenant une application fonctionnelle, utilisant une "
"bibliothèque tierce, fonctionnant en mode développement !"

#: docs/en/tutorial/tutorial-7.md:201
#, fuzzy
msgid "Running the updated app"
msgstr "Exécution de l'application mise à jour"

#: docs/en/tutorial/tutorial-7.md:203
#, fuzzy
msgid ""
"Let's get this updated application code packaged as a standalone app. Since "
"we've made code changes, we need to follow the same steps as in [Tutorial 4]"
"{1}:"
msgstr ""
"Nous allons faire en sorte que ce code d'application mis à jour soit "
"empaqueté en tant qu'application autonome. Puisque nous avons modifié le "
"code, nous devons suivre les mêmes étapes que dans [Tutoriel 4]{1} :"

#: docs/en/tutorial/tutorial-7.md:209
#: docs/en/tutorial/tutorial-7.md:251
#: docs/en/tutorial/tutorial-7.md:306
#: docs/en/tutorial/tutorial-7.md:348
#: docs/en/tutorial/tutorial-7.md:423
#, fuzzy
msgid "Update the code in the packaged app:"
msgstr "Mettre à jour le code dans l'application packagée :"

#: docs/en/tutorial/tutorial-7.md:220
#: docs/en/tutorial/tutorial-7.md:262
#: docs/en/tutorial/tutorial-7.md:317
#: docs/en/tutorial/tutorial-7.md:359
#: docs/en/tutorial/tutorial-7.md:434
#, fuzzy
msgid "Rebuild the app:"
msgstr "Reconstruire l'application :"

#: docs/en/tutorial/tutorial-7.md:229
#: docs/en/tutorial/tutorial-7.md:276
#: docs/en/tutorial/tutorial-7.md:326
#, fuzzy
msgid "And finally, run the app:"
msgstr "Enfin, lancez l'application :"

#: docs/en/tutorial/tutorial-7.md:238
#: docs/en/tutorial/tutorial-7.md:335
#, fuzzy
msgid ""
"However, when the app runs, you'll see an error in the console, plus a crash "
"dialog:"
msgstr ""
"Cependant, lorsque l'application s'exécute, vous verrez une erreur dans la "
"console, ainsi qu'une boîte de dialogue de plantage :"

#: docs/en/tutorial/tutorial-7.md:241
msgid "![Hello World Tutorial 7 app crash, on macOS]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:285
#: docs/en/tutorial/tutorial-7.md:378
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console:"
msgstr ""
"Cependant, lorsque l'application s'exécute, une erreur apparaît dans la "
"console :"

#: docs/en/tutorial/tutorial-7.md:338
msgid "![Hello World Tutorial 7 app crash, on Windows]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:369
#: docs/en/tutorial/tutorial-7.md:444
msgid "And finally, run the app (selecting a simulator when prompted):"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:454
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console"
msgstr ""
"Cependant, lorsque l'application s'exécute, une erreur apparaît dans la "
"console :"

#: docs/en/tutorial/tutorial-7.md:469
msgid ""
"Once again, the app has failed to start because `faker` has not been "
"installed -but why? Haven't we already installed `faker`?"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:472
#, fuzzy
msgid ""
"We have - but only in the development environment. Your development "
"environment is entirely local to your machine - and is only enabled when you "
"explicitly activate it. Although Briefcase has a development mode, the main "
"reason you'd use Briefcase is to package up your code so you can give it to "
"someone else."
msgstr ""
"Nous l'avons fait, mais uniquement dans l'environnement de développement. "
"Votre environnement de développement est entièrement local à votre machine - "
"et n'est activé que lorsque vous l'activez explicitement. Bien que Briefcase "
"dispose d'un mode de développement, la principale raison pour laquelle vous "
"utilisez Briefcase est d'empaqueter votre code afin de le donner à quelqu'un "
"d'autre."

#: docs/en/tutorial/tutorial-7.md:478
#, fuzzy
msgid ""
"The only way to guarantee that someone else will have a Python environment "
"that contains everything it needs is to build a completely isolated Python "
"environment. This means there's a completely isolated Python install, and a "
"completely isolated set of dependencies. This is what Briefcase is building "
"when you run `briefcase build` - an isolated Python environment. This also "
"explains why `faker` isn't installed - it has been installed in your "
"*development* environment, but not in the packaged app."
msgstr ""
"La seule façon de garantir que quelqu'un d'autre disposera d'un "
"environnement Python contenant tout ce dont il a besoin est de construire un "
"environnement Python complètement isolé. Cela signifie qu'il y a une "
"installation Python complètement isolée, et un ensemble de dépendances "
"complètement isolé. C'est ce que Briefcase construit quand vous lancez `"
"briefcase build` - un environnement Python isolé. Cela explique aussi "
"pourquoi `httpx` n'est pas installé - il a été installé dans votre "
"environnement de *développement*, mais pas dans l'application packagée."

#: docs/en/tutorial/tutorial-7.md:487
#, fuzzy
msgid "So - we need to tell Briefcase that our app has an external dependency."
msgstr ""
"Nous devons donc indiquer à Briefcase que notre application a une dépendance "
"externe."

#: docs/en/tutorial/tutorial-7.md:489
#, fuzzy
msgid "Updating dependencies"
msgstr "Mise à jour des dépendances"

#: docs/en/tutorial/tutorial-7.md:491
#, fuzzy
msgid ""
"In the root directory of your app, there is a file named `pyproject.toml`. "
"This file contains all the app configuration details that you provided when "
"you originally ran `briefcase new`."
msgstr ""
"Dans le répertoire racine de votre application, il y a un fichier nommé "
"`pyproject.toml`. Ce fichier contient tous les détails de configuration de "
"l'application que vous avez fournis lorsque vous avez lancé `briefcase new`."

#: docs/en/tutorial/tutorial-7.md:495
#, fuzzy
msgid ""
"`pyproject.toml` is broken up into sections; one of the sections describes "
"the settings for your app:"
msgstr ""
"`pyproject.toml` est divisé en sections ; l'une d'entre elles décrit les "
"paramètres de votre application: :"

#: docs/en/tutorial/tutorial-7.md:508
#, fuzzy
msgid ""
"The `requires` option describes the dependencies of our application. It is a "
"list of strings, specifying libraries (and, optionally, versions) of "
"libraries that you want to be included with your app."
msgstr ""
"L'option `requires` décrit les dépendances de notre application. C'est une "
"liste de chaînes de caractères, spécifiant les bibliothèques (et, "
"optionnellement, les versions) des bibliothèques que vous voulez inclure "
"dans votre application."

#: docs/en/tutorial/tutorial-7.md:512
#, fuzzy
msgid "Modify the `requires` setting so that it reads:"
msgstr "Modifiez le paramètre `requires` de façon à ce qu'il se lise: :"

#: docs/en/tutorial/tutorial-7.md:520
#, fuzzy
msgid ""
"By adding this setting, we're telling Briefcase \"when you build my app, run "
"`pip install faker` into the application bundle\". Anything that would be "
"legal input to `pip install` can be used here - so, you could specify:"
msgstr ""
"En ajoutant ce paramètre, nous disons à Briefcase \"lorsque vous compilez "
"mon application, lancez `pip install httpx` dans le bundle de l'application\""
". Tout ce qui serait une entrée légale pour `pip install` peut être utilisé "
"ici - ainsi, vous pourriez spécifier :"

#: docs/en/tutorial/tutorial-7.md:525
#, fuzzy
msgid "A specific library version (e.g., `\"faker==37.3.0\"`);"
msgstr ""
"Une version spécifique de la bibliothèque (par exemple, `\"httpx==0.19.0\"`) "
";"

#: docs/en/tutorial/tutorial-7.md:526
#, fuzzy
msgid "A range of library versions (e.g., `\"faker>=37\"`);"
msgstr ""
"Une gamme de versions de la bibliothèque (par exemple, `\"httpx>=0.19\"`) ;"

#: docs/en/tutorial/tutorial-7.md:527
#, fuzzy
msgid ""
"A path to a git repository (e.g., `\"git+https://github.com/joke2k/faker/\""
"`); or"
msgstr ""
"Un chemin vers un dépôt git (par exemple, `"
"\"git+https://github.com/encode/httpx\"`) ; ou"

#: docs/en/tutorial/tutorial-7.md:529
#, fuzzy
msgid ""
"A local file path (However - be warned: if you give your code to someone "
"else, this path probably won't exist on their machine!)"
msgstr ""
"Un chemin d'accès à un fichier local (Cependant, attention : si vous donnez "
"votre code à quelqu'un d'autre, ce chemin d'accès n'existera probablement "
"pas sur sa machine !)"

#: docs/en/tutorial/tutorial-7.md:532
#, fuzzy
msgid ""
"Further down in `pyproject.toml`, you'll notice other sections that are "
"operating system dependent, like `[tool.briefcase.app.helloworld.macOS]` and "
"`[tool.briefcase.app.helloworld.windows]`. These sections *also* have a "
"`requires` setting. These settings allow you to define additional platform-"
"specific dependencies - so, for example, if you need a platform-specific "
"library to handle some aspect of your app, you can specify that library in "
"the platform-specific `requires` section, and that setting will only be used "
"for that platform. You will notice that the `toga` libraries are all "
"specified in the platform-specific `requires` section - this is because the "
"libraries needed to display a user interface are platform specific."
msgstr ""
"Plus loin dans `pyproject.toml`, vous remarquerez d'autres sections qui "
"dépendent du système d'exploitation, comme `"
"[tool.briefcase.app.helloworld.macOS]` et `"
"[tool.briefcase.app.helloworld.windows]`. Ces sections ont *également* un "
"paramètre `requires`. Ces paramètres vous permettent de définir des "
"dépendances supplémentaires spécifiques à une plate-forme - ainsi, par "
"exemple, si vous avez besoin d'une bibliothèque spécifique à une plate-forme "
"pour gérer un aspect de votre application, vous pouvez spécifier cette "
"bibliothèque dans la section `requires'' spécifique à la plate-forme, et ce "
"paramètre ne sera utilisé que pour cette plate-forme. Vous remarquerez que "
"les bibliothèques `toga` sont toutes spécifiées dans la section `requires` "
"spécifique à la plate-forme - c'est parce que les bibliothèques nécessaires "
"pour afficher une interface utilisateur sont spécifiques à la plate-forme."

#: docs/en/tutorial/tutorial-7.md:544
#, fuzzy
msgid ""
"In our case, we want `faker` to be installed on all platforms, so we use the "
"app-level `requires` setting. The app-level dependencies will always be "
"installed; the platform-specific dependencies are installed *in addition* to "
"the app-level ones."
msgstr ""
"Dans notre cas, nous voulons que `httpx` soit installé sur toutes les "
"plateformes, donc nous utilisons le paramètre `requires` au niveau de "
"l'application. Les dépendances au niveau de l'application seront toujours "
"installées ; les dépendances spécifiques à la plate-forme sont installées *"
"en plus* de celles au niveau de l'application."

#: docs/en/tutorial/tutorial-7.md:549
#, fuzzy
msgid ""
"Now that we've told Briefcase about our additional requirements, we can try "
"packaging our app again. Ensure that you've saved your changes to "
"`pyproject.toml`, and then update your app again - this time, passing in the "
"`-r` flag. This tells Briefcase to update requirements in the packaged app:"
msgstr ""
"Maintenant que nous avons informé Briefcase de nos exigences "
"supplémentaires, nous pouvons essayer d'empaqueter à nouveau notre "
"application. Assurez-vous que vous avez sauvegardé vos changements dans "
"`pyproject.toml`, puis mettez à jour votre application à nouveau - cette "
"fois-ci, en passant le drapeau `-r`. Cela indique à Briefcase de mettre à "
"jour les exigences dans l'application packagée :"

#: docs/en/tutorial/tutorial-7.md:673
#, fuzzy
msgid ""
"Once you've updated, you can run `briefcase build` and `briefcase run` - and "
"you should see your packaged app, with the new dialog behavior."
msgstr ""
"Une fois la mise à jour effectuée, vous pouvez lancer `briefcase build` et `"
"briefcase run` - et vous devriez voir votre application packagée, avec le "
"nouveau comportement du dialogue."

#: docs/en/tutorial/tutorial-7.md:676
msgid "/// note | Note"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:678
#, fuzzy
msgid ""
"The `-r` option for updating requirements is also honored by the `build` and "
"`run` command, so if you want to update, build, and run in one step, you "
"could use `briefcase run -u -r`."
msgstr ""
"L'option `-r` pour la mise à jour des exigences est également honorée par "
"les commandes `build` et `run`, donc si vous voulez mettre à jour, compiler "
"et exécuter en une seule étape, vous pouvez utiliser `briefcase run -u -r`."

#: docs/en/tutorial/tutorial-7.md:684
msgid "Third-Party Python Packages for Mobile and Web"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:686
msgid ""
"Faker is just one example of a third-party Python package - a collection of "
"code that isn't part what Python provides out of the box. These third-party "
"packages are most commonly distributed using the "
"[Python Package Index (PyPI)]{1}, and installed into your local virtual "
"environment. We've been using `pip` in this tutorial, but there are other "
"options."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:693
#, fuzzy
msgid ""
"On desktop platforms (macOS, Windows, Linux), essentially any package on "
"PyPI package can be installed into your virtual environment, or added to "
"your app's requirements. However, when building an app for mobile or web "
"platforms, [your options are slightly limited]{1}."
msgstr ""
"Sur les plateformes de bureau (macOS, Windows, Linux), tout `pip`-"
"installable peut être ajouté à vos exigences. Sur les plateformes mobiles et "
"web, [vos options sont légèrement limitées]{1}."

#: docs/en/tutorial/tutorial-7.md:699
msgid ""
"In short; any *pure Python* package (i.e. any package created from a project "
"written *only* in Python) can be used without difficulty. Some packages, "
"though, are created from projects that contain both Python and other "
"languages (e.g. C, C++, Rust, etc). Code written in those languages needs to "
"be compiled to platform-specific binary modules before it can be used, and "
"those pre-compiled binary modules are only available on specific platforms. "
"Mobile and web platforms have very different requirements than \"standard\" "
"desktop platforms. At this time, most Python packages don't provide pre-"
"compiled binaries for mobile and web platforms."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:710
msgid ""
"On PyPI, packages are often provided in a pre-built distribution format "
"called *wheels*. To check whether a package is pure Python, look at the PyPI "
"downloads page for the project. If the wheels provided have a `-py3-none-"
"any.whl` suffix (e.g., [Faker]{1}), then they are pure Python wheels. "
"However, if the wheels have version and platform-specific extensions (e.g., "
"[Pillow]{2}, which has wheels with suffixes like "
"`-cp313-cp313-macosx_11_0_arm64.whl` and `-cp39-cp39-win_amd64.whl`), then "
"the wheel *contains a binary component*. That package cannot be installed on "
"mobile or web platforms unless a wheel compatible with those platforms has "
"been provided."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:723
msgid ""
"At this time, *most* binary packages on PyPI don't provide mobile- or web-"
"compatible wheels. To fill this gap, BeeWare provides binaries for some "
"popular binary modules (including `numpy`, `pandas`, and `cryptography`). "
"These wheels are *not* distributed on PyPI, but Briefcase will install those "
"wheels if they're available."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:729
#, fuzzy
msgid ""
"It's *usually* possible to compile binary packages for mobile platforms, but "
"it's not easy to set up -- well outside the scope of an introductory "
"tutorial like this one."
msgstr ""
"BeeWare peut fournir des binaires pour certains modules binaires populaires ("
"y compris `numpy`, `pandas`, et `cryptographie`). Il est *habituellement* "
"possible de compiler des paquets pour les plateformes mobiles, mais ce n'est "
"pas facile à mettre en place -- ce qui sort du cadre d'un tutoriel "
"d'introduction comme celui-ci."

#: docs/en/tutorial/tutorial-7.md:733
msgid "Next steps"
msgstr "Étapes suivantes"

#: docs/en/tutorial/tutorial-7.md:735
msgid ""
"We've now got an app that uses a third-party library! In [Tutorial 8]{1} "
"we'll learn how to ensure our app remains responsive as we add more complex "
"application logic."
msgstr ""

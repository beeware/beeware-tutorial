msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-14 23:09-0400\n"
"PO-Revision-Date: 2024-01-23 12:02+0000\n"
"Last-Translator: gallegonovato <fran-carro@hotmail.es>\n"
"Language-Team: Spanish <https://hosted.weblate.org/projects/beeware/tutorial/"
"tutorial-2/es/>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 3.15.6\n"

#: docs/en/tutorial/tutorial-2.md:1
msgid "Tutorial 2 - Making it interesting { id=\"tutorial-2\" }"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:3
msgid ""
"In [Tutorial 1][tutorial-1], we generated a stub project that was able to "
"run, but we didn't write any code ourselves. Let's take a look at what was "
"generated for us."
msgstr ""
"En [Tutorial 1][tutorial-1], generamos un proyecto stub que era capaz de "
"ejecutarse, pero no escribimos ningún código nosotros mismos. Echemos un "
"vistazo a lo que se generó para nosotros."

#: docs/en/tutorial/tutorial-2.md:7
msgid "What was generated"
msgstr "Qué se generó"

#: docs/en/tutorial/tutorial-2.md:9
msgid ""
"In the `src/helloworld` directory, you should see 3 files: `__init__.py`, "
"`__main__.py` and `app.py`."
msgstr ""
"En el directorio `src/helloworld`, deberías ver 3 archivos: `__init__.py`, "
"`__main__.py` y `app.py`."

#: docs/en/tutorial/tutorial-2.md:12
msgid ""
"`__init__.py` marks the `helloworld` directory as an importable Python "
"module. It is an empty file; the very fact it exists tells the Python "
"interpreter that the `helloworld` directory defines a module."
msgstr ""
"`__init__.py` marca el directorio `helloworld` como un módulo importable de "
"Python. Es un archivo vacío; el mero hecho de que exista le dice al "
"intérprete de Python que el directorio `helloworld` define un módulo."

#: docs/en/tutorial/tutorial-2.md:16
msgid ""
"`__main__.py` marks the `helloworld` module as a special kind of module -an "
"executable module. If you try to run the `helloworld` module using `python -"
"m helloworld`, the `__main__.py` file is where Python will start executing. "
"The contents of `__main__.py` is relatively simple:"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:28
msgid "This file does two things:"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:30
msgid "It imports the `main` method from the `helloworld` app."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:31
#, fuzzy
msgid ""
"Then, it starts the application’s main loop. The main loop is the way a GUI "
"application listens for user input (like mouse clicks and keyboard presses)."
msgstr ""
"Es decir, importa el método `main` de la aplicación `helloworld`; y si se "
"está ejecutando como punto de entrada, llama al método main(), e inicia el "
"bucle principal de la aplicación. El bucle principal es la forma en que una "
"aplicación GUI escucha la entrada del usuario (como clics de ratón y "
"pulsaciones de teclado)."

#: docs/en/tutorial/tutorial-2.md:35
#, fuzzy
msgid ""
"The more interesting file is `app.py` - this contains the logic that creates "
"our application window:"
msgstr ""
"El archivo más interesante es `app.py` - contiene la lógica que crea la "
"ventana de nuestra aplicación:"

#: docs/en/tutorial/tutorial-2.md:54
#, fuzzy
msgid "Let's go through this line by line:"
msgstr "Vamos a ir a través de esta línea por línea:"

#: docs/en/tutorial/tutorial-2.md:61
#, fuzzy
msgid ""
"First, we import the `toga` widget toolkit, as well as some style-related "
"utility constants. Our code doesn't use these yet - but we'll make use of "
"them shortly."
msgstr ""
"En primer lugar, importamos el conjunto de herramientas de widgets `toga`, "
"así como algunas clases de utilidades y constantes relacionadas con el "
"estilo. Nuestro código aún no las utiliza, pero lo haremos en breve."

#: docs/en/tutorial/tutorial-2.md:65
#, fuzzy
msgid "Then, we define a class:"
msgstr "A continuación, definimos una clase:"

#: docs/en/tutorial/tutorial-2.md:71
#, fuzzy
msgid ""
"Each Toga application has a single `toga.App` instance, representing the "
"running entity that is the application. The app may end up managing multiple "
"windows; but for simple applications, there will be a single main window."
msgstr ""
"Cada aplicación Toga tiene una única instancia `toga.App`, que representa la "
"entidad en ejecución que es la aplicación. La app puede acabar gestionando "
"múltiples ventanas; pero para aplicaciones sencillas, habrá una única "
"ventana principal."

#: docs/en/tutorial/tutorial-2.md:76
#, fuzzy
msgid "Next, we define a `startup()` method:"
msgstr "A continuación, definimos un método `startup()`:"

#: docs/en/tutorial/tutorial-2.md:83
#, fuzzy
msgid ""
"The first thing the startup method does is to define a main box. Toga's "
"layout scheme behaves similar to HTML. You build an application by "
"constructing a collection of boxes, each of which contains other boxes, or "
"actual widgets. You then apply styles to these boxes to define how they will "
"consume the available window space."
msgstr ""
"Lo primero que hace el método de inicio es definir una caja principal. El "
"esquema de diseño de Toga se comporta de forma similar a HTML. Construyes "
"una aplicación construyendo una colección de cajas, cada una de las cuales "
"contiene otras cajas, o widgets reales. Luego aplicas estilos a estas cajas "
"para definir cómo consumirán el espacio disponible en la ventana."

#: docs/en/tutorial/tutorial-2.md:89
#, fuzzy
msgid ""
"In this application, we define a single box, but we don't put anything into "
"it."
msgstr ""
"En esta aplicación, definimos una sola caja, pero no ponemos nada en ella."

#: docs/en/tutorial/tutorial-2.md:92
#, fuzzy
msgid "Next, we define a window into which we can put this empty box:"
msgstr ""
"A continuación, definimos una ventana en la que podemos poner esta caja "
"vacía:"

#: docs/en/tutorial/tutorial-2.md:98
#, fuzzy
msgid ""
"This creates an instance of a `toga.MainWindow`, which will have a title "
"matching the application's name. A Main Window is a special kind of window "
"in Toga - it's a window that is closely bound to the life cycle of the app. "
"When the Main Window is closed, the application exits. The Main Window is "
"also the window that has the application's menu (if you're on a platform "
"like Windows where menu bars are part of the window)."
msgstr ""
"Esto crea una instancia de `toga.MainWindow`, que tendrá un título que "
"coincida con el nombre de la aplicación. Una ventana principal es un tipo "
"especial de ventana en Toga - es una ventana que está estrechamente "
"vinculada al ciclo de vida de la aplicación. Cuando la Ventana Principal se "
"cierra, la aplicación sale. La Ventana Principal es también la ventana que "
"tiene el menú de la aplicación (si estás en una plataforma como Windows "
"donde las barras de menú son parte de la ventana)"

#: docs/en/tutorial/tutorial-2.md:106
msgid "/// admonition | Where is my window?"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:108
msgid ""
"If you have made an error in your code, the main window of the app may not "
"display. If this happens, you can type **Ctrl+C** in the terminal where you "
"started the app. This will stop the app. You can then fix the error and "
"restart the app."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:113
#: docs/en/tutorial/tutorial-2.md:148
#: docs/en/tutorial/tutorial-2.md:211
#: docs/en/tutorial/tutorial-2.md:302
#: docs/en/tutorial/tutorial-2.md:313
#: docs/en/tutorial/tutorial-2.md:324
#: docs/en/tutorial/tutorial-2.md:340
#: docs/en/tutorial/tutorial-2.md:348
#: docs/en/tutorial/tutorial-2.md:356
msgid "///"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:115
#, fuzzy
msgid ""
"We then add our empty box as the content of the main window, and instruct "
"the application to show our window:"
msgstr ""
"A continuación añadimos nuestra caja vacía como contenido de la ventana "
"principal, e indicamos a la aplicación que muestre nuestra ventana:"

#: docs/en/tutorial/tutorial-2.md:123
#, fuzzy
msgid ""
"Last of all, we define a `main()` function. This is what creates the "
"instance of our application:"
msgstr ""
"Por último, definimos un método `main()`. Esto es lo que crea la instancia "
"de nuestra aplicación:"

#: docs/en/tutorial/tutorial-2.md:131
#, fuzzy
msgid ""
"This `main()` method is the one that is imported and invoked by `__main__.py`"
". It creates and returns an instance of our `HelloWorld` application."
msgstr ""
"Este método `main()` es el que es importado e invocado por `__main__.py`. "
"Crea y devuelve una instancia de nuestra aplicación `HelloWorld`."

#: docs/en/tutorial/tutorial-2.md:135
#, fuzzy
msgid ""
"That's the simplest possible Toga application. Let's put some of our own "
"content into the application, and make the app do something interesting."
msgstr ""
"Esa es la aplicación Toga más simple posible. Pongamos algo de nuestro "
"propio contenido en la aplicación, y hagamos que la aplicación haga algo "
"interesante."

#: docs/en/tutorial/tutorial-2.md:138
#, fuzzy
msgid "Adding some content of our own"
msgstr "Añadir contenido propio"

#: docs/en/tutorial/tutorial-2.md:140
msgid "Let's do something more interesting with our `HelloWorld` app."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:142
#: docs/en/tutorial/tutorial-2.md:201
msgid "/// note | Note"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:144
#, fuzzy
msgid ""
"When you make these changes, make sure you keep the imports at the top of "
"the file, and the `main()` at the bottom of the file. You only need to "
"update the `HelloWorld` class."
msgstr ""
"No elimine las importaciones en la parte superior del archivo, o el `main()` "
"en la parte inferior. Solo necesitas actualizar la clase `HelloWorld`."

#: docs/en/tutorial/tutorial-2.md:150
#, fuzzy
msgid ""
"Modify your `HelloWorld` class inside `src/helloworld/app.py` so that it "
"looks like this:"
msgstr ""
"Modifica tu clase `HelloWorld` dentro de `src/helloworld/app.py` para que "
"tenga este aspecto:"

#: docs/en/tutorial/tutorial-2.md:185
#, fuzzy
msgid "Let's look in detail at what has changed."
msgstr "Veamos en detalle lo que ha cambiado."

#: docs/en/tutorial/tutorial-2.md:187
#, fuzzy
msgid "We're still creating a main box; however, we are now applying a style:"
msgstr ""
"Seguimos creando una caja principal; sin embargo, ahora estamos aplicando un "
"estilo:"

#: docs/en/tutorial/tutorial-2.md:193
#, fuzzy
msgid ""
"Toga's built-in layout system is called \"Pack\". It behaves a lot like CSS. "
"You define objects in a hierarchy - in HTML, the objects are `<div>`, "
"`<span>`, and other DOM elements; in Toga, they're widgets and boxes. You "
"can then assign styles to the individual elements. In this case, we're "
"indicating that this is a `COLUMN` box - that is, it is a box that will "
"consume all the available width, and will expand its height as content is "
"added, but it will try to be as short as possible."
msgstr ""
"El sistema de diseño integrado de Toga se llama \"Pack\". Se comporta de "
"forma muy parecida a CSS. Defines objetos en una jerarquía - en HTML, los "
"objetos son `<div>`, `<span>`, y otros elementos DOM; en Toga, son widgets y "
"cajas. A continuación, puedes asignar estilos a los elementos individuales. "
"En este caso, estamos indicando que se trata de una caja `COLUMN` - es "
"decir, es una caja que consumirá todo el ancho disponible, y ampliará su "
"altura a medida que se añada contenido, pero intentará ser lo más corta "
"posible."

#: docs/en/tutorial/tutorial-2.md:203
msgid ""
"For more advanced uses, Toga also supports a separate style object, which is "
"used like this:"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:213
#, fuzzy
msgid "Next, we define a couple of widgets:"
msgstr "A continuación, definimos un par de widgets:"

#: docs/en/tutorial/tutorial-2.md:223
#, fuzzy
msgid ""
"Here, we define a Label and a TextInput. Both widgets have styles associated "
"with them; the label will have 5px of margin on its left and right, and no "
"margin on the top and bottom. The TextInput is marked as being flexible - "
"that is, it will absorb all available space in its layout axis."
msgstr ""
"Aquí definimos un Label y un TextInput. Ambos widgets tienen estilos "
"asociados; la etiqueta tendrá 5px de relleno a su izquierda y derecha, y "
"ningún relleno en la parte superior e inferior. El TextInput está marcado "
"como flexible - es decir, absorberá todo el espacio disponible en su eje de "
"diseño."

#: docs/en/tutorial/tutorial-2.md:229
#, fuzzy
msgid ""
"The TextInput is assigned as an instance variable of the class. This gives "
"us easy access to the widget instance - something that we'll use in a moment."
msgstr ""
"El TextInput se asigna como una variable de instancia de la clase. Esto nos "
"da fácil acceso a la instancia del widget - algo que usaremos en un momento."

#: docs/en/tutorial/tutorial-2.md:233
#, fuzzy
msgid "Next, we define a box to hold these two widgets:"
msgstr "A continuación, definimos una caja para alojar estos dos widgets:"

#: docs/en/tutorial/tutorial-2.md:241
#, fuzzy
msgid ""
"The `name_box` is a box just like the main box; however, this time, it's a "
"`ROW` box. That means content will be added horizontally, and it will try to "
"make its width as narrow as possible. The box also has some margin - 5px on "
"all sides."
msgstr ""
"La `caja_de_nombre` es una caja igual que la caja principal; sin embargo, "
"esta vez, es una caja `ROW`. Eso significa que el contenido se añadirá "
"horizontalmente, e intentará que su anchura sea lo más estrecha posible. La "
"caja también tiene algo de relleno - 5px en todos los lados."

#: docs/en/tutorial/tutorial-2.md:246
#, fuzzy
msgid "Now we define a button:"
msgstr "Ahora definimos un botón:"

#: docs/en/tutorial/tutorial-2.md:256
msgid ""
"The button also has 5px of margin on all sides. We also define a *handler* -"
"a method to invoke when the button is pressed."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:259
#, fuzzy
msgid "Then, we add the name box and the button to the main box:"
msgstr ""
"A continuación, añadimos el cuadro de nombre y el botón al cuadro principal:"

#: docs/en/tutorial/tutorial-2.md:266
#, fuzzy
msgid ""
"This completes our layout; the rest of the startup method is as it was "
"previously - defining a `MainWindow`, and assigning the main box as the "
"window's content:"
msgstr ""
"Esto completa nuestro diseño; el resto del método de inicio es como antes - "
"definiendo una MainWindow, y asignando la caja principal como contenido de "
"la ventana:"

#: docs/en/tutorial/tutorial-2.md:276
#, fuzzy
msgid ""
"The last thing we need to do is define the handler for the button. A handler "
"can be any method, generator, or asynchronous coroutine; it accepts the "
"widget that generated the event as an argument, and will be invoked whenever "
"the button is pressed:"
msgstr ""
"Lo último que tenemos que hacer es definir el manejador del botón. Un "
"manejador puede ser cualquier método, generador o co-rutina asíncrona; "
"acepta el widget que generó el evento como argumento, y será invocado cada "
"vez que se pulse el botón:"

#: docs/en/tutorial/tutorial-2.md:286
#, fuzzy
msgid ""
"The body of the method is a simple print statement - however, it will "
"interrogate the current value of the name input, and use that content as the "
"text that is printed."
msgstr ""
"El cuerpo del método es una simple sentencia print - sin embargo, "
"interrogará el valor actual de la entrada name, y usará ese contenido como "
"el texto que se imprime."

#: docs/en/tutorial/tutorial-2.md:290
#, fuzzy
msgid ""
"Now that we've made these changes we can see what they look like by starting "
"the application again. As before, we'll use developer mode:"
msgstr ""
"Ahora que hemos realizado estos cambios podemos ver cómo quedan iniciando de "
"nuevo la aplicación. Como antes, usaremos el modo desarrollador:"

#: docs/en/tutorial/tutorial-2.md:293
#: docs/en/tutorial/tutorial-2.md:334
msgid "/// tab | macOS"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:304
#: docs/en/tutorial/tutorial-2.md:342
msgid "/// tab | Linux"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:315
#: docs/en/tutorial/tutorial-2.md:350
msgid "/// tab | Windows"
msgstr ""

#: docs/en/tutorial/tutorial-2.md:326
#, fuzzy
msgid ""
"You'll notice that this time, it *doesn't* install dependencies. Briefcase "
"can detect that the application has been run before, and to save time, will "
"only run the application. If you add new dependencies to your app, you need "
"to make sure that they're installed by passing in a `-r` option when you run "
"`briefcase dev`."
msgstr ""
"Notarás que esta vez, *no* instala dependencias. Briefcase puede detectar "
"que la aplicación ha sido ejecutada anteriormente, y para ahorrar tiempo, "
"sólo ejecutará la aplicación. Si añades nuevas dependencias a tu aplicación, "
"puedes asegurarte de que se instalan pasando una opción `-r` cuando ejecutes "
"`briefcase dev`."

#: docs/en/tutorial/tutorial-2.md:332
#, fuzzy
msgid "This should open a GUI window:"
msgstr "Esto debería abrir una ventana GUI:"

#: docs/en/tutorial/tutorial-2.md:358
#, fuzzy
msgid ""
"If you enter a name in the text box, and press the GUI button, you should "
"see output appear in the console where you started the application."
msgstr ""
"Si introduce un nombre en el cuadro de texto y pulsa el botón GUI, debería "
"ver aparecer la salida en la consola donde inició la aplicación."

#: docs/en/tutorial/tutorial-2.md:362
msgid ""
"Before continuing, close the app. As with Tutorial 1, you can do this by "
"pressing the close button on the application window, by selecting Quit/Exit "
"from the application's menu, or by typing **Ctrl+C** in the terminal where "
"you ran `briefcase dev`."
msgstr ""

#: docs/en/tutorial/tutorial-2.md:367
msgid "Next steps"
msgstr "Siguientes pasos"

#: docs/en/tutorial/tutorial-2.md:369
#, fuzzy
msgid ""
"We've now got an application that does something a little more interesting. "
"But it only runs on our own computer. Let's package this application for "
"distribution. In [Tutorial 3][tutorial-3], we'll wrap our application up as "
"a standalone installer that we could send to a friend, a customer, or upload "
"to an App Store."
msgstr ""
"Ahora tenemos una aplicación que hace algo un poco más interesante. Pero "
"sólo se ejecuta en nuestro propio ordenador. Vamos a empaquetar esta "
"aplicación para su distribución. En [Tutorial 3][tutorial-3], vamos a "
"empaquetar nuestra aplicación como un instalador independiente que podríamos "
"enviar a un amigo, un cliente, o subir a una App Store."

#, fuzzy
#~ msgid "Tutorial 2 - Making it interesting"
#~ msgstr "Tutorial 2 - Hacerlo interesante"

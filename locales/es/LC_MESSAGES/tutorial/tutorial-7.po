msgid ""
msgstr ""
"Project-Id-Version: BeeWare 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-21 16:18-0400\n"
"PO-Revision-Date: 2025-06-12 02:04+0000\n"
"Last-Translator: Adolfo Jayme Barrientos <fitojb@ubuntu.com>\n"
"Language-Team: Spanish <https://hosted.weblate.org/projects/beeware/tutorial/"
"tutorial-7/es/>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 3.15.6\n"

#: docs/en/tutorial/tutorial-7.md:1
msgid "Tutorial 7 - Get this (third-)party started"
msgstr "Tutorial 7 - Poner en marcha esta (tercera-)fiesta"

#: docs/en/tutorial/tutorial-7.md:3
#, fuzzy
msgid ""
"So far, the app we've built has only used our own code, plus the code "
"provided by BeeWare. However, in a real-world app, you'll likely want to use "
"a third-party library, downloaded from the Python Package Index (PyPI)."
msgstr ""
"Hasta ahora, la aplicación que hemos construido sólo ha utilizado nuestro "
"propio código, además del código proporcionado por BeeWare. Sin embargo, en "
"una aplicación del mundo real, es probable que desees utilizar una "
"biblioteca de terceros, descargada del Python Package Index (PyPI)."

#: docs/en/tutorial/tutorial-7.md:8
#, fuzzy
msgid "Let's modify our app to include a third-party library."
msgstr ""
"Vamos a modificar nuestra aplicación para incluir una biblioteca de terceros."

#: docs/en/tutorial/tutorial-7.md:10
msgid "Adding a package"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:12
msgid ""
"Let's modify our application to say a little bit more than just "
"\"Hi, there!\"."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:15
msgid ""
"To generate some more interesting text for the dialog, we're going to use a "
"library called [Faker]{1}. Faker is a Python package that generates fake "
"content, including names and text blocks. The names and words in the text "
"block are generated from an arbitrary list of words provided by Faker. We're "
"going to use Faker to construct a fake message, as if someone is responding "
"to the user."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:23
#, fuzzy
msgid ""
"We start by adding `faker` to our app. Add an import to the top of the "
"`app.py` to import `faker`:"
msgstr ""
"Vamos a añadir una llamada a la API `httpx` a nuestra aplicación. Añade un "
"import al principio de `app.py` para importar `httpx`:"

#: docs/en/tutorial/tutorial-7.md:30
#, fuzzy
msgid "Then modify the `say_hello()` callback so it looks like this:"
msgstr "Luego modifica el callback `say_hello()` para que se vea así:"

#: docs/en/tutorial/tutorial-7.md:43
#, fuzzy
msgid ""
"Let's run our updated app in Briefcase developer mode to check that our "
"change has worked."
msgstr ""
"Vamos a ejecutar nuestra aplicación actualizada en el modo de desarrollador "
"de Briefcase para comprobar que nuestro cambio ha funcionado."

#: docs/en/tutorial/tutorial-7.md:46
#: docs/en/tutorial/tutorial-7.md:130
#: docs/en/tutorial/tutorial-7.md:207
#: docs/en/tutorial/tutorial-7.md:555
msgid "/// tab | macOS"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:66
#: docs/en/tutorial/tutorial-7.md:88
#: docs/en/tutorial/tutorial-7.md:110
#: docs/en/tutorial/tutorial-7.md:117
#: docs/en/tutorial/tutorial-7.md:124
#: docs/en/tutorial/tutorial-7.md:144
#: docs/en/tutorial/tutorial-7.md:146
#: docs/en/tutorial/tutorial-7.md:162
#: docs/en/tutorial/tutorial-7.md:164
#: docs/en/tutorial/tutorial-7.md:180
#: docs/en/tutorial/tutorial-7.md:182
#: docs/en/tutorial/tutorial-7.md:189
#: docs/en/tutorial/tutorial-7.md:196
#: docs/en/tutorial/tutorial-7.md:245
#: docs/en/tutorial/tutorial-7.md:247
#: docs/en/tutorial/tutorial-7.md:302
#: docs/en/tutorial/tutorial-7.md:342
#: docs/en/tutorial/tutorial-7.md:344
#: docs/en/tutorial/tutorial-7.md:419
#: docs/en/tutorial/tutorial-7.md:467
#: docs/en/tutorial/tutorial-7.md:576
#: docs/en/tutorial/tutorial-7.md:605
#: docs/en/tutorial/tutorial-7.md:628
#: docs/en/tutorial/tutorial-7.md:647
#: docs/en/tutorial/tutorial-7.md:671
#: docs/en/tutorial/tutorial-7.md:682
msgid "///"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:68
#: docs/en/tutorial/tutorial-7.md:148
#: docs/en/tutorial/tutorial-7.md:249
#: docs/en/tutorial/tutorial-7.md:578
msgid "/// tab | Linux"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:90
#: docs/en/tutorial/tutorial-7.md:166
#: docs/en/tutorial/tutorial-7.md:304
#: docs/en/tutorial/tutorial-7.md:607
msgid "/// tab | Windows"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:112
#: docs/en/tutorial/tutorial-7.md:184
#: docs/en/tutorial/tutorial-7.md:346
#: docs/en/tutorial/tutorial-7.md:630
msgid "/// tab | Android"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:114
#: docs/en/tutorial/tutorial-7.md:186
msgid ""
"You can't run an Android app in developer mode - use the instructions for "
"your chosen desktop platform."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:119
#: docs/en/tutorial/tutorial-7.md:191
#: docs/en/tutorial/tutorial-7.md:421
#: docs/en/tutorial/tutorial-7.md:649
msgid "/// tab | iOS"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:121
#: docs/en/tutorial/tutorial-7.md:193
msgid ""
"You can't run an iOS app in developer mode - use the instructions for your "
"chosen desktop platform."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:126
#, fuzzy
msgid ""
"What happened? We've added `faker` to our *code*, but we haven't added it to "
"our development virtual environment. We can fix this by installing `faker` "
"with `pip`, and then re-running `briefcase dev`:"
msgstr ""
"¿Qué ha pasado? Hemos añadido `httpx` a nuestro *código*, pero no lo hemos "
"añadido a nuestro entorno virtual de desarrollo. Podemos solucionarlo "
"instalando `httpx` con `pip`, y volviendo a ejecutar `briefcase dev`:"

#: docs/en/tutorial/tutorial-7.md:137
#: docs/en/tutorial/tutorial-7.md:155
#: docs/en/tutorial/tutorial-7.md:173
#, fuzzy
msgid ""
"When you enter a name and press the button, you should see a dialog that "
"looks something like:"
msgstr ""
"Cuando introduzcas un nombre y pulses el botón, deberías ver un cuadro de "
"diálogo parecido a:"

#: docs/en/tutorial/tutorial-7.md:140
msgid "![Hello World Tutorial 7 dialog, on macOS]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:142
#: docs/en/tutorial/tutorial-7.md:160
#: docs/en/tutorial/tutorial-7.md:178
#: docs/en/tutorial/tutorial-7.md:243
#: docs/en/tutorial/tutorial-7.md:340
msgid "/// caption"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:158
msgid "![Hello World Tutorial 7 dialog, on Linux]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:176
msgid "![Hello World Tutorial 7 dialog, on Windows]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:198
#, fuzzy
msgid ""
"We've now got a working app, using a third party library, running in "
"development mode!"
msgstr ""
"Ya tenemos una aplicación que funciona, que utiliza una biblioteca de "
"terceros y que se ejecuta en modo de desarrollo"

#: docs/en/tutorial/tutorial-7.md:201
#, fuzzy
msgid "Running the updated app"
msgstr "Ejecutar la aplicación actualizada"

#: docs/en/tutorial/tutorial-7.md:203
#, fuzzy
msgid ""
"Let's get this updated application code packaged as a standalone app. Since "
"we've made code changes, we need to follow the same steps as in [Tutorial 4]"
"{1}:"
msgstr ""
"Vamos a empaquetar este código de aplicación actualizado como una aplicación "
"independiente. Como hemos hecho cambios en el código, tenemos que seguir los "
"mismos pasos que en [Tutorial 4][tutorial-4]:"

#: docs/en/tutorial/tutorial-7.md:209
#: docs/en/tutorial/tutorial-7.md:251
#: docs/en/tutorial/tutorial-7.md:306
#: docs/en/tutorial/tutorial-7.md:348
#: docs/en/tutorial/tutorial-7.md:423
#, fuzzy
msgid "Update the code in the packaged app:"
msgstr "Actualice el código en la aplicación empaquetada:"

#: docs/en/tutorial/tutorial-7.md:220
#: docs/en/tutorial/tutorial-7.md:262
#: docs/en/tutorial/tutorial-7.md:317
#: docs/en/tutorial/tutorial-7.md:359
#: docs/en/tutorial/tutorial-7.md:434
#, fuzzy
msgid "Rebuild the app:"
msgstr "Reconstruye la aplicación:"

#: docs/en/tutorial/tutorial-7.md:229
#: docs/en/tutorial/tutorial-7.md:276
#: docs/en/tutorial/tutorial-7.md:326
msgid "And finally, run the app:"
msgstr "Y, por último, ejecute la aplicación:"

#: docs/en/tutorial/tutorial-7.md:238
#: docs/en/tutorial/tutorial-7.md:335
#, fuzzy
msgid ""
"However, when the app runs, you'll see an error in the console, plus a crash "
"dialog:"
msgstr ""
"Sin embargo, cuando la aplicación se ejecute, verás un error en la consola y "
"un cuadro de diálogo de bloqueo:"

#: docs/en/tutorial/tutorial-7.md:241
msgid "![Hello World Tutorial 7 app crash, on macOS]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:285
#: docs/en/tutorial/tutorial-7.md:378
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console:"
msgstr ""
"Sin embargo, cuando la aplicación se ejecute, verás un error en la consola:"

#: docs/en/tutorial/tutorial-7.md:338
msgid "![Hello World Tutorial 7 app crash, on Windows]{1}"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:369
#: docs/en/tutorial/tutorial-7.md:444
msgid "And finally, run the app (selecting a simulator when prompted):"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:454
#, fuzzy
msgid "However, when the app runs, you'll see an error in the console"
msgstr ""
"Sin embargo, cuando la aplicación se ejecute, verás un error en la consola:"

#: docs/en/tutorial/tutorial-7.md:469
msgid ""
"Once again, the app has failed to start because `faker` has not been "
"installed -but why? Haven't we already installed `faker`?"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:472
#, fuzzy
msgid ""
"We have - but only in the development environment. Your development "
"environment is entirely local to your machine - and is only enabled when you "
"explicitly activate it. Although Briefcase has a development mode, the main "
"reason you'd use Briefcase is to package up your code so you can give it to "
"someone else."
msgstr ""
"Sí, pero sólo en el entorno de desarrollo. Tu entorno de desarrollo es "
"totalmente local a tu máquina - y sólo se activa cuando lo activas "
"explícitamente. Aunque Briefcase tiene un modo de desarrollo, la principal "
"razón por la que utilizarías Briefcase es para empaquetar tu código y poder "
"dárselo a otra persona."

#: docs/en/tutorial/tutorial-7.md:478
#, fuzzy
msgid ""
"The only way to guarantee that someone else will have a Python environment "
"that contains everything it needs is to build a completely isolated Python "
"environment. This means there's a completely isolated Python install, and a "
"completely isolated set of dependencies. This is what Briefcase is building "
"when you run `briefcase build` - an isolated Python environment. This also "
"explains why `faker` isn't installed - it has been installed in your "
"*development* environment, but not in the packaged app."
msgstr ""
"La única forma de garantizar que alguien más tenga un entorno Python que "
"contenga todo lo que necesita es construir un entorno Python completamente "
"aislado. Esto significa que hay una instalación de Python completamente "
"aislada, y un conjunto de dependencias completamente aislado. Esto es lo que "
"Briefcase construye cuando ejecutas `briefcase build` - un entorno Python "
"aislado. Esto también explica por qué `httpx` no está instalado - ha sido "
"instalado en tu entorno de *desarrollo*, pero no en la aplicación "
"empaquetada."

#: docs/en/tutorial/tutorial-7.md:487
#, fuzzy
msgid "So - we need to tell Briefcase that our app has an external dependency."
msgstr ""
"Por lo tanto, tenemos que decirle a Briefcase que nuestra aplicación tiene "
"una dependencia externa."

#: docs/en/tutorial/tutorial-7.md:489
#, fuzzy
msgid "Updating dependencies"
msgstr "Actualización de las dependencias"

#: docs/en/tutorial/tutorial-7.md:491
#, fuzzy
msgid ""
"In the root directory of your app, there is a file named `pyproject.toml`. "
"This file contains all the app configuration details that you provided when "
"you originally ran `briefcase new`."
msgstr ""
"En el directorio raíz de tu aplicación, hay un archivo llamado "
"`pyproject.toml`. Este archivo contiene todos los detalles de configuración "
"de la aplicación que proporcionaste cuando ejecutaste `briefcase new`."

#: docs/en/tutorial/tutorial-7.md:495
#, fuzzy
msgid ""
"`pyproject.toml` is broken up into sections; one of the sections describes "
"the settings for your app:"
msgstr ""
"`pyproject.toml` está dividido en secciones; una de las secciones describe "
"la configuración de tu aplicación:"

#: docs/en/tutorial/tutorial-7.md:508
#, fuzzy
msgid ""
"The `requires` option describes the dependencies of our application. It is a "
"list of strings, specifying libraries (and, optionally, versions) of "
"libraries that you want to be included with your app."
msgstr ""
"La opción `requires` describe las dependencias de nuestra aplicación. Es una "
"lista de cadenas, especificando librerías (y, opcionalmente, versiones) de "
"librerías que quieres que se incluyan con tu app."

#: docs/en/tutorial/tutorial-7.md:512
#, fuzzy
msgid "Modify the `requires` setting so that it reads:"
msgstr "Modifique la configuración `requires` para que diga:"

#: docs/en/tutorial/tutorial-7.md:520
#, fuzzy
msgid ""
"By adding this setting, we're telling Briefcase \"when you build my app, run "
"`pip install faker` into the application bundle\". Anything that would be "
"legal input to `pip install` can be used here - so, you could specify:"
msgstr ""
"Al añadir esta opción, le estamos diciendo a Briefcase \"cuando compiles mi "
"aplicación, ejecuta `pip install httpx` en el paquete de la aplicación\". "
"Cualquier cosa que sea una entrada legal para `pip install` se puede "
"utilizar aquí - por lo que podría especificar:"

#: docs/en/tutorial/tutorial-7.md:525
#, fuzzy
msgid "A specific library version (e.g., `\"faker==37.3.0\"`);"
msgstr ""
"Una versión específica de la biblioteca (por ejemplo, `\"httpx==0.19.0\"`);"

#: docs/en/tutorial/tutorial-7.md:526
#, fuzzy
msgid "A range of library versions (e.g., `\"faker>=37\"`);"
msgstr ""
"Un rango de versiones de la biblioteca (por ejemplo, `\"httpx>=0.19\"`);"

#: docs/en/tutorial/tutorial-7.md:527
#, fuzzy
msgid ""
"A path to a git repository (e.g., `\"git+https://github.com/joke2k/faker/\""
"`); or"
msgstr ""
"Una ruta a un repositorio git (por ejemplo, `"
"\"git+https://github.com/encode/httpx\"`); o bien"

#: docs/en/tutorial/tutorial-7.md:529
#, fuzzy
msgid ""
"A local file path (However - be warned: if you give your code to someone "
"else, this path probably won't exist on their machine!)"
msgstr ""
"Una ruta de archivo local (No obstante, ten cuidado: si entregas tu código a "
"otra persona, es probable que esta ruta no exista en su máquina)"

#: docs/en/tutorial/tutorial-7.md:532
#, fuzzy
msgid ""
"Further down in `pyproject.toml`, you'll notice other sections that are "
"operating system dependent, like `[tool.briefcase.app.helloworld.macOS]` and "
"`[tool.briefcase.app.helloworld.windows]`. These sections *also* have a "
"`requires` setting. These settings allow you to define additional platform-"
"specific dependencies - so, for example, if you need a platform-specific "
"library to handle some aspect of your app, you can specify that library in "
"the platform-specific `requires` section, and that setting will only be used "
"for that platform. You will notice that the `toga` libraries are all "
"specified in the platform-specific `requires` section - this is because the "
"libraries needed to display a user interface are platform specific."
msgstr ""
"Más abajo en `pyproject.toml`, verás otras secciones que dependen del "
"sistema operativo, como `[tool.briefcase.app.helloworld.macOS]` y `"
"[tool.briefcase.app.helloworld.windows]`. Estas secciones también tienen una "
"configuración `requires`. Estas opciones te permiten definir dependencias "
"adicionales específicas de la plataforma; así, por ejemplo, si necesitas una "
"biblioteca específica de la plataforma para manejar algún aspecto de tu "
"aplicación, puedes especificar esa biblioteca en la sección `requires` "
"específica de la plataforma, y esa opción sólo se utilizará para esa "
"plataforma. Notarás que las librerías `toga` están todas especificadas en la "
"sección `requires` específica de la plataforma - esto es porque las "
"librerías necesarias para mostrar una interfaz de usuario son específicas de "
"la plataforma."

#: docs/en/tutorial/tutorial-7.md:544
#, fuzzy
msgid ""
"In our case, we want `faker` to be installed on all platforms, so we use the "
"app-level `requires` setting. The app-level dependencies will always be "
"installed; the platform-specific dependencies are installed *in addition* to "
"the app-level ones."
msgstr ""
"En nuestro caso, queremos que `httpx` se instale en todas las plataformas, "
"por lo que utilizamos el parámetro `requires` a nivel de aplicación. Las "
"dependencias a nivel de aplicación siempre se instalarán; las dependencias "
"específicas de la plataforma se instalan *además* de las dependencias a "
"nivel de aplicación."

#: docs/en/tutorial/tutorial-7.md:549
#, fuzzy
msgid ""
"Now that we've told Briefcase about our additional requirements, we can try "
"packaging our app again. Ensure that you've saved your changes to "
"`pyproject.toml`, and then update your app again - this time, passing in the "
"`-r` flag. This tells Briefcase to update requirements in the packaged app:"
msgstr ""
"Ahora que hemos informado a Briefcase sobre nuestros requisitos adicionales, "
"podemos intentar empaquetar nuestra aplicación de nuevo. Asegúrate de que "
"has guardado los cambios en `pyproject.toml`, y luego actualiza tu "
"aplicación de nuevo - esta vez, introduciendo la bandera `-r`. Esto le dice "
"a Briefcase que actualice los requisitos en la aplicación empaquetada:"

#: docs/en/tutorial/tutorial-7.md:673
#, fuzzy
msgid ""
"Once you've updated, you can run `briefcase build` and `briefcase run` - and "
"you should see your packaged app, with the new dialog behavior."
msgstr ""
"Una vez que haya actualizado, puede ejecutar `briefcase build` y `briefcase "
"run` - y usted debe ver su aplicación empaquetada, con el nuevo "
"comportamiento de diálogo."

#: docs/en/tutorial/tutorial-7.md:676
msgid "/// note | Note"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:678
#, fuzzy
msgid ""
"The `-r` option for updating requirements is also honored by the `build` and "
"`run` command, so if you want to update, build, and run in one step, you "
"could use `briefcase run -u -r`."
msgstr ""
"La opción `-r` para actualizar los requisitos también es respetada por los "
"comandos `build` y `run`, así que si quieres actualizar, construir y "
"ejecutar en un solo paso, puedes usar `briefcase run -u -r`."

#: docs/en/tutorial/tutorial-7.md:684
msgid "Third-Party Python Packages for Mobile and Web"
msgstr ""

#: docs/en/tutorial/tutorial-7.md:686
msgid ""
"Faker is just one example of a third-party Python package - a collection of "
"code that isn't part what Python provides out of the box. These third-party "
"packages are most commonly distributed using the "
"[Python Package Index (PyPI)]{1}, and installed into your local virtual "
"environment. We've been using `pip` in this tutorial, but there are other "
"options."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:693
#, fuzzy
msgid ""
"On desktop platforms (macOS, Windows, Linux), essentially any package on "
"PyPI package can be installed into your virtual environment, or added to "
"your app's requirements. However, when building an app for mobile or web "
"platforms, [your options are slightly limited]{1}."
msgstr ""
"En plataformas de escritorio (macOS, Windows, Linux), se puede añadir "
"cualquier `pip`-instalable a sus requisitos. En plataformas móviles y web, "
"[las opciones son ligeramente limitadas]{1}."

#: docs/en/tutorial/tutorial-7.md:699
msgid ""
"In short; any *pure Python* package (i.e. any package created from a project "
"written *only* in Python) can be used without difficulty. Some packages, "
"though, are created from projects that contain both Python and other "
"languages (e.g. C, C++, Rust, etc). Code written in those languages needs to "
"be compiled to platform-specific binary modules before it can be used, and "
"those pre-compiled binary modules are only available on specific platforms. "
"Mobile and web platforms have very different requirements than \"standard\" "
"desktop platforms. At this time, most Python packages don't provide pre-"
"compiled binaries for mobile and web platforms."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:710
msgid ""
"On PyPI, packages are often provided in a pre-built distribution format "
"called *wheels*. To check whether a package is pure Python, look at the PyPI "
"downloads page for the project. If the wheels provided have a `-py3-none-"
"any.whl` suffix (e.g., [Faker]{1}), then they are pure Python wheels. "
"However, if the wheels have version and platform-specific extensions (e.g., "
"[Pillow]{2}, which has wheels with suffixes like "
"`-cp313-cp313-macosx_11_0_arm64.whl` and `-cp39-cp39-win_amd64.whl`), then "
"the wheel *contains a binary component*. That package cannot be installed on "
"mobile or web platforms unless a wheel compatible with those platforms has "
"been provided."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:723
msgid ""
"At this time, *most* binary packages on PyPI don't provide mobile- or web-"
"compatible wheels. To fill this gap, BeeWare provides binaries for some "
"popular binary modules (including `numpy`, `pandas`, and `cryptography`). "
"These wheels are *not* distributed on PyPI, but Briefcase will install those "
"wheels if they're available."
msgstr ""

#: docs/en/tutorial/tutorial-7.md:729
#, fuzzy
msgid ""
"It's *usually* possible to compile binary packages for mobile platforms, but "
"it's not easy to set up -- well outside the scope of an introductory "
"tutorial like this one."
msgstr ""
"BeeWare puede proporcionar binarios para algunos módulos binarios populares ("
"incluyendo `numpy`, `pandas`, y `cryptography`). Es *normalmente* posible "
"compilar paquetes para plataformas móviles, pero no es fácil de configurar - "
"fuera del alcance de un tutorial introductorio como éste."

#: docs/en/tutorial/tutorial-7.md:733
msgid "Next steps"
msgstr "Siguientes pasos"

#: docs/en/tutorial/tutorial-7.md:735
msgid ""
"We've now got an app that uses a third-party library! In [Tutorial 8]{1} "
"we'll learn how to ensure our app remains responsive as we add more complex "
"application logic."
msgstr ""
